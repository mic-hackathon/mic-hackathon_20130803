/*******************************************************************
  This file has been automatically generated by ispc
  DO NOT EDIT THIS FILE DIRECTLY
 *******************************************************************/

/* Provide Declarations */
#include <stdarg.h>
#include <setjmp.h>
#include <limits.h>
#include <stdlib.h>
#ifdef _MSC_VER
  #define NOMINMAX
  #include <windows.h>
#endif // _MSC_VER
#include <stdlib.h>
#include <stdint.h>
/* get a declaration for alloca */
#ifdef _MSC_VER
  #include <malloc.h>
  #define alloca _alloca
#else
  #include <alloca.h>
#endif

#undef ISPC_FAST_MATH
#include "knc.h"

/* Basic Library Function Declarations */
extern "C" {
int puts(unsigned char *);
unsigned int putchar(unsigned int);
int fflush(void *);
int printf(const unsigned char *, ...);
uint8_t *memcpy(uint8_t *, uint8_t *, uint64_t );
uint8_t *memset(uint8_t *, uint8_t, uint64_t );
void memset_pattern16(void *, const void *, uint64_t );
}

#ifndef __GNUC__  /* Can only support "linkonce" vars with GCC */
#define __attribute__(X)
#endif

#if defined(__GNUC__) && defined(__APPLE_CC__)
#define __EXTERNAL_WEAK__ __attribute__((weak_import))
#elif defined(__GNUC__)
#define __EXTERNAL_WEAK__ __attribute__((weak))
#else
#define __EXTERNAL_WEAK__
#endif

#if defined(__GNUC__) && defined(__APPLE_CC__)
#define __ATTRIBUTE_WEAK__
#elif defined(__GNUC__)
#define __ATTRIBUTE_WEAK__ __attribute__((weak))
#else
#define __ATTRIBUTE_WEAK__
#endif

#if defined(__GNUC__)
#define __HIDDEN__ __attribute__((visibility("hidden")))
#endif

#if (defined(__GNUC__) || defined(__clang__)) && !defined(__INTEL_COMPILER)
#define LLVM_NAN(NanStr)   __builtin_nan(NanStr)   /* Double */
#define LLVM_NANF(NanStr)  __builtin_nanf(NanStr)  /* Float */
#define LLVM_NANS(NanStr)  __builtin_nans(NanStr)  /* Double */
#define LLVM_NANSF(NanStr) __builtin_nansf(NanStr) /* Float */
#define LLVM_INF           __builtin_inf()         /* Double */
#define LLVM_INFF          __builtin_inff()        /* Float */
//#define LLVM_PREFETCH(addr,rw,locality) __builtin_prefetch(addr,rw,locality)
//#define __ATTRIBUTE_CTOR__ __attribute__((constructor))
//#define __ATTRIBUTE_DTOR__ __attribute__((destructor))
#elif defined(_MSC_VER) || defined(__INTEL_COMPILER)
#include <limits>
#define LLVM_NAN(NanStr)   std::numeric_limits<double>::quiet_NaN()
#define LLVM_NANF(NanStr)  std::numeric_limits<float>::quiet_NaN()
#define LLVM_NANS(NanStr)  std::numeric_limits<double>::signaling_NaN()
#define LLVM_NANSF(NanStr) std::numeric_limits<float>::signaling_NaN()
#define LLVM_INF           std::numeric_limits<double>::infinity()
#define LLVM_INFF          std::numeric_limits<float>::infinity()
//#define LLVM_PREFETCH(addr,rw,locality)            /* PREFETCH */
//#define __ATTRIBUTE_CTOR__
//#define __ATTRIBUTE_DTOR__
#else
#error "Not MSVC, clang, or g++?"
#endif

#if (defined(__GNUC__) || defined(__clang__))
#define LLVM_ASM(X) __asm(X)
#endif

#if defined(__clang__) || defined(__INTEL_COMPILER) || (__GNUC__ < 4) /* Old GCCs, or compilers not GCC */ 
#define __builtin_stack_save() 0   /* not implemented */
#define __builtin_stack_restore(X) /* noop */
#endif

#define CODE_FOR_MAIN() /* Any target-specific code for main()*/

#ifndef __cplusplus
typedef unsigned char bool;
#endif


/* Support for floating point constants */
typedef uint64_t ConstantDoubleTy;
typedef uint32_t ConstantFloatTy;
typedef struct { unsigned long long f1; unsigned short f2; unsigned short pad[3]; } ConstantFP80Ty;
typedef struct { uint64_t f1, f2; } ConstantFP128Ty;


/* Global Declarations */


/* Helper union for bitcasts */
typedef union {
  unsigned int Int32;
  unsigned long long Int64;
  float Float;
  double Double;
} llvmBitCastUnion;
/* Structure and array forward declarations */
struct l_unnamed_0;

/* Structure and array contents */
struct l_unnamed_0 {
  static l_unnamed_0 init(float v0, float v1, float v2, float v3, uint32_t v4, uint32_t v5, uint32_t v6, uint32_t v7, uint32_t *v8, __vec16_i1 v9) {
    l_unnamed_0 ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    ret.field3 = v3;
    ret.field4 = v4;
    ret.field5 = v5;
    ret.field6 = v6;
    ret.field7 = v7;
    ret.field8 = v8;
    ret.field9 = v9;
    return ret;
  }
  float field0;
  float field1;
  float field2;
  float field3;
  uint32_t field4;
  uint32_t field5;
  uint32_t field6;
  uint32_t field7;
  uint32_t *field8;
  __vec16_i1 field9;
};



/* Function Declarations */
extern "C" {
uint8_t *ISPCAlloc(uint8_t **, uint64_t , uint32_t );
void ISPCLaunch(uint8_t **, uint8_t *, uint8_t *, uint32_t );
void ISPCSync(uint8_t *);
void mandelbrot_scanline___unfunfunfunfuniuniuniuniun_3C_uni_3E_(l_unnamed_0 *, uint32_t , uint32_t , uint32_t , uint32_t );
void mandelbrot_ispc___unfunfunfunfuniuniuniun_3C_uni_3E_(float x0_, float y0_, float x1_, float y1_, uint32_t width_, uint32_t height_, uint32_t maxIterations_, uint32_t *output_, __vec16_i1 __mask_);
void mandelbrot_ispc(float x0_, float y0_, float x1_, float y1_, uint32_t width_, uint32_t height_, uint32_t maxIterations_, uint32_t *output_);
}



/* Function Bodies */
template <typename A, typename B> static inline int llvm_fcmp_ord(A X, B Y) { return X == X && Y == Y; }
template <typename A, typename B> static inline int llvm_fcmp_uno(A X, B Y) { return X != X || Y != Y; }
template <typename A, typename B> static inline int llvm_fcmp_ueq(A X, B Y) { return X == Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_une(A X, B Y) { return X != Y; }
template <typename A, typename B> static inline int llvm_fcmp_ult(A X, B Y) { return X <  Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_ugt(A X, B Y) { return X >  Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_ule(A X, B Y) { return X <= Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_uge(A X, B Y) { return X >= Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_oeq(A X, B Y) { return X == Y ; }
template <typename A, typename B> static inline int llvm_fcmp_one(A X, B Y) { return X != Y && llvm_fcmp_ord(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_olt(A X, B Y) { return X <  Y ; }
template <typename A, typename B> static inline int llvm_fcmp_ogt(A X, B Y) { return X >  Y ; }
template <typename A, typename B> static inline int llvm_fcmp_ole(A X, B Y) { return X <= Y ; }
template <typename A, typename B> static inline int llvm_fcmp_oge(A X, B Y) { return X >= Y ; }
template <typename A> A *Memset(A *ptr, int count, size_t len) { return (A *)memset(ptr, count, len); }

static const int32_t __attribute__ ((aligned(64))) VectorConstant0[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant1[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant2[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant3[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant4[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant5[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const float __attribute__ ((aligned(64))) VectorConstant6[] = { 0x0p+0, 0x1p+0, 0x1p+1, 0x1.8p+1, 0x1p+2, 0x1.4p+2, 0x1.8p+2, 0x1.cp+2, 0x1p+3, 0x1.2p+3, 0x1.4p+3, 0x1.6p+3, 0x1.8p+3, 0x1.ap+3, 0x1.cp+3, 0x1.ep+3,  };

void mandelbrot_scanline___unfunfunfunfuniuniuniuniun_3C_uni_3E_(l_unnamed_0 *tmp__1_, uint32_t tmp__2_, uint32_t tmp__3_, uint32_t tmp__4_, uint32_t tmp__5_) {
  uint32_t width10_;
  uint32_t height12_;
  uint32_t span14_;
  uint32_t mul_taskIndex_load_span_load_;
  uint32_t calltmp_2e_i_;
  uint32_t aligned_end32_;
  __vec16_i32 mul_taskIndex_load_span_load_smear_;
  uint32_t *output18_;
  uint32_t maxIterations16_;
  float dy8_;
  float y06_;
  float dx4_;
  float x02_;
  __vec16_i32 width10_smear_;
  __vec16_f x02_smear_;
  __vec16_f dx4_smear_;
  __vec16_f y06_smear_;
  __vec16_f dy8_smear_;
  __vec16_i32 maxIterations16_smear_;
  __vec16_i1 less_i_load_count_load_2e_i129197_;
  uint8_t *output_load100_ptr2int_2void_;
  uint64_t tmp__6_;
  __vec16_i32 new_counter74_2e_us_smear_;
  __vec16_i32 iter_val79_2e_us_;
  __vec16_i1 cmp82_2e_us_;
  __vec16_f add_x0_load88_broadcast_mul_xi_load89_to_float_dx_load90_broadcast_2e_us_;
  __vec16_f add_y0_load92_broadcast_mul_yi_load93_to_float_dy_load94_broadcast_2e_us_;
  uint32_t add_mul_yi_load96_width_load97_broadcast_xi_load98_2e_elt0_2e_us_;
  __vec16_i1 internal_mask_26_function_mask10_2e_i199_2e_us_and_mask_;
  bool internal_mask_26_function_mask10_any_2e_i131200_2e_us_;
  __vec16_i32 v1_2e_i177180_2e_lcssa_2e_us_;
  __vec16_i32 v1_2e_i177180_2e_lcssa_2e_us___PHI;
  uint32_t new_counter_2e_us_;
  __vec16_i32 new_counter_2e_us_smear_;
  __vec16_i1 oldMask_26_test_2e_i130207_2e_us_;
  __vec16_i1 oldMask_26_test_2e_i130207_2e_us___PHI;
  __vec16_i1 less_i_load_count_load_2e_i129206_2e_us_;
  __vec16_i1 less_i_load_count_load_2e_i129206_2e_us___PHI;
  __vec16_i1 internal_mask_memory_2e_0_2e_i127205_2e_us_;
  __vec16_i1 internal_mask_memory_2e_0_2e_i127205_2e_us___PHI;
  __vec16_i1 break_lanes_memory_2e_0_2e_i126204_2e_us_;
  __vec16_i1 break_lanes_memory_2e_0_2e_i126204_2e_us___PHI;
  __vec16_f z_re_2e_0_2e_i125203_2e_us_;
  __vec16_f z_re_2e_0_2e_i125203_2e_us___PHI;
  __vec16_f add_c_im_load44_new_im_load_2e_i163179202_2e_us_;
  __vec16_f add_c_im_load44_new_im_load_2e_i163179202_2e_us___PHI;
  __vec16_i32 v1_2e_i177180201_2e_us_;
  __vec16_i32 v1_2e_i177180201_2e_us___PHI;
  __vec16_i1 internal_mask_26_function_mask12_2e_i_2e_us_and_mask_;
  __vec16_f mul_z_re_load_z_re_load13_2e_i138_2e_us_;
  __vec16_f mul_z_im_load_z_im_load14_2e_i140_2e_us_;
  __vec16_i1 oldMask_26_test16_2e_i143_2e_us_and_mask_;
  __vec16_i1 mask_7c_break_mask_2e_i144_2e_us_;
  __vec16_i1 finished_26_func_2e_i_2e_us_and_mask_;
  uint64_t finished_26_func_movmsk_2e_i146_2e_us_;
  uint64_t internal_mask_26_function_mask12_movmsk_2e_i147_2e_us_;
  __vec16_i1 new_mask28_2e_i155_2e_us215_;
  __vec16_f add_c_re_load42_new_re_load_2e_i162_2e_us_;
  __vec16_f add_c_im_load44_new_im_load_2e_i163_2e_us_;
  __vec16_f add_c_im_load44_new_im_load_2e_i163178_2e_us_;
  __vec16_f add_c_im_load44_new_im_load_2e_i163178_2e_us___PHI;
  __vec16_f z_re_2e_1_2e_i133_2e_us_;
  __vec16_f z_re_2e_1_2e_i133_2e_us___PHI;
  __vec16_i1 internal_mask_memory_2e_1_2e_i134_2e_us_;
  __vec16_i1 internal_mask_memory_2e_1_2e_i134_2e_us___PHI;
  __vec16_i32 v1_2e_i177_2e_us_;
  __vec16_i1 less_i_load_count_load_2e_i129_2e_us_;
  __vec16_i1 oldMask_26_test_2e_i130_2e_us_and_mask_;
  __vec16_i1 internal_mask_26_function_mask10_2e_i_2e_us_and_mask_;
  bool internal_mask_26_function_mask10_any_2e_i131_2e_us_;
  uint32_t counter33_2e_3195_2e_us_;
  uint32_t counter33_2e_3195_2e_us___PHI;
  __vec16_i32 counter33_2e_3195_2e_us_smear_;
  __vec16_f add_x0_load_broadcast_mul_xi_load59_to_float_dx_load_broadcast_2e_us_;
  uint32_t add_mul_yi_load60_width_load61_broadcast_xi_load62_2e_elt0_2e_us_;
  bool internal_mask_26_function_mask10_any_2e_i186_2e_us_;
  __vec16_i32 v1_2e_i183_2e_lcssa_2e_us_;
  __vec16_i32 v1_2e_i183_2e_lcssa_2e_us___PHI;
  uint32_t new_counter74_2e_us_;
  __vec16_i1 oldMask_26_test_2e_i193_2e_us_;
  __vec16_i1 oldMask_26_test_2e_i193_2e_us___PHI;
  __vec16_i1 less_i_load_count_load_2e_i192_2e_us_;
  __vec16_i1 less_i_load_count_load_2e_i192_2e_us___PHI;
  __vec16_i1 internal_mask_memory_2e_0_2e_i191_2e_us_;
  __vec16_i1 internal_mask_memory_2e_0_2e_i191_2e_us___PHI;
  __vec16_i1 break_lanes_memory_2e_0_2e_i190_2e_us_;
  __vec16_i1 break_lanes_memory_2e_0_2e_i190_2e_us___PHI;
  __vec16_f z_re_2e_0_2e_i189_2e_us_;
  __vec16_f z_re_2e_0_2e_i189_2e_us___PHI;
  __vec16_f add_c_im_load44_new_im_load_2e_i182188_2e_us_;
  __vec16_f add_c_im_load44_new_im_load_2e_i182188_2e_us___PHI;
  __vec16_i32 v1_2e_i183187_2e_us_;
  __vec16_i32 v1_2e_i183187_2e_us___PHI;
  __vec16_f mul_z_re_load_z_re_load13_2e_i_2e_us_;
  __vec16_f mul_z_im_load_z_im_load14_2e_i_2e_us_;
  __vec16_i1 oldMask_26_test16_2e_i_2e_us_and_mask_;
  __vec16_i1 mask_7c_break_mask_2e_i_2e_us_;
  uint64_t finished_26_func_movmsk_2e_i_2e_us_;
  uint64_t internal_mask_26_function_mask12_movmsk_2e_i_2e_us_;
  __vec16_i1 new_mask28_2e_i_2e_us217_;
  __vec16_f add_c_re_load42_new_re_load_2e_i_2e_us_;
  __vec16_f add_c_im_load44_new_im_load_2e_i_2e_us_;
  __vec16_f add_c_im_load44_new_im_load_2e_i181_2e_us_;
  __vec16_f add_c_im_load44_new_im_load_2e_i181_2e_us___PHI;
  __vec16_f z_re_2e_1_2e_i_2e_us_;
  __vec16_f z_re_2e_1_2e_i_2e_us___PHI;
  __vec16_i1 internal_mask_memory_2e_1_2e_i_2e_us_;
  __vec16_i1 internal_mask_memory_2e_1_2e_i_2e_us___PHI;
  __vec16_i32 v1_2e_i_2e_us_;
  __vec16_i1 less_i_load_count_load_2e_i_2e_us_;
  __vec16_i1 oldMask_26_test_2e_i_2e_us_and_mask_;
  bool internal_mask_26_function_mask10_any_2e_i_2e_us_;
  __vec16_i32 smear_counter213_2e_us_;
  __vec16_i32 smear_counter213_2e_us___PHI;
  uint32_t counter_2e_0212_2e_us_;
  uint32_t counter_2e_0212_2e_us___PHI;
  __vec16_f add_y0_load_broadcast_mul_yi_load_to_float_dy_load_broadcast_2e_us_;
  uint32_t mul_yi_load60_width_load61_broadcast_2e_elt0_2e_us_;
  __vec16_f add_c_im_load44_new_im_load_2e_i163178_;
  __vec16_f add_c_im_load44_new_im_load_2e_i163178___PHI;
  __vec16_f z_re_2e_1_2e_i133_;
  __vec16_f z_re_2e_1_2e_i133___PHI;
  __vec16_i1 internal_mask_memory_2e_1_2e_i134_;
  __vec16_i1 internal_mask_memory_2e_1_2e_i134___PHI;
  __vec16_i32 v1_2e_i177_;
  __vec16_i1 less_i_load_count_load_2e_i129_;
  __vec16_i1 oldMask_26_test_2e_i130_and_mask_;
  __vec16_i1 internal_mask_26_function_mask10_2e_i_and_mask_;
  bool internal_mask_26_function_mask10_any_2e_i131_;
  __vec16_i1 oldMask_26_test_2e_i130207_;
  __vec16_i1 oldMask_26_test_2e_i130207___PHI;
  __vec16_i1 less_i_load_count_load_2e_i129206_;
  __vec16_i1 less_i_load_count_load_2e_i129206___PHI;
  __vec16_i1 internal_mask_memory_2e_0_2e_i127205_;
  __vec16_i1 internal_mask_memory_2e_0_2e_i127205___PHI;
  __vec16_i1 break_lanes_memory_2e_0_2e_i126204_;
  __vec16_i1 break_lanes_memory_2e_0_2e_i126204___PHI;
  __vec16_f z_re_2e_0_2e_i125203_;
  __vec16_f z_re_2e_0_2e_i125203___PHI;
  __vec16_f add_c_im_load44_new_im_load_2e_i163179202_;
  __vec16_f add_c_im_load44_new_im_load_2e_i163179202___PHI;
  __vec16_i32 v1_2e_i177180201_;
  __vec16_i32 v1_2e_i177180201___PHI;
  __vec16_i1 internal_mask_26_function_mask12_2e_i_and_mask_;
  __vec16_f mul_z_re_load_z_re_load13_2e_i138_;
  __vec16_f mul_z_im_load_z_im_load14_2e_i140_;
  __vec16_i1 oldMask_26_test16_2e_i143_and_mask_;
  __vec16_i1 mask_7c_break_mask_2e_i144_;
  __vec16_i1 finished_26_func_2e_i_and_mask_;
  uint64_t finished_26_func_movmsk_2e_i146_;
  uint64_t internal_mask_26_function_mask12_movmsk_2e_i147_;
  __vec16_i1 new_mask28_2e_i155219_;
  __vec16_f add_c_re_load42_new_re_load_2e_i162_;
  __vec16_f add_c_im_load44_new_im_load_2e_i163_;
  __vec16_i32 v1_2e_i177180_2e_lcssa_;
  __vec16_i32 v1_2e_i177180_2e_lcssa___PHI;
  uint64_t indvars_2e_iv_2e_next_;
  uint32_t tmp__7_;
  __vec16_i32 _smear_;
  uint64_t indvars_2e_iv_;
  uint64_t indvars_2e_iv___PHI;
  __vec16_i32 smear_counter213_;
  __vec16_i32 smear_counter213___PHI;
  __vec16_i1 cmp82_;
  __vec16_f add_x0_load88_broadcast_mul_xi_load89_to_float_dx_load90_broadcast_;
  __vec16_f add_y0_load92_broadcast_mul_yi_load93_to_float_dy_load94_broadcast_;
  uint32_t mul_yi_load96_width_load97_broadcast_2e_elt0_;
  __vec16_i1 internal_mask_26_function_mask10_2e_i199_and_mask_;
  bool internal_mask_26_function_mask10_any_2e_i131200_;

  width10_ = *((&tmp__1_->field4));
  height12_ = *((&tmp__1_->field5));
  span14_ = *((&tmp__1_->field6));
  mul_taskIndex_load_span_load_ = ((uint32_t )(((uint32_t )span14_) * ((uint32_t )tmp__4_)));
  calltmp_2e_i_ = __min_uniform_uint32((((uint32_t )(((uint32_t )span14_) * ((uint32_t )(((uint32_t )(((uint32_t )tmp__4_) + ((uint32_t )1u)))))))), height12_);
  aligned_end32_ = ((uint32_t )(((uint32_t )width10_) - ((uint32_t )(((int32_t )(((int32_t )width10_) % ((int32_t )16u)))))));
  mul_taskIndex_load_span_load_smear_ = __smear_i32<__vec16_i32>(mul_taskIndex_load_span_load_);
  if ((((int32_t )mul_taskIndex_load_span_load_) < ((int32_t )calltmp_2e_i_))) {
    goto outer_not_in_extras_2e_preheader_2e_lr_2e_ph_label;
  } else {
    goto foreach_reset_label;
  }

outer_not_in_extras_2e_preheader_2e_lr_2e_ph_label: {
  output18_ = *((&tmp__1_->field8));
  maxIterations16_ = *((&tmp__1_->field7));
  dy8_ = *((&tmp__1_->field3));
  y06_ = *((&tmp__1_->field2));
  dx4_ = *((&tmp__1_->field1));
  x02_ = *((&tmp__1_->field0));
  width10_smear_ = __smear_i32<__vec16_i32>(width10_);
  x02_smear_ = __smear_float<__vec16_f>(x02_);
  dx4_smear_ = __smear_float<__vec16_f>(dx4_);
  y06_smear_ = __smear_float<__vec16_f>(y06_);
  dy8_smear_ = __smear_float<__vec16_f>(dy8_);
  maxIterations16_smear_ = __smear_i32<__vec16_i32>(maxIterations16_);
  less_i_load_count_load_2e_i129197_ = __signed_greater_than_i32(maxIterations16_smear_, __setzero_i32<__vec16_i32>());
  output_load100_ptr2int_2void_ = ((uint8_t *)output18_);
  if ((((int32_t )aligned_end32_) > ((int32_t )0u))) {
    smear_counter213_2e_us___PHI = mul_taskIndex_load_span_load_smear_;   /* for PHI node */
    counter_2e_0212_2e_us___PHI = mul_taskIndex_load_span_load_;   /* for PHI node */
    goto foreach_full_body_2e_lr_2e_ph_2e_us_label;
  } else {
    goto outer_not_in_extras_2e_preheader_2e_lr_2e_ph_2e_outer_not_in_extras_2e_preheader_2e_lr_2e_ph_2e_split_crit_edge_label;
  }

}
outer_not_in_extras_2e_preheader_2e_lr_2e_ph_2e_outer_not_in_extras_2e_preheader_2e_lr_2e_ph_2e_split_crit_edge_label: {
  tmp__6_ = ((int64_t )(int32_t )mul_taskIndex_load_span_load_);
  indvars_2e_iv___PHI = tmp__6_;   /* for PHI node */
  smear_counter213___PHI = mul_taskIndex_load_span_load_smear_;   /* for PHI node */
  goto partial_inner_all_outer_label;

}
  do {     /* Syntactic loop 'foreach_full_body.lr.ph.us' to make GCC happy */
foreach_full_body_2e_lr_2e_ph_2e_us_label: {
  smear_counter213_2e_us_ = smear_counter213_2e_us___PHI;
  counter_2e_0212_2e_us_ = counter_2e_0212_2e_us___PHI;
  add_y0_load_broadcast_mul_yi_load_to_float_dy_load_broadcast_2e_us_ = __add(y06_smear_, (__mul(dy8_smear_, ((__cast_sitofp(__vec16_f (), smear_counter213_2e_us_))))));
  mul_yi_load60_width_load61_broadcast_2e_elt0_2e_us_ = ((uint32_t )(((uint32_t )counter_2e_0212_2e_us_) * ((uint32_t )width10_)));
  counter33_2e_3195_2e_us___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_2e_us_label;

}
  do {     /* Syntactic loop 'foreach_full_body.us' to make GCC happy */
foreach_full_body_2e_us_label: {
  counter33_2e_3195_2e_us_ = counter33_2e_3195_2e_us___PHI;
  counter33_2e_3195_2e_us_smear_ = __smear_i32<__vec16_i32>(counter33_2e_3195_2e_us_);
  add_x0_load_broadcast_mul_xi_load59_to_float_dx_load_broadcast_2e_us_ = __add(x02_smear_, (__mul(dx4_smear_, ((__cast_sitofp(__vec16_f (), (__add(counter33_2e_3195_2e_us_smear_, __load<64>((const __vec16_i32  *)(VectorConstant5))))))))));
  add_mul_yi_load60_width_load61_broadcast_xi_load62_2e_elt0_2e_us_ = ((uint32_t )(((uint32_t )counter33_2e_3195_2e_us_) + ((uint32_t )mul_yi_load60_width_load61_broadcast_2e_elt0_2e_us_)));
  internal_mask_26_function_mask10_any_2e_i186_2e_us_ = ((__any(less_i_load_count_load_2e_i129197_))&1);
  if (internal_mask_26_function_mask10_any_2e_i186_2e_us_) {
    oldMask_26_test_2e_i193_2e_us___PHI = less_i_load_count_load_2e_i129197_;   /* for PHI node */
    less_i_load_count_load_2e_i192_2e_us___PHI = less_i_load_count_load_2e_i129197_;   /* for PHI node */
    internal_mask_memory_2e_0_2e_i191_2e_us___PHI = __smear_i1<__vec16_i1>(1);   /* for PHI node */
    break_lanes_memory_2e_0_2e_i190_2e_us___PHI = __setzero_i1<__vec16_i1>();   /* for PHI node */
    z_re_2e_0_2e_i189_2e_us___PHI = add_x0_load_broadcast_mul_xi_load59_to_float_dx_load_broadcast_2e_us_;   /* for PHI node */
    add_c_im_load44_new_im_load_2e_i182188_2e_us___PHI = add_y0_load_broadcast_mul_yi_load_to_float_dy_load_broadcast_2e_us_;   /* for PHI node */
    v1_2e_i183187_2e_us___PHI = __setzero_i32<__vec16_i32>();   /* for PHI node */
    goto for_loop_2e_i_2e_us_label;
  } else {
    v1_2e_i183_2e_lcssa_2e_us___PHI = __setzero_i32<__vec16_i32>();   /* for PHI node */
    goto mandel___vyfvyfvyi_2e_exit_2e_us_label;
  }

}
  do {     /* Syntactic loop 'for_loop.i.us' to make GCC happy */
for_loop_2e_i_2e_us_label: {
  oldMask_26_test_2e_i193_2e_us_ = oldMask_26_test_2e_i193_2e_us___PHI;
  less_i_load_count_load_2e_i192_2e_us_ = less_i_load_count_load_2e_i192_2e_us___PHI;
  internal_mask_memory_2e_0_2e_i191_2e_us_ = internal_mask_memory_2e_0_2e_i191_2e_us___PHI;
  break_lanes_memory_2e_0_2e_i190_2e_us_ = break_lanes_memory_2e_0_2e_i190_2e_us___PHI;
  z_re_2e_0_2e_i189_2e_us_ = z_re_2e_0_2e_i189_2e_us___PHI;
  add_c_im_load44_new_im_load_2e_i182188_2e_us_ = add_c_im_load44_new_im_load_2e_i182188_2e_us___PHI;
  v1_2e_i183187_2e_us_ = v1_2e_i183187_2e_us___PHI;
  mul_z_re_load_z_re_load13_2e_i_2e_us_ = __mul(z_re_2e_0_2e_i189_2e_us_, z_re_2e_0_2e_i189_2e_us_);
  mul_z_im_load_z_im_load14_2e_i_2e_us_ = __mul(add_c_im_load44_new_im_load_2e_i182188_2e_us_, add_c_im_load44_new_im_load_2e_i182188_2e_us_);
  oldMask_26_test16_2e_i_2e_us_and_mask_ = __greater_than_float_and_mask((__add(mul_z_im_load_z_im_load14_2e_i_2e_us_, mul_z_re_load_z_re_load13_2e_i_2e_us_)), __smear_float<__vec16_f>(0x1p+2), oldMask_26_test_2e_i193_2e_us_);
  mask_7c_break_mask_2e_i_2e_us_ = __or(oldMask_26_test16_2e_i_2e_us_and_mask_, break_lanes_memory_2e_0_2e_i190_2e_us_);
  finished_26_func_movmsk_2e_i_2e_us_ = __movmsk(mask_7c_break_mask_2e_i_2e_us_);
  internal_mask_26_function_mask12_movmsk_2e_i_2e_us_ = __movmsk(oldMask_26_test_2e_i193_2e_us_);
  if ((finished_26_func_movmsk_2e_i_2e_us_ == internal_mask_26_function_mask12_movmsk_2e_i_2e_us_)) {
    add_c_im_load44_new_im_load_2e_i181_2e_us___PHI = add_c_im_load44_new_im_load_2e_i182188_2e_us_;   /* for PHI node */
    z_re_2e_1_2e_i_2e_us___PHI = z_re_2e_0_2e_i189_2e_us_;   /* for PHI node */
    internal_mask_memory_2e_1_2e_i_2e_us___PHI = __setzero_i1<__vec16_i1>();   /* for PHI node */
    goto for_step_2e_i_2e_us_label;
  } else {
    goto not_all_continued_or_breaked_2e_i_2e_us_label;
  }

}
not_all_continued_or_breaked_2e_i_2e_us_label: {
  new_mask28_2e_i_2e_us217_ = __and_not2((__and(internal_mask_memory_2e_0_2e_i191_2e_us_, less_i_load_count_load_2e_i192_2e_us_)), mask_7c_break_mask_2e_i_2e_us_);
  add_c_re_load42_new_re_load_2e_i_2e_us_ = __add(add_x0_load_broadcast_mul_xi_load59_to_float_dx_load_broadcast_2e_us_, (__sub(mul_z_re_load_z_re_load13_2e_i_2e_us_, mul_z_im_load_z_im_load14_2e_i_2e_us_)));
  add_c_im_load44_new_im_load_2e_i_2e_us_ = __add(add_y0_load_broadcast_mul_yi_load_to_float_dy_load_broadcast_2e_us_, (__mul(add_c_im_load44_new_im_load_2e_i182188_2e_us_, (__mul(z_re_2e_0_2e_i189_2e_us_, __smear_float<__vec16_f>(0x1p+1))))));
  add_c_im_load44_new_im_load_2e_i181_2e_us___PHI = add_c_im_load44_new_im_load_2e_i_2e_us_;   /* for PHI node */
  z_re_2e_1_2e_i_2e_us___PHI = add_c_re_load42_new_re_load_2e_i_2e_us_;   /* for PHI node */
  internal_mask_memory_2e_1_2e_i_2e_us___PHI = new_mask28_2e_i_2e_us217_;   /* for PHI node */
  goto for_step_2e_i_2e_us_label;

}
for_step_2e_i_2e_us_label: {
  add_c_im_load44_new_im_load_2e_i181_2e_us_ = add_c_im_load44_new_im_load_2e_i181_2e_us___PHI;
  z_re_2e_1_2e_i_2e_us_ = z_re_2e_1_2e_i_2e_us___PHI;
  internal_mask_memory_2e_1_2e_i_2e_us_ = internal_mask_memory_2e_1_2e_i_2e_us___PHI;
  v1_2e_i_2e_us_ = __select(internal_mask_memory_2e_1_2e_i_2e_us_, (__add(v1_2e_i183187_2e_us_, __smear_i32<__vec16_i32>(1u))), v1_2e_i183187_2e_us_);
  less_i_load_count_load_2e_i_2e_us_ = __signed_less_than_i32(v1_2e_i_2e_us_, maxIterations16_smear_);
  oldMask_26_test_2e_i_2e_us_and_mask_ = __signed_less_than_i32_and_mask(v1_2e_i_2e_us_, maxIterations16_smear_, internal_mask_memory_2e_1_2e_i_2e_us_);
  internal_mask_26_function_mask10_any_2e_i_2e_us_ = ((__any(oldMask_26_test_2e_i_2e_us_and_mask_))&1);
  if (internal_mask_26_function_mask10_any_2e_i_2e_us_) {
    oldMask_26_test_2e_i193_2e_us___PHI = oldMask_26_test_2e_i_2e_us_and_mask_;   /* for PHI node */
    less_i_load_count_load_2e_i192_2e_us___PHI = less_i_load_count_load_2e_i_2e_us_;   /* for PHI node */
    internal_mask_memory_2e_0_2e_i191_2e_us___PHI = internal_mask_memory_2e_1_2e_i_2e_us_;   /* for PHI node */
    break_lanes_memory_2e_0_2e_i190_2e_us___PHI = mask_7c_break_mask_2e_i_2e_us_;   /* for PHI node */
    z_re_2e_0_2e_i189_2e_us___PHI = z_re_2e_1_2e_i_2e_us_;   /* for PHI node */
    add_c_im_load44_new_im_load_2e_i182188_2e_us___PHI = add_c_im_load44_new_im_load_2e_i181_2e_us_;   /* for PHI node */
    v1_2e_i183187_2e_us___PHI = v1_2e_i_2e_us_;   /* for PHI node */
    goto for_loop_2e_i_2e_us_label;
  } else {
    v1_2e_i183_2e_lcssa_2e_us___PHI = v1_2e_i_2e_us_;   /* for PHI node */
    goto mandel___vyfvyfvyi_2e_exit_2e_us_label;
  }

}
  } while (1); /* end of syntactic loop 'for_loop.i.us' */
mandel___vyfvyfvyi_2e_exit_2e_us_label: {
  v1_2e_i183_2e_lcssa_2e_us_ = v1_2e_i183_2e_lcssa_2e_us___PHI;
  __store<4>((((__vec16_i32 (*))((&output_load100_ptr2int_2void_[((int64_t )(((int64_t )(int32_t )(add_mul_yi_load60_width_load61_broadcast_xi_load62_2e_elt0_2e_us_ << 2u))))])))), v1_2e_i183_2e_lcssa_2e_us_);
  new_counter74_2e_us_ = ((uint32_t )(((uint32_t )counter33_2e_3195_2e_us_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter74_2e_us_) < ((int32_t )aligned_end32_))) {
    counter33_2e_3195_2e_us___PHI = new_counter74_2e_us_;   /* for PHI node */
    goto foreach_full_body_2e_us_label;
  } else {
    goto partial_inner_all_outer_2e_us_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body.us' */
partial_inner_all_outer_2e_us_label: {
  if ((((int32_t )new_counter74_2e_us_) < ((int32_t )width10_))) {
    goto partial_inner_only_2e_us_label;
  } else {
    goto foreach_reset28_2e_us_label;
  }

}
partial_inner_only_2e_us_label: {
  new_counter74_2e_us_smear_ = __smear_i32<__vec16_i32>(new_counter74_2e_us_);
  iter_val79_2e_us_ = __add(new_counter74_2e_us_smear_, __load<64>((const __vec16_i32  *)(VectorConstant5)));
  cmp82_2e_us_ = __signed_less_than_i32(iter_val79_2e_us_, width10_smear_);
  add_x0_load88_broadcast_mul_xi_load89_to_float_dx_load90_broadcast_2e_us_ = __add(x02_smear_, (__mul(dx4_smear_, ((__cast_sitofp(__vec16_f (), iter_val79_2e_us_))))));
  add_y0_load92_broadcast_mul_yi_load93_to_float_dy_load94_broadcast_2e_us_ = __add(y06_smear_, (__mul(dy8_smear_, ((__cast_sitofp(__vec16_f (), smear_counter213_2e_us_))))));
  add_mul_yi_load96_width_load97_broadcast_xi_load98_2e_elt0_2e_us_ = ((uint32_t )(((uint32_t )new_counter74_2e_us_) + ((uint32_t )(((uint32_t )(((uint32_t )counter_2e_0212_2e_us_) * ((uint32_t )width10_)))))));
  internal_mask_26_function_mask10_2e_i199_2e_us_and_mask_ = __signed_greater_than_i32_and_mask(maxIterations16_smear_, __setzero_i32<__vec16_i32>(), cmp82_2e_us_);
  internal_mask_26_function_mask10_any_2e_i131200_2e_us_ = ((__any(internal_mask_26_function_mask10_2e_i199_2e_us_and_mask_))&1);
  if (internal_mask_26_function_mask10_any_2e_i131200_2e_us_) {
    oldMask_26_test_2e_i130207_2e_us___PHI = less_i_load_count_load_2e_i129197_;   /* for PHI node */
    less_i_load_count_load_2e_i129206_2e_us___PHI = less_i_load_count_load_2e_i129197_;   /* for PHI node */
    internal_mask_memory_2e_0_2e_i127205_2e_us___PHI = __smear_i1<__vec16_i1>(1);   /* for PHI node */
    break_lanes_memory_2e_0_2e_i126204_2e_us___PHI = __setzero_i1<__vec16_i1>();   /* for PHI node */
    z_re_2e_0_2e_i125203_2e_us___PHI = add_x0_load88_broadcast_mul_xi_load89_to_float_dx_load90_broadcast_2e_us_;   /* for PHI node */
    add_c_im_load44_new_im_load_2e_i163179202_2e_us___PHI = add_y0_load92_broadcast_mul_yi_load93_to_float_dy_load94_broadcast_2e_us_;   /* for PHI node */
    v1_2e_i177180201_2e_us___PHI = __setzero_i32<__vec16_i32>();   /* for PHI node */
    goto for_loop_2e_i149_2e_us_label;
  } else {
    v1_2e_i177180_2e_lcssa_2e_us___PHI = __setzero_i32<__vec16_i32>();   /* for PHI node */
    goto mandel___vyfvyfvyi_2e_exit165_2e_us_label;
  }

}
  do {     /* Syntactic loop 'for_loop.i149.us' to make GCC happy */
for_loop_2e_i149_2e_us_label: {
  oldMask_26_test_2e_i130207_2e_us_ = oldMask_26_test_2e_i130207_2e_us___PHI;
  less_i_load_count_load_2e_i129206_2e_us_ = less_i_load_count_load_2e_i129206_2e_us___PHI;
  internal_mask_memory_2e_0_2e_i127205_2e_us_ = internal_mask_memory_2e_0_2e_i127205_2e_us___PHI;
  break_lanes_memory_2e_0_2e_i126204_2e_us_ = break_lanes_memory_2e_0_2e_i126204_2e_us___PHI;
  z_re_2e_0_2e_i125203_2e_us_ = z_re_2e_0_2e_i125203_2e_us___PHI;
  add_c_im_load44_new_im_load_2e_i163179202_2e_us_ = add_c_im_load44_new_im_load_2e_i163179202_2e_us___PHI;
  v1_2e_i177180201_2e_us_ = v1_2e_i177180201_2e_us___PHI;
  internal_mask_26_function_mask12_2e_i_2e_us_and_mask_ = __signed_less_than_i32_and_mask(iter_val79_2e_us_, width10_smear_, oldMask_26_test_2e_i130207_2e_us_);
  mul_z_re_load_z_re_load13_2e_i138_2e_us_ = __mul(z_re_2e_0_2e_i125203_2e_us_, z_re_2e_0_2e_i125203_2e_us_);
  mul_z_im_load_z_im_load14_2e_i140_2e_us_ = __mul(add_c_im_load44_new_im_load_2e_i163179202_2e_us_, add_c_im_load44_new_im_load_2e_i163179202_2e_us_);
  oldMask_26_test16_2e_i143_2e_us_and_mask_ = __greater_than_float_and_mask((__add(mul_z_im_load_z_im_load14_2e_i140_2e_us_, mul_z_re_load_z_re_load13_2e_i138_2e_us_)), __smear_float<__vec16_f>(0x1p+2), oldMask_26_test_2e_i130207_2e_us_);
  mask_7c_break_mask_2e_i144_2e_us_ = __or(oldMask_26_test16_2e_i143_2e_us_and_mask_, break_lanes_memory_2e_0_2e_i126204_2e_us_);
  finished_26_func_2e_i_2e_us_and_mask_ = __signed_less_than_i32_and_mask(iter_val79_2e_us_, width10_smear_, mask_7c_break_mask_2e_i144_2e_us_);
  finished_26_func_movmsk_2e_i146_2e_us_ = __movmsk(finished_26_func_2e_i_2e_us_and_mask_);
  internal_mask_26_function_mask12_movmsk_2e_i147_2e_us_ = __movmsk(internal_mask_26_function_mask12_2e_i_2e_us_and_mask_);
  if ((finished_26_func_movmsk_2e_i146_2e_us_ == internal_mask_26_function_mask12_movmsk_2e_i147_2e_us_)) {
    add_c_im_load44_new_im_load_2e_i163178_2e_us___PHI = add_c_im_load44_new_im_load_2e_i163179202_2e_us_;   /* for PHI node */
    z_re_2e_1_2e_i133_2e_us___PHI = z_re_2e_0_2e_i125203_2e_us_;   /* for PHI node */
    internal_mask_memory_2e_1_2e_i134_2e_us___PHI = __setzero_i1<__vec16_i1>();   /* for PHI node */
    goto for_step_2e_i137_2e_us_label;
  } else {
    goto not_all_continued_or_breaked_2e_i164_2e_us_label;
  }

}
not_all_continued_or_breaked_2e_i164_2e_us_label: {
  new_mask28_2e_i155_2e_us215_ = __and_not2((__and(internal_mask_memory_2e_0_2e_i127205_2e_us_, less_i_load_count_load_2e_i129206_2e_us_)), mask_7c_break_mask_2e_i144_2e_us_);
  add_c_re_load42_new_re_load_2e_i162_2e_us_ = __add(add_x0_load88_broadcast_mul_xi_load89_to_float_dx_load90_broadcast_2e_us_, (__sub(mul_z_re_load_z_re_load13_2e_i138_2e_us_, mul_z_im_load_z_im_load14_2e_i140_2e_us_)));
  add_c_im_load44_new_im_load_2e_i163_2e_us_ = __add(add_y0_load92_broadcast_mul_yi_load93_to_float_dy_load94_broadcast_2e_us_, (__mul(add_c_im_load44_new_im_load_2e_i163179202_2e_us_, (__mul(z_re_2e_0_2e_i125203_2e_us_, __smear_float<__vec16_f>(0x1p+1))))));
  add_c_im_load44_new_im_load_2e_i163178_2e_us___PHI = add_c_im_load44_new_im_load_2e_i163_2e_us_;   /* for PHI node */
  z_re_2e_1_2e_i133_2e_us___PHI = add_c_re_load42_new_re_load_2e_i162_2e_us_;   /* for PHI node */
  internal_mask_memory_2e_1_2e_i134_2e_us___PHI = new_mask28_2e_i155_2e_us215_;   /* for PHI node */
  goto for_step_2e_i137_2e_us_label;

}
for_step_2e_i137_2e_us_label: {
  add_c_im_load44_new_im_load_2e_i163178_2e_us_ = add_c_im_load44_new_im_load_2e_i163178_2e_us___PHI;
  z_re_2e_1_2e_i133_2e_us_ = z_re_2e_1_2e_i133_2e_us___PHI;
  internal_mask_memory_2e_1_2e_i134_2e_us_ = internal_mask_memory_2e_1_2e_i134_2e_us___PHI;
  v1_2e_i177_2e_us_ = __select(internal_mask_memory_2e_1_2e_i134_2e_us_, (__add(v1_2e_i177180201_2e_us_, __smear_i32<__vec16_i32>(1u))), v1_2e_i177180201_2e_us_);
  less_i_load_count_load_2e_i129_2e_us_ = __signed_less_than_i32(v1_2e_i177_2e_us_, maxIterations16_smear_);
  oldMask_26_test_2e_i130_2e_us_and_mask_ = __signed_less_than_i32_and_mask(v1_2e_i177_2e_us_, maxIterations16_smear_, internal_mask_memory_2e_1_2e_i134_2e_us_);
  internal_mask_26_function_mask10_2e_i_2e_us_and_mask_ = __signed_less_than_i32_and_mask(iter_val79_2e_us_, width10_smear_, oldMask_26_test_2e_i130_2e_us_and_mask_);
  internal_mask_26_function_mask10_any_2e_i131_2e_us_ = ((__any(internal_mask_26_function_mask10_2e_i_2e_us_and_mask_))&1);
  if (internal_mask_26_function_mask10_any_2e_i131_2e_us_) {
    oldMask_26_test_2e_i130207_2e_us___PHI = oldMask_26_test_2e_i130_2e_us_and_mask_;   /* for PHI node */
    less_i_load_count_load_2e_i129206_2e_us___PHI = less_i_load_count_load_2e_i129_2e_us_;   /* for PHI node */
    internal_mask_memory_2e_0_2e_i127205_2e_us___PHI = internal_mask_memory_2e_1_2e_i134_2e_us_;   /* for PHI node */
    break_lanes_memory_2e_0_2e_i126204_2e_us___PHI = mask_7c_break_mask_2e_i144_2e_us_;   /* for PHI node */
    z_re_2e_0_2e_i125203_2e_us___PHI = z_re_2e_1_2e_i133_2e_us_;   /* for PHI node */
    add_c_im_load44_new_im_load_2e_i163179202_2e_us___PHI = add_c_im_load44_new_im_load_2e_i163178_2e_us_;   /* for PHI node */
    v1_2e_i177180201_2e_us___PHI = v1_2e_i177_2e_us_;   /* for PHI node */
    goto for_loop_2e_i149_2e_us_label;
  } else {
    v1_2e_i177180_2e_lcssa_2e_us___PHI = v1_2e_i177_2e_us_;   /* for PHI node */
    goto mandel___vyfvyfvyi_2e_exit165_2e_us_label;
  }

}
  } while (1); /* end of syntactic loop 'for_loop.i149.us' */
mandel___vyfvyfvyi_2e_exit165_2e_us_label: {
  v1_2e_i177180_2e_lcssa_2e_us_ = v1_2e_i177180_2e_lcssa_2e_us___PHI;
  __masked_store_i32((((__vec16_i32 (*))((&output_load100_ptr2int_2void_[((int64_t )(((int64_t )(int32_t )(add_mul_yi_load96_width_load97_broadcast_xi_load98_2e_elt0_2e_us_ << 2u))))])))), v1_2e_i177180_2e_lcssa_2e_us_, cmp82_2e_us_);
  goto foreach_reset28_2e_us_label;

}
foreach_reset28_2e_us_label: {
  new_counter_2e_us_ = ((uint32_t )(((uint32_t )counter_2e_0212_2e_us_) + ((uint32_t )1u)));
  new_counter_2e_us_smear_ = __smear_i32<__vec16_i32>(new_counter_2e_us_);
  if ((new_counter_2e_us_ == calltmp_2e_i_)) {
    goto foreach_reset_label;
  } else {
    smear_counter213_2e_us___PHI = new_counter_2e_us_smear_;   /* for PHI node */
    counter_2e_0212_2e_us___PHI = new_counter_2e_us_;   /* for PHI node */
    goto foreach_full_body_2e_lr_2e_ph_2e_us_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body.lr.ph.us' */
foreach_reset_label: {
  return;
}
  do {     /* Syntactic loop 'partial_inner_all_outer' to make GCC happy */
partial_inner_all_outer_label: {
  indvars_2e_iv_ = indvars_2e_iv___PHI;
  smear_counter213_ = smear_counter213___PHI;
  if ((((int32_t )width10_) > ((int32_t )0u))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset28_label;
  }

}
partial_inner_only_label: {
  cmp82_ = __signed_greater_than_i32(width10_smear_, __load<64>((const __vec16_i32  *)(VectorConstant5)));
  add_x0_load88_broadcast_mul_xi_load89_to_float_dx_load90_broadcast_ = __add(x02_smear_, (__mul(dx4_smear_, __load<64>((const __vec16_f  *)(VectorConstant6)))));
  add_y0_load92_broadcast_mul_yi_load93_to_float_dy_load94_broadcast_ = __add(y06_smear_, (__mul(dy8_smear_, ((__cast_sitofp(__vec16_f (), smear_counter213_))))));
  mul_yi_load96_width_load97_broadcast_2e_elt0_ = ((uint32_t )(((uint32_t )(((uint32_t )indvars_2e_iv_))) * ((uint32_t )width10_)));
  internal_mask_26_function_mask10_2e_i199_and_mask_ = __signed_greater_than_i32_and_mask(maxIterations16_smear_, __setzero_i32<__vec16_i32>(), cmp82_);
  internal_mask_26_function_mask10_any_2e_i131200_ = ((__any(internal_mask_26_function_mask10_2e_i199_and_mask_))&1);
  if (internal_mask_26_function_mask10_any_2e_i131200_) {
    oldMask_26_test_2e_i130207___PHI = less_i_load_count_load_2e_i129197_;   /* for PHI node */
    less_i_load_count_load_2e_i129206___PHI = less_i_load_count_load_2e_i129197_;   /* for PHI node */
    internal_mask_memory_2e_0_2e_i127205___PHI = __smear_i1<__vec16_i1>(1);   /* for PHI node */
    break_lanes_memory_2e_0_2e_i126204___PHI = __setzero_i1<__vec16_i1>();   /* for PHI node */
    z_re_2e_0_2e_i125203___PHI = add_x0_load88_broadcast_mul_xi_load89_to_float_dx_load90_broadcast_;   /* for PHI node */
    add_c_im_load44_new_im_load_2e_i163179202___PHI = add_y0_load92_broadcast_mul_yi_load93_to_float_dy_load94_broadcast_;   /* for PHI node */
    v1_2e_i177180201___PHI = __setzero_i32<__vec16_i32>();   /* for PHI node */
    goto for_loop_2e_i149_label;
  } else {
    v1_2e_i177180_2e_lcssa___PHI = __setzero_i32<__vec16_i32>();   /* for PHI node */
    goto mandel___vyfvyfvyi_2e_exit165_label;
  }

}
  do {     /* Syntactic loop 'for_loop.i149' to make GCC happy */
for_loop_2e_i149_label: {
  oldMask_26_test_2e_i130207_ = oldMask_26_test_2e_i130207___PHI;
  less_i_load_count_load_2e_i129206_ = less_i_load_count_load_2e_i129206___PHI;
  internal_mask_memory_2e_0_2e_i127205_ = internal_mask_memory_2e_0_2e_i127205___PHI;
  break_lanes_memory_2e_0_2e_i126204_ = break_lanes_memory_2e_0_2e_i126204___PHI;
  z_re_2e_0_2e_i125203_ = z_re_2e_0_2e_i125203___PHI;
  add_c_im_load44_new_im_load_2e_i163179202_ = add_c_im_load44_new_im_load_2e_i163179202___PHI;
  v1_2e_i177180201_ = v1_2e_i177180201___PHI;
  internal_mask_26_function_mask12_2e_i_and_mask_ = __signed_greater_than_i32_and_mask(width10_smear_, __load<64>((const __vec16_i32  *)(VectorConstant5)), oldMask_26_test_2e_i130207_);
  mul_z_re_load_z_re_load13_2e_i138_ = __mul(z_re_2e_0_2e_i125203_, z_re_2e_0_2e_i125203_);
  mul_z_im_load_z_im_load14_2e_i140_ = __mul(add_c_im_load44_new_im_load_2e_i163179202_, add_c_im_load44_new_im_load_2e_i163179202_);
  oldMask_26_test16_2e_i143_and_mask_ = __greater_than_float_and_mask((__add(mul_z_im_load_z_im_load14_2e_i140_, mul_z_re_load_z_re_load13_2e_i138_)), __smear_float<__vec16_f>(0x1p+2), oldMask_26_test_2e_i130207_);
  mask_7c_break_mask_2e_i144_ = __or(oldMask_26_test16_2e_i143_and_mask_, break_lanes_memory_2e_0_2e_i126204_);
  finished_26_func_2e_i_and_mask_ = __signed_greater_than_i32_and_mask(width10_smear_, __load<64>((const __vec16_i32  *)(VectorConstant5)), mask_7c_break_mask_2e_i144_);
  finished_26_func_movmsk_2e_i146_ = __movmsk(finished_26_func_2e_i_and_mask_);
  internal_mask_26_function_mask12_movmsk_2e_i147_ = __movmsk(internal_mask_26_function_mask12_2e_i_and_mask_);
  if ((finished_26_func_movmsk_2e_i146_ == internal_mask_26_function_mask12_movmsk_2e_i147_)) {
    add_c_im_load44_new_im_load_2e_i163178___PHI = add_c_im_load44_new_im_load_2e_i163179202_;   /* for PHI node */
    z_re_2e_1_2e_i133___PHI = z_re_2e_0_2e_i125203_;   /* for PHI node */
    internal_mask_memory_2e_1_2e_i134___PHI = __setzero_i1<__vec16_i1>();   /* for PHI node */
    goto for_step_2e_i137_label;
  } else {
    goto not_all_continued_or_breaked_2e_i164_label;
  }

}
not_all_continued_or_breaked_2e_i164_label: {
  new_mask28_2e_i155219_ = __and_not2((__and(internal_mask_memory_2e_0_2e_i127205_, less_i_load_count_load_2e_i129206_)), mask_7c_break_mask_2e_i144_);
  add_c_re_load42_new_re_load_2e_i162_ = __add(add_x0_load88_broadcast_mul_xi_load89_to_float_dx_load90_broadcast_, (__sub(mul_z_re_load_z_re_load13_2e_i138_, mul_z_im_load_z_im_load14_2e_i140_)));
  add_c_im_load44_new_im_load_2e_i163_ = __add(add_y0_load92_broadcast_mul_yi_load93_to_float_dy_load94_broadcast_, (__mul(add_c_im_load44_new_im_load_2e_i163179202_, (__mul(z_re_2e_0_2e_i125203_, __smear_float<__vec16_f>(0x1p+1))))));
  add_c_im_load44_new_im_load_2e_i163178___PHI = add_c_im_load44_new_im_load_2e_i163_;   /* for PHI node */
  z_re_2e_1_2e_i133___PHI = add_c_re_load42_new_re_load_2e_i162_;   /* for PHI node */
  internal_mask_memory_2e_1_2e_i134___PHI = new_mask28_2e_i155219_;   /* for PHI node */
  goto for_step_2e_i137_label;

}
for_step_2e_i137_label: {
  add_c_im_load44_new_im_load_2e_i163178_ = add_c_im_load44_new_im_load_2e_i163178___PHI;
  z_re_2e_1_2e_i133_ = z_re_2e_1_2e_i133___PHI;
  internal_mask_memory_2e_1_2e_i134_ = internal_mask_memory_2e_1_2e_i134___PHI;
  v1_2e_i177_ = __select(internal_mask_memory_2e_1_2e_i134_, (__add(v1_2e_i177180201_, __smear_i32<__vec16_i32>(1u))), v1_2e_i177180201_);
  less_i_load_count_load_2e_i129_ = __signed_less_than_i32(v1_2e_i177_, maxIterations16_smear_);
  oldMask_26_test_2e_i130_and_mask_ = __signed_less_than_i32_and_mask(v1_2e_i177_, maxIterations16_smear_, internal_mask_memory_2e_1_2e_i134_);
  internal_mask_26_function_mask10_2e_i_and_mask_ = __signed_greater_than_i32_and_mask(width10_smear_, __load<64>((const __vec16_i32  *)(VectorConstant5)), oldMask_26_test_2e_i130_and_mask_);
  internal_mask_26_function_mask10_any_2e_i131_ = ((__any(internal_mask_26_function_mask10_2e_i_and_mask_))&1);
  if (internal_mask_26_function_mask10_any_2e_i131_) {
    oldMask_26_test_2e_i130207___PHI = oldMask_26_test_2e_i130_and_mask_;   /* for PHI node */
    less_i_load_count_load_2e_i129206___PHI = less_i_load_count_load_2e_i129_;   /* for PHI node */
    internal_mask_memory_2e_0_2e_i127205___PHI = internal_mask_memory_2e_1_2e_i134_;   /* for PHI node */
    break_lanes_memory_2e_0_2e_i126204___PHI = mask_7c_break_mask_2e_i144_;   /* for PHI node */
    z_re_2e_0_2e_i125203___PHI = z_re_2e_1_2e_i133_;   /* for PHI node */
    add_c_im_load44_new_im_load_2e_i163179202___PHI = add_c_im_load44_new_im_load_2e_i163178_;   /* for PHI node */
    v1_2e_i177180201___PHI = v1_2e_i177_;   /* for PHI node */
    goto for_loop_2e_i149_label;
  } else {
    v1_2e_i177180_2e_lcssa___PHI = v1_2e_i177_;   /* for PHI node */
    goto mandel___vyfvyfvyi_2e_exit165_label;
  }

}
  } while (1); /* end of syntactic loop 'for_loop.i149' */
mandel___vyfvyfvyi_2e_exit165_label: {
  v1_2e_i177180_2e_lcssa_ = v1_2e_i177180_2e_lcssa___PHI;
  __masked_store_i32((((__vec16_i32 (*))((&output_load100_ptr2int_2void_[((int64_t )(((int64_t )(int32_t )(mul_yi_load96_width_load97_broadcast_2e_elt0_ << 2u))))])))), v1_2e_i177180_2e_lcssa_, cmp82_);
  goto foreach_reset28_label;

}
foreach_reset28_label: {
  indvars_2e_iv_2e_next_ = ((uint64_t )(((uint64_t )indvars_2e_iv_) + ((uint64_t )1ull)));
  tmp__7_ = ((uint32_t )indvars_2e_iv_2e_next_);
  _smear_ = __smear_i32<__vec16_i32>(tmp__7_);
  if ((((int32_t )tmp__7_) < ((int32_t )calltmp_2e_i_))) {
    indvars_2e_iv___PHI = indvars_2e_iv_2e_next_;   /* for PHI node */
    smear_counter213___PHI = _smear_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  } else {
    goto foreach_reset_label;
  }

}
  } while (1); /* end of syntactic loop 'partial_inner_all_outer' */
}



void mandelbrot_ispc___unfunfunfunfuniuniuniun_3C_uni_3E_(float x0_, float y0_, float x1_, float y1_, uint32_t width_, uint32_t height_, uint32_t maxIterations_, uint32_t *output_, __vec16_i1 __mask_) {
  uint8_t *launch_group_handle_;    /* Address-exposed local */
  uint8_t *args_ptr_;
  uint8_t *launch_group_handle_load_;

  *(&launch_group_handle_) = ((uint8_t *)/*NULL*/0);
  args_ptr_ = ISPCAlloc((&launch_group_handle_), 48ull, 64u);
  *(((float *)args_ptr_)) = x0_;
  *(((float *)((&args_ptr_[((int64_t )4ull)])))) = (((float )((((float )(x1_ - x0_))) / (((float )(int32_t )width_)))));
  *(((float *)((&args_ptr_[((int64_t )8ull)])))) = y0_;
  *(((float *)((&args_ptr_[((int64_t )12ull)])))) = (((float )((((float )(y1_ - y0_))) / (((float )(int32_t )height_)))));
  *(((uint32_t *)((&args_ptr_[((int64_t )16ull)])))) = width_;
  *(((uint32_t *)((&args_ptr_[((int64_t )20ull)])))) = height_;
  *(((uint32_t *)((&args_ptr_[((int64_t )24ull)])))) = 4u;
  *(((uint32_t *)((&args_ptr_[((int64_t )28ull)])))) = maxIterations_;
  *(((uint32_t **)((&args_ptr_[((int64_t )32ull)])))) = output_;
  __store<2>((((__vec16_i1 (*))((&args_ptr_[((int64_t )40ull)])))), __mask_);
  ISPCLaunch((&launch_group_handle_), ((uint8_t *)mandelbrot_scanline___unfunfunfunfuniuniuniuniun_3C_uni_3E_), args_ptr_, (((int32_t )(((int32_t )height_) / ((int32_t )4u)))));
  launch_group_handle_load_ = *(&launch_group_handle_);
  if ((launch_group_handle_load_ == ((uint8_t *)/*NULL*/0))) {
    goto post_sync_label;
  } else {
    goto call_sync_label;
  }

call_sync_label: {
  ISPCSync(launch_group_handle_load_);
  *(&launch_group_handle_) = ((uint8_t *)/*NULL*/0);
  goto post_sync_label;

}
post_sync_label: {
  return;
}
}



void mandelbrot_ispc(float x0_, float y0_, float x1_, float y1_, uint32_t width_, uint32_t height_, uint32_t maxIterations_, uint32_t *output_) {
  uint8_t *launch_group_handle_;    /* Address-exposed local */
  uint8_t *args_ptr_;
  uint8_t *launch_group_handle_load_;

  *(&launch_group_handle_) = ((uint8_t *)/*NULL*/0);
  args_ptr_ = ISPCAlloc((&launch_group_handle_), 48ull, 64u);
  *(((float *)args_ptr_)) = x0_;
  *(((float *)((&args_ptr_[((int64_t )4ull)])))) = (((float )((((float )(x1_ - x0_))) / (((float )(int32_t )width_)))));
  *(((float *)((&args_ptr_[((int64_t )8ull)])))) = y0_;
  *(((float *)((&args_ptr_[((int64_t )12ull)])))) = (((float )((((float )(y1_ - y0_))) / (((float )(int32_t )height_)))));
  *(((uint32_t *)((&args_ptr_[((int64_t )16ull)])))) = width_;
  *(((uint32_t *)((&args_ptr_[((int64_t )20ull)])))) = height_;
  *(((uint32_t *)((&args_ptr_[((int64_t )24ull)])))) = 4u;
  *(((uint32_t *)((&args_ptr_[((int64_t )28ull)])))) = maxIterations_;
  *(((uint32_t **)((&args_ptr_[((int64_t )32ull)])))) = output_;
  __store<2>((((__vec16_i1 (*))((&args_ptr_[((int64_t )40ull)])))), __smear_i1<__vec16_i1>(1));
  ISPCLaunch((&launch_group_handle_), ((uint8_t *)mandelbrot_scanline___unfunfunfunfuniuniuniuniun_3C_uni_3E_), args_ptr_, (((int32_t )(((int32_t )height_) / ((int32_t )4u)))));
  launch_group_handle_load_ = *(&launch_group_handle_);
  if ((launch_group_handle_load_ == ((uint8_t *)/*NULL*/0))) {
    goto post_sync_label;
  } else {
    goto call_sync_label;
  }

call_sync_label: {
  ISPCSync(launch_group_handle_load_);
  *(&launch_group_handle_) = ((uint8_t *)/*NULL*/0);
  goto post_sync_label;

}
post_sync_label: {
  return;
}
}

