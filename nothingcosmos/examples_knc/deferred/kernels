//
// kernels
// (Header automatically generated by the ispc compiler.)
// DO NOT EDIT THIS FILE.
//

#ifndef ISPC_KERNELS
#define ISPC_KERNELS

#include <stdint.h>



#ifdef __cplusplus
namespace ispc { /* namespace */
#endif // __cplusplus
#ifndef __ISPC_STRUCT_InputHeader__
#define __ISPC_STRUCT_InputHeader__
struct InputHeader {
    float cameraProj[4][4];
    float cameraNear;
    float cameraFar;
    int32_t framebufferWidth;
    int32_t framebufferHeight;
    int32_t numLights;
    int32_t inputDataChunkSize;
    int32_t inputDataArrayOffsets[16];
};
#endif

#ifndef __ISPC_STRUCT_InputDataArrays__
#define __ISPC_STRUCT_InputDataArrays__
struct InputDataArrays {
    float * zBuffer;
    uint16_t * normalEncoded_x;
    uint16_t * normalEncoded_y;
    uint16_t * specularAmount;
    uint16_t * specularPower;
    uint8_t * albedo_x;
    uint8_t * albedo_y;
    uint8_t * albedo_z;
    float * lightPositionView_x;
    float * lightPositionView_y;
    float * lightPositionView_z;
    float * lightAttenuationBegin;
    float * lightColor_x;
    float * lightColor_y;
    float * lightColor_z;
    float * lightAttenuationEnd;
};
#endif


///////////////////////////////////////////////////////////////////////////
// Functions exported from ispc code
///////////////////////////////////////////////////////////////////////////
#if defined(__cplusplus) && !defined(__ISPC_NO_EXTERN_C)
extern "C" {
#endif // __cplusplus
    extern void ComputeZBoundsRow(int32_t tileY, int32_t tileWidth, int32_t tileHeight, int32_t numTilesX, int32_t numTilesY, float * zBuffer, int32_t gBufferWidth, float cameraProj_33, float cameraProj_43, float cameraNear, float cameraFar, float * minZArray, float * maxZArray);
    extern int32_t IntersectLightsWithTileMinMax(int32_t tileStartX, int32_t tileEndX, int32_t tileStartY, int32_t tileEndY, float minZ, float maxZ, int32_t gBufferWidth, int32_t gBufferHeight, float cameraProj_11, float cameraProj_22, int32_t numLights, float * light_positionView_x_array, float * light_positionView_y_array, float * light_positionView_z_array, float * light_attenuationEnd_array, int32_t * tileLightIndices);
    extern void RenderStatic(struct InputHeader &inputHeader, struct InputDataArrays &inputData, int32_t visualizeLightCount, uint8_t * framebuffer_r, uint8_t * framebuffer_g, uint8_t * framebuffer_b);
    extern void ShadeTile(int32_t tileStartX, int32_t tileEndX, int32_t tileStartY, int32_t tileEndY, int32_t gBufferWidth, int32_t gBufferHeight, struct InputDataArrays &inputData, float cameraProj_11, float cameraProj_22, float cameraProj_33, float cameraProj_43, int32_t * tileLightIndices, int32_t tileNumLights, bool visualizeLightCount, uint8_t * framebuffer_r, uint8_t * framebuffer_g, uint8_t * framebuffer_b);
    extern void SplitTileMinMax(int32_t tileMidX, int32_t tileMidY, float * subtileMinZ, float * subtileMaxZ, int32_t gBufferWidth, int32_t gBufferHeight, float cameraProj_11, float cameraProj_22, int32_t * lightIndices, int32_t numLights, float * light_positionView_x_array, float * light_positionView_y_array, float * light_positionView_z_array, float * light_attenuationEnd_array, int32_t * subtileIndices, int32_t subtileIndicesPitch, int32_t * subtileNumLights);
#if defined(__cplusplus) && !defined(__ISPC_NO_EXTERN_C)
} /* end extern C */
#endif // __cplusplus


#ifdef __cplusplus
} /* namespace */
#endif // __cplusplus

#endif // ISPC_KERNELS
