/*******************************************************************
  This file has been automatically generated by ispc
  DO NOT EDIT THIS FILE DIRECTLY
 *******************************************************************/

/* Provide Declarations */
#include <stdarg.h>
#include <setjmp.h>
#include <limits.h>
#include <stdlib.h>
#ifdef _MSC_VER
  #define NOMINMAX
  #include <windows.h>
#endif // _MSC_VER
#include <stdlib.h>
#include <stdint.h>
/* get a declaration for alloca */
#ifdef _MSC_VER
  #include <malloc.h>
  #define alloca _alloca
#else
  #include <alloca.h>
#endif

#undef ISPC_FAST_MATH
#include "knc.h"

/* Basic Library Function Declarations */
extern "C" {
int puts(unsigned char *);
unsigned int putchar(unsigned int);
int fflush(void *);
int printf(const unsigned char *, ...);
uint8_t *memcpy(uint8_t *, uint8_t *, uint64_t );
uint8_t *memset(uint8_t *, uint8_t, uint64_t );
void memset_pattern16(void *, const void *, uint64_t );
}

#ifndef __GNUC__  /* Can only support "linkonce" vars with GCC */
#define __attribute__(X)
#endif

#if defined(__GNUC__) && defined(__APPLE_CC__)
#define __EXTERNAL_WEAK__ __attribute__((weak_import))
#elif defined(__GNUC__)
#define __EXTERNAL_WEAK__ __attribute__((weak))
#else
#define __EXTERNAL_WEAK__
#endif

#if defined(__GNUC__) && defined(__APPLE_CC__)
#define __ATTRIBUTE_WEAK__
#elif defined(__GNUC__)
#define __ATTRIBUTE_WEAK__ __attribute__((weak))
#else
#define __ATTRIBUTE_WEAK__
#endif

#if defined(__GNUC__)
#define __HIDDEN__ __attribute__((visibility("hidden")))
#endif

#if (defined(__GNUC__) || defined(__clang__)) && !defined(__INTEL_COMPILER)
#define LLVM_NAN(NanStr)   __builtin_nan(NanStr)   /* Double */
#define LLVM_NANF(NanStr)  __builtin_nanf(NanStr)  /* Float */
#define LLVM_NANS(NanStr)  __builtin_nans(NanStr)  /* Double */
#define LLVM_NANSF(NanStr) __builtin_nansf(NanStr) /* Float */
#define LLVM_INF           __builtin_inf()         /* Double */
#define LLVM_INFF          __builtin_inff()        /* Float */
//#define LLVM_PREFETCH(addr,rw,locality) __builtin_prefetch(addr,rw,locality)
//#define __ATTRIBUTE_CTOR__ __attribute__((constructor))
//#define __ATTRIBUTE_DTOR__ __attribute__((destructor))
#elif defined(_MSC_VER) || defined(__INTEL_COMPILER)
#include <limits>
#define LLVM_NAN(NanStr)   std::numeric_limits<double>::quiet_NaN()
#define LLVM_NANF(NanStr)  std::numeric_limits<float>::quiet_NaN()
#define LLVM_NANS(NanStr)  std::numeric_limits<double>::signaling_NaN()
#define LLVM_NANSF(NanStr) std::numeric_limits<float>::signaling_NaN()
#define LLVM_INF           std::numeric_limits<double>::infinity()
#define LLVM_INFF          std::numeric_limits<float>::infinity()
//#define LLVM_PREFETCH(addr,rw,locality)            /* PREFETCH */
//#define __ATTRIBUTE_CTOR__
//#define __ATTRIBUTE_DTOR__
#else
#error "Not MSVC, clang, or g++?"
#endif

#if (defined(__GNUC__) || defined(__clang__))
#define LLVM_ASM(X) __asm(X)
#endif

#if defined(__clang__) || defined(__INTEL_COMPILER) || (__GNUC__ < 4) /* Old GCCs, or compilers not GCC */ 
#define __builtin_stack_save() 0   /* not implemented */
#define __builtin_stack_restore(X) /* noop */
#endif

#define CODE_FOR_MAIN() /* Any target-specific code for main()*/

#ifndef __cplusplus
typedef unsigned char bool;
#endif


/* Support for floating point constants */
typedef uint64_t ConstantDoubleTy;
typedef uint32_t ConstantFloatTy;
typedef struct { unsigned long long f1; unsigned short f2; unsigned short pad[3]; } ConstantFP80Ty;
typedef struct { uint64_t f1, f2; } ConstantFP128Ty;


/* Global Declarations */


/* Helper union for bitcasts */
typedef union {
  unsigned int Int32;
  unsigned long long Int64;
  float Float;
  double Double;
} llvmBitCastUnion;
/* Structure and array forward declarations */
struct l_array_0;

/* Structure and array contents */
struct l_array_0 {
  static l_array_0 init(uint8_t v0, uint8_t v1, uint8_t v2, uint8_t v3, uint8_t v4, uint8_t v5, uint8_t v6, uint8_t v7, uint8_t v8, uint8_t v9, uint8_t v10, uint8_t v11, uint8_t v12, uint8_t v13, uint8_t v14, uint8_t v15, uint8_t v16, uint8_t v17, uint8_t v18, uint8_t v19, uint8_t v20, uint8_t v21, uint8_t v22, uint8_t v23, uint8_t v24, uint8_t v25, uint8_t v26, uint8_t v27, uint8_t v28, uint8_t v29, uint8_t v30, uint8_t v31, uint8_t v32, uint8_t v33, uint8_t v34, uint8_t v35, uint8_t v36, uint8_t v37, uint8_t v38, uint8_t v39, uint8_t v40, uint8_t v41, uint8_t v42, uint8_t v43, uint8_t v44, uint8_t v45, uint8_t v46, uint8_t v47, uint8_t v48, uint8_t v49, uint8_t v50, uint8_t v51, uint8_t v52, uint8_t v53, uint8_t v54, uint8_t v55, uint8_t v56) {
    l_array_0 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    ret.array[2] = v2;
    ret.array[3] = v3;
    ret.array[4] = v4;
    ret.array[5] = v5;
    ret.array[6] = v6;
    ret.array[7] = v7;
    ret.array[8] = v8;
    ret.array[9] = v9;
    ret.array[10] = v10;
    ret.array[11] = v11;
    ret.array[12] = v12;
    ret.array[13] = v13;
    ret.array[14] = v14;
    ret.array[15] = v15;
    ret.array[16] = v16;
    ret.array[17] = v17;
    ret.array[18] = v18;
    ret.array[19] = v19;
    ret.array[20] = v20;
    ret.array[21] = v21;
    ret.array[22] = v22;
    ret.array[23] = v23;
    ret.array[24] = v24;
    ret.array[25] = v25;
    ret.array[26] = v26;
    ret.array[27] = v27;
    ret.array[28] = v28;
    ret.array[29] = v29;
    ret.array[30] = v30;
    ret.array[31] = v31;
    ret.array[32] = v32;
    ret.array[33] = v33;
    ret.array[34] = v34;
    ret.array[35] = v35;
    ret.array[36] = v36;
    ret.array[37] = v37;
    ret.array[38] = v38;
    ret.array[39] = v39;
    ret.array[40] = v40;
    ret.array[41] = v41;
    ret.array[42] = v42;
    ret.array[43] = v43;
    ret.array[44] = v44;
    ret.array[45] = v45;
    ret.array[46] = v46;
    ret.array[47] = v47;
    ret.array[48] = v48;
    ret.array[49] = v49;
    ret.array[50] = v50;
    ret.array[51] = v51;
    ret.array[52] = v52;
    ret.array[53] = v53;
    ret.array[54] = v54;
    ret.array[55] = v55;
    ret.array[56] = v56;
    return ret;
  }
    static l_array_0 init(const char *p) {
    l_array_0 ret;
    memcpy((uint8_t *)ret.array, (uint8_t *)p, 57);
    return ret;
  }
uint8_t array[57];
} ;



/* External Global Variable Declarations */


/* Global Variable Declarations */

/* Function Declarations */
extern "C" {
void xyzSumAOS___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_);
void xyzSumAOSStdlib___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_);
void xyzSumAOSNoCoalesce___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zerosArray_, float *result_, __vec16_i1 __mask_);
void xyzSumSOA___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_);
void gathers___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_);
void loads___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_);
void scatters___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_);
void stores___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_);
void normalizeAOSNoCoalesce___un_3C_unf_3E_uniun_3C_unf_3E_(float *array_, uint32_t count_, float *zeroArray_, __vec16_i1 __mask_);
void normalizeSOA___un_3C_unf_3E_uniun_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, __vec16_i1 __mask_);
void xyzSumAOS(float *array_, uint32_t count_, float *zeros_, float *result_);
void xyzSumAOSStdlib(float *array_, uint32_t count_, float *zeros_, float *result_);
void xyzSumAOSNoCoalesce(float *array_, uint32_t count_, float *zerosArray_, float *result_);
void xyzSumSOA(float *array_, uint32_t count_, float *zeros_, float *result_);
void gathers(float *array_, uint32_t count_, float *zeros_, float *result_);
void loads(float *array_, uint32_t count_, float *zeros_, float *result_);
void scatters(float *array_, uint32_t count_, float *zeros_, float *result_);
void stores(float *array_, uint32_t count_, float *zeros_, float *result_);
void normalizeAOSNoCoalesce(float *array_, uint32_t count_, float *zeroArray_);
void normalizeSOA(float *array_, uint32_t count_, float *zeros_);
}



/* Function Bodies */
template <typename A, typename B> static inline int llvm_fcmp_ord(A X, B Y) { return X == X && Y == Y; }
template <typename A, typename B> static inline int llvm_fcmp_uno(A X, B Y) { return X != X || Y != Y; }
template <typename A, typename B> static inline int llvm_fcmp_ueq(A X, B Y) { return X == Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_une(A X, B Y) { return X != Y; }
template <typename A, typename B> static inline int llvm_fcmp_ult(A X, B Y) { return X <  Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_ugt(A X, B Y) { return X >  Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_ule(A X, B Y) { return X <= Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_uge(A X, B Y) { return X >= Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_oeq(A X, B Y) { return X == Y ; }
template <typename A, typename B> static inline int llvm_fcmp_one(A X, B Y) { return X != Y && llvm_fcmp_ord(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_olt(A X, B Y) { return X <  Y ; }
template <typename A, typename B> static inline int llvm_fcmp_ogt(A X, B Y) { return X >  Y ; }
template <typename A, typename B> static inline int llvm_fcmp_ole(A X, B Y) { return X <= Y ; }
template <typename A, typename B> static inline int llvm_fcmp_oge(A X, B Y) { return X >= Y ; }
template <typename A> A *Memset(A *ptr, int count, size_t len) { return (A *)memset(ptr, count, len); }


/* Global Variable Definitions and Initialization */
static l_array_0 __str = l_array_0 ::init("perfbench.ispc:89:5: Assertion failed: programCount <= 8");
static l_array_0 __str1 = l_array_0 ::init("perfbench.ispc:89:5: Assertion failed: programCount <= 8");


static void __do_assert_uniform(uint8_t *str_) {
  uint32_t call_;

  call_ =  /*tail*/ puts(str_);
   /*tail*/ abort();
  /*UNREACHABLE*/;
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant0[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant1[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void xyzSumAOS___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_) {
  uint32_t div_count_load__;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_1199_;
  uint32_t counter_2e_1199___PHI;
  __vec16_f v1_2e_i184189198_;
  __vec16_f v1_2e_i184189198___PHI;
  __vec16_f v1_2e_i182191197_;
  __vec16_f v1_2e_i182191197___PHI;
  __vec16_f v1_2e_i180193196_;
  __vec16_f v1_2e_i180193196___PHI;
  __vec16_i32 counter_2e_1199_smear_;
  __vec16_i32 mul_;
  __vec16_f array_load_offset_load126_;
  __vec16_f array_load30_offset_load129_;
  __vec16_f array_load36_offset_load134_;
  __vec16_f add_xsum_load_x_load_;
  __vec16_f add_ysum_load_y_load_;
  __vec16_f add_zsum_load_z_load_;
  uint32_t new_counter_;
  __vec16_f v1_2e_i180194_;
  __vec16_f v1_2e_i180194___PHI;
  __vec16_f v1_2e_i182192_;
  __vec16_f v1_2e_i182192___PHI;
  __vec16_f v1_2e_i184190_;
  __vec16_f v1_2e_i184190___PHI;
  __vec16_f v1_2e_i_;
  float calltmp_2e_i_;
  __vec16_f v1_2e_i188_;
  float calltmp_2e_i154_;
  __vec16_f v1_2e_i186_;
  float calltmp_2e_i157_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_f v1_2e_i184189_2e_lcssa_;
  __vec16_f v1_2e_i184189_2e_lcssa___PHI;
  __vec16_f v1_2e_i182191_2e_lcssa_;
  __vec16_f v1_2e_i182191_2e_lcssa___PHI;
  __vec16_f v1_2e_i180193_2e_lcssa_;
  __vec16_f v1_2e_i180193_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val55_;
  __vec16_i32 div_count_load__smear_;
  __vec16_i1 cmp58_;
  __vec16_i32 mul139_;
  uint8_t *array_load65_ptr2int_2void_;
  __vec16_f array_load65_offset_load140_;
  __vec16_f array_load72_offset_load143_;
  __vec16_f array_load79_offset_load148_;
  __vec16_f v1_2e_i184_;
  __vec16_f v1_2e_i182_;
  __vec16_f v1_2e_i180_;

  div_count_load__ = ((int32_t )(((int32_t )count_) / ((int32_t )3u)));
  aligned_end_ = ((uint32_t )(((uint32_t )div_count_load__) - ((uint32_t )(((int32_t )(((int32_t )div_count_load__) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    v1_2e_i184189_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    v1_2e_i182191_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    v1_2e_i180193_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_1199___PHI = 0u;   /* for PHI node */
  v1_2e_i184189198___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  v1_2e_i182191197___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  v1_2e_i180193196___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_1199_ = counter_2e_1199___PHI;
  v1_2e_i184189198_ = v1_2e_i184189198___PHI;
  v1_2e_i182191197_ = v1_2e_i182191197___PHI;
  v1_2e_i180193196_ = v1_2e_i180193196___PHI;
  counter_2e_1199_smear_ = __smear_i32<__vec16_i32>(counter_2e_1199_);
  mul_ = __mul((__add(counter_2e_1199_smear_, __load<64>((const __vec16_i32  *)(VectorConstant1)))), __smear_i32<__vec16_i32>(3u));
  array_load_offset_load126_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul_, __smear_i1<__vec16_i1>(1));
  array_load30_offset_load129_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add(mul_, __smear_i32<__vec16_i32>(1u))), __smear_i1<__vec16_i1>(1));
  array_load36_offset_load134_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add(mul_, __smear_i32<__vec16_i32>(2u))), __smear_i1<__vec16_i1>(1));
  add_xsum_load_x_load_ = __add(v1_2e_i184189198_, array_load_offset_load126_);
  add_ysum_load_y_load_ = __add(v1_2e_i182191197_, array_load30_offset_load129_);
  add_zsum_load_z_load_ = __add(v1_2e_i180193196_, array_load36_offset_load134_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_1199_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_1199___PHI = new_counter_;   /* for PHI node */
    v1_2e_i184189198___PHI = add_xsum_load_x_load_;   /* for PHI node */
    v1_2e_i182191197___PHI = add_ysum_load_y_load_;   /* for PHI node */
    v1_2e_i180193196___PHI = add_zsum_load_z_load_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    v1_2e_i184189_2e_lcssa___PHI = add_xsum_load_x_load_;   /* for PHI node */
    v1_2e_i182191_2e_lcssa___PHI = add_ysum_load_y_load_;   /* for PHI node */
    v1_2e_i180193_2e_lcssa___PHI = add_zsum_load_z_load_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  v1_2e_i180194_ = v1_2e_i180194___PHI;
  v1_2e_i182192_ = v1_2e_i182192___PHI;
  v1_2e_i184190_ = v1_2e_i184190___PHI;
  v1_2e_i_ = __select(__mask_, v1_2e_i184190_, __setzero_float<__vec16_f>());
  calltmp_2e_i_ = __reduce_add_float(v1_2e_i_);
  *result_ = calltmp_2e_i_;
  v1_2e_i188_ = __select(__mask_, v1_2e_i182192_, __setzero_float<__vec16_f>());
  calltmp_2e_i154_ = __reduce_add_float(v1_2e_i188_);
  *((&result_[((int64_t )1ull)])) = calltmp_2e_i154_;
  v1_2e_i186_ = __select(__mask_, v1_2e_i180194_, __setzero_float<__vec16_f>());
  calltmp_2e_i157_ = __reduce_add_float(v1_2e_i186_);
  *((&result_[((int64_t )2ull)])) = calltmp_2e_i157_;
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  v1_2e_i184189_2e_lcssa_ = v1_2e_i184189_2e_lcssa___PHI;
  v1_2e_i182191_2e_lcssa_ = v1_2e_i182191_2e_lcssa___PHI;
  v1_2e_i180193_2e_lcssa_ = v1_2e_i180193_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )div_count_load__))) {
    goto partial_inner_only_label;
  } else {
    v1_2e_i180194___PHI = v1_2e_i180193_2e_lcssa_;   /* for PHI node */
    v1_2e_i182192___PHI = v1_2e_i182191_2e_lcssa_;   /* for PHI node */
    v1_2e_i184190___PHI = v1_2e_i184189_2e_lcssa_;   /* for PHI node */
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val55_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant1)));
  div_count_load__smear_ = __smear_i32<__vec16_i32>(div_count_load__);
  cmp58_ = __signed_less_than_i32(iter_val55_, div_count_load__smear_);
  mul139_ = __mul(iter_val55_, __smear_i32<__vec16_i32>(3u));
  array_load65_ptr2int_2void_ = ((uint8_t *)array_);
  array_load65_offset_load140_ = __gather_base_offsets32_float(array_load65_ptr2int_2void_, 4u, mul139_, cmp58_);
  array_load72_offset_load143_ = __gather_base_offsets32_float(array_load65_ptr2int_2void_, 4u, (__add(mul139_, __smear_i32<__vec16_i32>(1u))), cmp58_);
  array_load79_offset_load148_ = __gather_base_offsets32_float(array_load65_ptr2int_2void_, 4u, (__add(mul139_, __smear_i32<__vec16_i32>(2u))), cmp58_);
  v1_2e_i184_ = __select(cmp58_, (__add(v1_2e_i184189_2e_lcssa_, array_load65_offset_load140_)), v1_2e_i184189_2e_lcssa_);
  v1_2e_i182_ = __select(cmp58_, (__add(v1_2e_i182191_2e_lcssa_, array_load72_offset_load143_)), v1_2e_i182191_2e_lcssa_);
  v1_2e_i180_ = __select(cmp58_, (__add(v1_2e_i180193_2e_lcssa_, array_load79_offset_load148_)), v1_2e_i180193_2e_lcssa_);
  v1_2e_i180194___PHI = v1_2e_i180_;   /* for PHI node */
  v1_2e_i182192___PHI = v1_2e_i182_;   /* for PHI node */
  v1_2e_i184190___PHI = v1_2e_i184_;   /* for PHI node */
  goto foreach_reset_label;

}
}



void xyzSumAOSStdlib___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_) {
  uint32_t storemerge45_;
  uint32_t storemerge45___PHI;
  __vec16_f zsum_2e_044_;
  __vec16_f zsum_2e_044___PHI;
  __vec16_f ysum_2e_043_;
  __vec16_f ysum_2e_043___PHI;
  __vec16_f xsum_2e_042_;
  __vec16_f xsum_2e_042___PHI;
  __vec16_f add_xsum_load_x_load_;
  __vec16_f add_ysum_load_y_load_;
  __vec16_f add_zsum_load_z_load_;
  uint32_t add_i_load12__;
  __vec16_f v1_2e_i_;
  float calltmp_2e_i_;
  __vec16_f v1_2e_i41_;
  float calltmp_2e_i34_;
  __vec16_f v1_2e_i39_;
  float calltmp_2e_i37_;

  storemerge45___PHI = 0u;   /* for PHI node */
  zsum_2e_044___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  ysum_2e_043___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  xsum_2e_042___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto for_loop_label;

  do {     /* Syntactic loop 'for_loop' to make GCC happy */
for_loop_label: {
  storemerge45_ = storemerge45___PHI;
  zsum_2e_044_ = zsum_2e_044___PHI;
  ysum_2e_043_ = ysum_2e_043___PHI;
  xsum_2e_042_ = xsum_2e_042___PHI;
  add_xsum_load_x_load_ = __add(xsum_2e_042_, __vec16_f ( /* UNDEF */));
  add_ysum_load_y_load_ = __add(ysum_2e_043_, __vec16_f ( /* UNDEF */));
  add_zsum_load_z_load_ = __add(zsum_2e_044_, __vec16_f ( /* UNDEF */));
  add_i_load12__ = ((uint32_t )(((uint32_t )storemerge45_) + ((uint32_t )16u)));
  if ((((int32_t )add_i_load12__) < ((int32_t )65536u))) {
    storemerge45___PHI = add_i_load12__;   /* for PHI node */
    zsum_2e_044___PHI = add_zsum_load_z_load_;   /* for PHI node */
    ysum_2e_043___PHI = add_ysum_load_y_load_;   /* for PHI node */
    xsum_2e_042___PHI = add_xsum_load_x_load_;   /* for PHI node */
    goto for_loop_label;
  } else {
    goto for_exit_label;
  }

}
  } while (1); /* end of syntactic loop 'for_loop' */
for_exit_label: {
  v1_2e_i_ = __select(__mask_, add_xsum_load_x_load_, __setzero_float<__vec16_f>());
  calltmp_2e_i_ = __reduce_add_float(v1_2e_i_);
  *result_ = calltmp_2e_i_;
  v1_2e_i41_ = __select(__mask_, add_ysum_load_y_load_, __setzero_float<__vec16_f>());
  calltmp_2e_i34_ = __reduce_add_float(v1_2e_i41_);
  *((&result_[((int64_t )1ull)])) = calltmp_2e_i34_;
  v1_2e_i39_ = __select(__mask_, add_zsum_load_z_load_, __setzero_float<__vec16_f>());
  calltmp_2e_i37_ = __reduce_add_float(v1_2e_i39_);
  *((&result_[((int64_t )2ull)])) = calltmp_2e_i37_;
  return;
}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant2[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant3[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void xyzSumAOSNoCoalesce___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zerosArray_, float *result_, __vec16_i1 __mask_) {
  __vec16_f ptr_masked_load_;
  __vec16_i32 zerosArray_load_offset_load_to_int32_;
  uint32_t div_count_load__;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_1207_;
  uint32_t counter_2e_1207___PHI;
  __vec16_f v1_2e_i192197206_;
  __vec16_f v1_2e_i192197206___PHI;
  __vec16_f v1_2e_i190199205_;
  __vec16_f v1_2e_i190199205___PHI;
  __vec16_f v1_2e_i188201204_;
  __vec16_f v1_2e_i188201204___PHI;
  __vec16_i32 counter_2e_1207_smear_;
  __vec16_i32 mul__i_load28_;
  __vec16_f array_load_offset_load136_;
  __vec16_f array_load35_offset_load139_;
  __vec16_f array_load42_offset_load144_;
  __vec16_f add_xsum_load_x_load_;
  __vec16_f add_ysum_load_y_load_;
  __vec16_f add_zsum_load_z_load_;
  uint32_t new_counter_;
  __vec16_f v1_2e_i188202_;
  __vec16_f v1_2e_i188202___PHI;
  __vec16_f v1_2e_i190200_;
  __vec16_f v1_2e_i190200___PHI;
  __vec16_f v1_2e_i192198_;
  __vec16_f v1_2e_i192198___PHI;
  __vec16_f v1_2e_i_;
  float calltmp_2e_i_;
  __vec16_f v1_2e_i196_;
  float calltmp_2e_i162_;
  __vec16_f v1_2e_i194_;
  float calltmp_2e_i165_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_f v1_2e_i192197_2e_lcssa_;
  __vec16_f v1_2e_i192197_2e_lcssa___PHI;
  __vec16_f v1_2e_i190199_2e_lcssa_;
  __vec16_f v1_2e_i190199_2e_lcssa___PHI;
  __vec16_f v1_2e_i188201_2e_lcssa_;
  __vec16_f v1_2e_i188201_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val61_;
  __vec16_i32 div_count_load__smear_;
  __vec16_i1 cmp64_;
  __vec16_i32 mul__i_load70_;
  uint8_t *array_load72_ptr2int_2void_;
  __vec16_f array_load72_offset_load148_;
  __vec16_f array_load80_offset_load151_;
  __vec16_f array_load88_offset_load156_;
  __vec16_f v1_2e_i192_;
  __vec16_f v1_2e_i190_;
  __vec16_f v1_2e_i188_;

  ptr_masked_load_ = __masked_load_float((((uint8_t *)zerosArray_)), __mask_);
  zerosArray_load_offset_load_to_int32_ = (__cast_fptosi(__vec16_i32 (), ptr_masked_load_));
  div_count_load__ = ((int32_t )(((int32_t )count_) / ((int32_t )3u)));
  aligned_end_ = ((uint32_t )(((uint32_t )div_count_load__) - ((uint32_t )(((int32_t )(((int32_t )div_count_load__) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    v1_2e_i192197_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    v1_2e_i190199_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    v1_2e_i188201_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_1207___PHI = 0u;   /* for PHI node */
  v1_2e_i192197206___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  v1_2e_i190199205___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  v1_2e_i188201204___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_1207_ = counter_2e_1207___PHI;
  v1_2e_i192197206_ = v1_2e_i192197206___PHI;
  v1_2e_i190199205_ = v1_2e_i190199205___PHI;
  v1_2e_i188201204_ = v1_2e_i188201204___PHI;
  counter_2e_1207_smear_ = __smear_i32<__vec16_i32>(counter_2e_1207_);
  mul__i_load28_ = __mul((__add(counter_2e_1207_smear_, __load<64>((const __vec16_i32  *)(VectorConstant3)))), __smear_i32<__vec16_i32>(3u));
  array_load_offset_load136_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add(mul__i_load28_, zerosArray_load_offset_load_to_int32_)), __smear_i1<__vec16_i1>(1));
  array_load35_offset_load139_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add((__add(mul__i_load28_, __smear_i32<__vec16_i32>(1u))), zerosArray_load_offset_load_to_int32_)), __smear_i1<__vec16_i1>(1));
  array_load42_offset_load144_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add((__add(mul__i_load28_, __smear_i32<__vec16_i32>(2u))), zerosArray_load_offset_load_to_int32_)), __smear_i1<__vec16_i1>(1));
  add_xsum_load_x_load_ = __add(v1_2e_i192197206_, array_load_offset_load136_);
  add_ysum_load_y_load_ = __add(v1_2e_i190199205_, array_load35_offset_load139_);
  add_zsum_load_z_load_ = __add(v1_2e_i188201204_, array_load42_offset_load144_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_1207_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_1207___PHI = new_counter_;   /* for PHI node */
    v1_2e_i192197206___PHI = add_xsum_load_x_load_;   /* for PHI node */
    v1_2e_i190199205___PHI = add_ysum_load_y_load_;   /* for PHI node */
    v1_2e_i188201204___PHI = add_zsum_load_z_load_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    v1_2e_i192197_2e_lcssa___PHI = add_xsum_load_x_load_;   /* for PHI node */
    v1_2e_i190199_2e_lcssa___PHI = add_ysum_load_y_load_;   /* for PHI node */
    v1_2e_i188201_2e_lcssa___PHI = add_zsum_load_z_load_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  v1_2e_i188202_ = v1_2e_i188202___PHI;
  v1_2e_i190200_ = v1_2e_i190200___PHI;
  v1_2e_i192198_ = v1_2e_i192198___PHI;
  v1_2e_i_ = __select(__mask_, v1_2e_i192198_, __setzero_float<__vec16_f>());
  calltmp_2e_i_ = __reduce_add_float(v1_2e_i_);
  *result_ = calltmp_2e_i_;
  v1_2e_i196_ = __select(__mask_, v1_2e_i190200_, __setzero_float<__vec16_f>());
  calltmp_2e_i162_ = __reduce_add_float(v1_2e_i196_);
  *((&result_[((int64_t )1ull)])) = calltmp_2e_i162_;
  v1_2e_i194_ = __select(__mask_, v1_2e_i188202_, __setzero_float<__vec16_f>());
  calltmp_2e_i165_ = __reduce_add_float(v1_2e_i194_);
  *((&result_[((int64_t )2ull)])) = calltmp_2e_i165_;
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  v1_2e_i192197_2e_lcssa_ = v1_2e_i192197_2e_lcssa___PHI;
  v1_2e_i190199_2e_lcssa_ = v1_2e_i190199_2e_lcssa___PHI;
  v1_2e_i188201_2e_lcssa_ = v1_2e_i188201_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )div_count_load__))) {
    goto partial_inner_only_label;
  } else {
    v1_2e_i188202___PHI = v1_2e_i188201_2e_lcssa_;   /* for PHI node */
    v1_2e_i190200___PHI = v1_2e_i190199_2e_lcssa_;   /* for PHI node */
    v1_2e_i192198___PHI = v1_2e_i192197_2e_lcssa_;   /* for PHI node */
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val61_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant3)));
  div_count_load__smear_ = __smear_i32<__vec16_i32>(div_count_load__);
  cmp64_ = __signed_less_than_i32(iter_val61_, div_count_load__smear_);
  mul__i_load70_ = __mul(iter_val61_, __smear_i32<__vec16_i32>(3u));
  array_load72_ptr2int_2void_ = ((uint8_t *)array_);
  array_load72_offset_load148_ = __gather_base_offsets32_float(array_load72_ptr2int_2void_, 4u, (__add(mul__i_load70_, zerosArray_load_offset_load_to_int32_)), cmp64_);
  array_load80_offset_load151_ = __gather_base_offsets32_float(array_load72_ptr2int_2void_, 4u, (__add((__add(mul__i_load70_, __smear_i32<__vec16_i32>(1u))), zerosArray_load_offset_load_to_int32_)), cmp64_);
  array_load88_offset_load156_ = __gather_base_offsets32_float(array_load72_ptr2int_2void_, 4u, (__add((__add(mul__i_load70_, __smear_i32<__vec16_i32>(2u))), zerosArray_load_offset_load_to_int32_)), cmp64_);
  v1_2e_i192_ = __select(cmp64_, (__add(v1_2e_i192197_2e_lcssa_, array_load72_offset_load148_)), v1_2e_i192197_2e_lcssa_);
  v1_2e_i190_ = __select(cmp64_, (__add(v1_2e_i190199_2e_lcssa_, array_load80_offset_load151_)), v1_2e_i190199_2e_lcssa_);
  v1_2e_i188_ = __select(cmp64_, (__add(v1_2e_i188201_2e_lcssa_, array_load88_offset_load156_)), v1_2e_i188201_2e_lcssa_);
  v1_2e_i188202___PHI = v1_2e_i188_;   /* for PHI node */
  v1_2e_i190200___PHI = v1_2e_i190_;   /* for PHI node */
  v1_2e_i192198___PHI = v1_2e_i192_;   /* for PHI node */
  goto foreach_reset_label;

}
}



void xyzSumSOA___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_) {
   /*tail*/ __do_assert_uniform(((&__str.array[((int64_t )0ull)])));
  /*UNREACHABLE*/;
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant4[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant5[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void gathers___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_) {
  __vec16_f ptr_masked_load_;
  __vec16_i32 zeros_load_offset_load_to_int32_;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_189_;
  uint32_t counter_2e_189___PHI;
  __vec16_f v1_2e_i848588_;
  __vec16_f v1_2e_i848588___PHI;
  __vec16_i32 counter_2e_189_smear_;
  __vec16_f array_load_offset_load78_;
  __vec16_f add_sum_load_array_load_offset_load_;
  uint32_t new_counter_;
  __vec16_f v1_2e_i8486_;
  __vec16_f v1_2e_i8486___PHI;
  __vec16_f v1_2e_i_;
  float calltmp_2e_i_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_f v1_2e_i8485_2e_lcssa_;
  __vec16_f v1_2e_i8485_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val43_;
  __vec16_i32 count_smear_;
  __vec16_i1 cmp46_;
  __vec16_f array_load53_offset_load79_;
  __vec16_f v1_2e_i84_;

  ptr_masked_load_ = __masked_load_float((((uint8_t *)zeros_)), __mask_);
  zeros_load_offset_load_to_int32_ = (__cast_fptosi(__vec16_i32 (), ptr_masked_load_));
  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    v1_2e_i8485_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_189___PHI = 0u;   /* for PHI node */
  v1_2e_i848588___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_189_ = counter_2e_189___PHI;
  v1_2e_i848588_ = v1_2e_i848588___PHI;
  counter_2e_189_smear_ = __smear_i32<__vec16_i32>(counter_2e_189_);
  array_load_offset_load78_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add((__add(counter_2e_189_smear_, __load<64>((const __vec16_i32  *)(VectorConstant5)))), zeros_load_offset_load_to_int32_)), __smear_i1<__vec16_i1>(1));
  add_sum_load_array_load_offset_load_ = __add(v1_2e_i848588_, array_load_offset_load78_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_189_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_189___PHI = new_counter_;   /* for PHI node */
    v1_2e_i848588___PHI = add_sum_load_array_load_offset_load_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    v1_2e_i8485_2e_lcssa___PHI = add_sum_load_array_load_offset_load_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  v1_2e_i8486_ = v1_2e_i8486___PHI;
  v1_2e_i_ = __select(__mask_, v1_2e_i8486_, __setzero_float<__vec16_f>());
  calltmp_2e_i_ = __reduce_add_float(v1_2e_i_);
  *result_ = calltmp_2e_i_;
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  v1_2e_i8485_2e_lcssa_ = v1_2e_i8485_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    v1_2e_i8486___PHI = v1_2e_i8485_2e_lcssa_;   /* for PHI node */
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val43_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant5)));
  count_smear_ = __smear_i32<__vec16_i32>(count_);
  cmp46_ = __signed_less_than_i32(iter_val43_, count_smear_);
  array_load53_offset_load79_ = __gather_base_offsets32_float((((uint8_t *)array_)), 4u, (__add(iter_val43_, zeros_load_offset_load_to_int32_)), cmp46_);
  v1_2e_i84_ = __select(cmp46_, (__add(v1_2e_i8485_2e_lcssa_, array_load53_offset_load79_)), v1_2e_i8485_2e_lcssa_);
  v1_2e_i8486___PHI = v1_2e_i84_;   /* for PHI node */
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant6[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void loads___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_) {
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_184_;
  uint32_t counter_2e_184___PHI;
  __vec16_f v1_2e_i798083_;
  __vec16_f v1_2e_i798083___PHI;
  __vec16_f ptr_masked_load74_;
  __vec16_f add_sum_load_array_load_offset_load_;
  uint32_t new_counter_;
  __vec16_f v1_2e_i7981_;
  __vec16_f v1_2e_i7981___PHI;
  __vec16_f v1_2e_i_;
  float calltmp_2e_i_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_f v1_2e_i7980_2e_lcssa_;
  __vec16_f v1_2e_i7980_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 count_smear_;
  __vec16_i1 cmp42_;
  __vec16_f ptr77_masked_load_;
  __vec16_f v1_2e_i79_;

  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    v1_2e_i7980_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_184___PHI = 0u;   /* for PHI node */
  v1_2e_i798083___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_184_ = counter_2e_184___PHI;
  v1_2e_i798083_ = v1_2e_i798083___PHI;
  ptr_masked_load74_ = __load<4>((((__vec16_f (*))((&array_load_ptr2int_2void_[((int64_t )(((int64_t )(int32_t )(counter_2e_184_ << 2u))))])))));
  add_sum_load_array_load_offset_load_ = __add(v1_2e_i798083_, ptr_masked_load74_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_184_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_184___PHI = new_counter_;   /* for PHI node */
    v1_2e_i798083___PHI = add_sum_load_array_load_offset_load_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    v1_2e_i7980_2e_lcssa___PHI = add_sum_load_array_load_offset_load_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  v1_2e_i7981_ = v1_2e_i7981___PHI;
  v1_2e_i_ = __select(__mask_, v1_2e_i7981_, __setzero_float<__vec16_f>());
  calltmp_2e_i_ = __reduce_add_float(v1_2e_i_);
  *result_ = calltmp_2e_i_;
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  v1_2e_i7980_2e_lcssa_ = v1_2e_i7980_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    v1_2e_i7981___PHI = v1_2e_i7980_2e_lcssa_;   /* for PHI node */
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  count_smear_ = __smear_i32<__vec16_i32>(count_);
  cmp42_ = __signed_less_than_i32((__add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant6)))), count_smear_);
  ptr77_masked_load_ = __masked_load_float(((&(((uint8_t *)array_))[((int64_t )(((int64_t )(int32_t )(counter_2e_1_2e_lcssa_ << 2u))))])), cmp42_);
  v1_2e_i79_ = __select(cmp42_, (__add(v1_2e_i7980_2e_lcssa_, ptr77_masked_load_)), v1_2e_i7980_2e_lcssa_);
  v1_2e_i7981___PHI = v1_2e_i79_;   /* for PHI node */
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant7[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant8[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void scatters___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_) {
  __vec16_f ptr_masked_load_;
  __vec16_i32 zeros_load_offset_load_to_int32_;
  uint32_t aligned_end_;
  __vec16_f zero_load29_to_float_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_173_;
  uint32_t counter_2e_173___PHI;
  __vec16_i32 counter_2e_173_smear_;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val42_;
  __vec16_i32 count_smear_;

  ptr_masked_load_ =  /*tail*/ __masked_load_float((((uint8_t *)zeros_)), __mask_);
  zeros_load_offset_load_to_int32_ = (__cast_fptosi(__vec16_i32 (), ptr_masked_load_));
  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  zero_load29_to_float_ = (__cast_sitofp(__vec16_f (), zeros_load_offset_load_to_int32_));
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_173___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_173_ = counter_2e_173___PHI;
  counter_2e_173_smear_ = __smear_i32<__vec16_i32>(counter_2e_173_);
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add((__add(counter_2e_173_smear_, __load<64>((const __vec16_i32  *)(VectorConstant8)))), zeros_load_offset_load_to_int32_)), zero_load29_to_float_, __smear_i1<__vec16_i1>(1));
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_173_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_173___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val42_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant8)));
  count_smear_ = __smear_i32<__vec16_i32>(count_);
   /*tail*/ __scatter_base_offsets32_float((((uint8_t *)array_)), 4u, (__add(iter_val42_, zeros_load_offset_load_to_int32_)), ((__cast_sitofp(__vec16_f (), zeros_load_offset_load_to_int32_))), (__signed_less_than_i32(iter_val42_, count_smear_)));
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant9[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void stores___un_3C_unf_3E_uniun_3C_unf_3E_un_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, float *result_, __vec16_i1 __mask_) {
  __vec16_f ptr_masked_load_;
  __vec16_i32 zeros_load_offset_load_to_int32_;
  uint32_t aligned_end_;
  __vec16_f zero_load_to_float_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_173_;
  uint32_t counter_2e_173___PHI;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 count_smear_;

  ptr_masked_load_ =  /*tail*/ __masked_load_float((((uint8_t *)zeros_)), __mask_);
  zeros_load_offset_load_to_int32_ = (__cast_fptosi(__vec16_i32 (), ptr_masked_load_));
  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  zero_load_to_float_ = (__cast_sitofp(__vec16_f (), zeros_load_offset_load_to_int32_));
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_173___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_173_ = counter_2e_173___PHI;
  __store<4>((((__vec16_f (*))((&array_load_ptr2int_2void_[((int64_t )(((int64_t )(int32_t )(counter_2e_173_ << 2u))))])))), zero_load_to_float_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_173_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_173___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  count_smear_ = __smear_i32<__vec16_i32>(count_);
  __masked_store_float((((__vec16_f (*))((&(((uint8_t *)array_))[((int64_t )(((int64_t )(int32_t )(counter_2e_1_2e_lcssa_ << 2u))))])))), ((__cast_sitofp(__vec16_f (), zeros_load_offset_load_to_int32_))), (__signed_less_than_i32((__add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant9)))), count_smear_)));
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant10[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant11[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void normalizeAOSNoCoalesce___un_3C_unf_3E_uniun_3C_unf_3E_(float *array_, uint32_t count_, float *zeroArray_, __vec16_i1 __mask_) {
  __vec16_f ptr_masked_load_;
  uint32_t div_count_load__;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_1352_;
  uint32_t counter_2e_1352___PHI;
  __vec16_i32 counter_2e_1352_smear_;
  __vec16_i32 mul__i_load27_;
  __vec16_f array_load_offset_load173_;
  __vec16_i32 add_mul__i_load32__;
  __vec16_f array_load34_offset_load176_;
  __vec16_i32 add_mul__i_load39__;
  __vec16_f array_load41_offset_load181_;
  __vec16_f add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_;
  __vec16_f array_load50_offset_load187_;
  __vec16_f array_load60_offset_load204_;
  __vec16_f array_load71_offset_load223_;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val89_;
  __vec16_i32 div_count_load__smear_;
  __vec16_i1 cmp92_;
  __vec16_i32 mul__i_load98_;
  uint8_t *array_load100_ptr2int_2void_;
  __vec16_f array_load100_offset_load244_;
  __vec16_i32 add_mul__i_load106__;
  __vec16_f array_load108_offset_load247_;
  __vec16_i32 add_mul__i_load114__;
  __vec16_f array_load116_offset_load252_;
  __vec16_f add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_;
  __vec16_f array_load129_offset_load260_;
  __vec16_f array_load140_offset_load277_;
  __vec16_f array_load151_offset_load296_;

  ptr_masked_load_ =  /*tail*/ __masked_load_float((((uint8_t *)zeroArray_)), __mask_);
  div_count_load__ = ((int32_t )(((int32_t )count_) / ((int32_t )3u)));
  aligned_end_ = ((uint32_t )(((uint32_t )div_count_load__) - ((uint32_t )(((int32_t )(((int32_t )div_count_load__) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_1352___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_1352_ = counter_2e_1352___PHI;
  counter_2e_1352_smear_ = __smear_i32<__vec16_i32>(counter_2e_1352_);
  mul__i_load27_ = __mul((__add(counter_2e_1352_smear_, __load<64>((const __vec16_i32  *)(VectorConstant11)))), __smear_i32<__vec16_i32>(3u));
  array_load_offset_load173_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load_, ((__cast_sitofp(__vec16_f (), mul__i_load27_)))))))), __smear_i1<__vec16_i1>(1));
  add_mul__i_load32__ = __add(mul__i_load27_, __smear_i32<__vec16_i32>(1u));
  array_load34_offset_load176_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load_, ((__cast_sitofp(__vec16_f (), add_mul__i_load32__)))))))), __smear_i1<__vec16_i1>(1));
  add_mul__i_load39__ = __add(mul__i_load27_, __smear_i32<__vec16_i32>(2u));
  array_load41_offset_load181_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load_, ((__cast_sitofp(__vec16_f (), add_mul__i_load39__)))))))), __smear_i1<__vec16_i1>(1));
  add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_ = __add((__add((__mul(array_load_offset_load173_, array_load_offset_load173_)), (__mul(array_load34_offset_load176_, array_load34_offset_load176_)))), (__mul(array_load41_offset_load181_, array_load41_offset_load181_)));
  array_load50_offset_load187_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul__i_load27_, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul__i_load27_, (__div(array_load50_offset_load187_, add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_)), __smear_i1<__vec16_i1>(1));
  array_load60_offset_load204_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load32__, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load32__, (__div(array_load60_offset_load204_, add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_)), __smear_i1<__vec16_i1>(1));
  array_load71_offset_load223_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load39__, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load39__, (__div(array_load71_offset_load223_, add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_)), __smear_i1<__vec16_i1>(1));
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_1352_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_1352___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )div_count_load__))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val89_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant11)));
  div_count_load__smear_ = __smear_i32<__vec16_i32>(div_count_load__);
  cmp92_ = __signed_less_than_i32(iter_val89_, div_count_load__smear_);
  mul__i_load98_ = __mul(iter_val89_, __smear_i32<__vec16_i32>(3u));
  array_load100_ptr2int_2void_ = ((uint8_t *)array_);
  array_load100_offset_load244_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load_, ((__cast_sitofp(__vec16_f (), mul__i_load98_)))))))), cmp92_);
  add_mul__i_load106__ = __add(mul__i_load98_, __smear_i32<__vec16_i32>(1u));
  array_load108_offset_load247_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load_, ((__cast_sitofp(__vec16_f (), add_mul__i_load106__)))))))), cmp92_);
  add_mul__i_load114__ = __add(mul__i_load98_, __smear_i32<__vec16_i32>(2u));
  array_load116_offset_load252_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load_, ((__cast_sitofp(__vec16_f (), add_mul__i_load114__)))))))), cmp92_);
  add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_ = __add((__add((__mul(array_load100_offset_load244_, array_load100_offset_load244_)), (__mul(array_load108_offset_load247_, array_load108_offset_load247_)))), (__mul(array_load116_offset_load252_, array_load116_offset_load252_)));
  array_load129_offset_load260_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, mul__i_load98_, cmp92_);
   /*tail*/ __scatter_base_offsets32_float(array_load100_ptr2int_2void_, 4u, mul__i_load98_, (__div(array_load129_offset_load260_, add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_)), cmp92_);
  array_load140_offset_load277_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, add_mul__i_load106__, cmp92_);
   /*tail*/ __scatter_base_offsets32_float(array_load100_ptr2int_2void_, 4u, add_mul__i_load106__, (__div(array_load140_offset_load277_, add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_)), cmp92_);
  array_load151_offset_load296_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, add_mul__i_load114__, cmp92_);
   /*tail*/ __scatter_base_offsets32_float(array_load100_ptr2int_2void_, 4u, add_mul__i_load114__, (__div(array_load151_offset_load296_, add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_)), cmp92_);
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant12[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant13[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void normalizeSOA___un_3C_unf_3E_uniun_3C_unf_3E_(float *array_, uint32_t count_, float *zeros_, __vec16_i1 __mask_) {
  uint32_t div_count_load__;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_1346_;
  uint32_t counter_2e_1346___PHI;
  __vec16_i32 counter_2e_1346_smear_;
  __vec16_i32 mul_;
  __vec16_f array_load_offset_load163_;
  __vec16_i32 add_mul__i_load28__;
  __vec16_f array_load29_offset_load166_;
  __vec16_i32 add_mul__i_load34__;
  __vec16_f array_load35_offset_load171_;
  __vec16_f add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_;
  __vec16_f array_load44_offset_load179_;
  __vec16_f array_load54_offset_load196_;
  __vec16_f array_load65_offset_load215_;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val83_;
  __vec16_i32 div_count_load__smear_;
  __vec16_i1 cmp86_;
  __vec16_i32 mul237_;
  uint8_t *array_load93_ptr2int_2void_;
  __vec16_f array_load93_offset_load238_;
  __vec16_i32 add_mul__i_load99__;
  __vec16_f array_load100_offset_load241_;
  __vec16_i32 add_mul__i_load106__;
  __vec16_f array_load107_offset_load246_;
  __vec16_f add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_;
  __vec16_f array_load120_offset_load254_;
  __vec16_f array_load131_offset_load271_;
  __vec16_f array_load142_offset_load290_;

  div_count_load__ = ((int32_t )(((int32_t )count_) / ((int32_t )3u)));
  aligned_end_ = ((uint32_t )(((uint32_t )div_count_load__) - ((uint32_t )(((int32_t )(((int32_t )div_count_load__) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_1346___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_1346_ = counter_2e_1346___PHI;
  counter_2e_1346_smear_ = __smear_i32<__vec16_i32>(counter_2e_1346_);
  mul_ = __mul((__add(counter_2e_1346_smear_, __load<64>((const __vec16_i32  *)(VectorConstant13)))), __smear_i32<__vec16_i32>(3u));
  array_load_offset_load163_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul_, __smear_i1<__vec16_i1>(1));
  add_mul__i_load28__ = __add(mul_, __smear_i32<__vec16_i32>(1u));
  array_load29_offset_load166_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load28__, __smear_i1<__vec16_i1>(1));
  add_mul__i_load34__ = __add(mul_, __smear_i32<__vec16_i32>(2u));
  array_load35_offset_load171_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load34__, __smear_i1<__vec16_i1>(1));
  add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_ = __add((__add((__mul(array_load_offset_load163_, array_load_offset_load163_)), (__mul(array_load29_offset_load166_, array_load29_offset_load166_)))), (__mul(array_load35_offset_load171_, array_load35_offset_load171_)));
  array_load44_offset_load179_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul_, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul_, (__div(array_load44_offset_load179_, add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_)), __smear_i1<__vec16_i1>(1));
  array_load54_offset_load196_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load28__, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load28__, (__div(array_load54_offset_load196_, add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_)), __smear_i1<__vec16_i1>(1));
  array_load65_offset_load215_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load34__, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load34__, (__div(array_load65_offset_load215_, add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_)), __smear_i1<__vec16_i1>(1));
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_1346_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_1346___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )div_count_load__))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val83_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant13)));
  div_count_load__smear_ = __smear_i32<__vec16_i32>(div_count_load__);
  cmp86_ = __signed_less_than_i32(iter_val83_, div_count_load__smear_);
  mul237_ = __mul(iter_val83_, __smear_i32<__vec16_i32>(3u));
  array_load93_ptr2int_2void_ = ((uint8_t *)array_);
  array_load93_offset_load238_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, mul237_, cmp86_);
  add_mul__i_load99__ = __add(mul237_, __smear_i32<__vec16_i32>(1u));
  array_load100_offset_load241_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load99__, cmp86_);
  add_mul__i_load106__ = __add(mul237_, __smear_i32<__vec16_i32>(2u));
  array_load107_offset_load246_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load106__, cmp86_);
  add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_ = __add((__add((__mul(array_load93_offset_load238_, array_load93_offset_load238_)), (__mul(array_load100_offset_load241_, array_load100_offset_load241_)))), (__mul(array_load107_offset_load246_, array_load107_offset_load246_)));
  array_load120_offset_load254_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, mul237_, cmp86_);
   /*tail*/ __scatter_base_offsets32_float(array_load93_ptr2int_2void_, 4u, mul237_, (__div(array_load120_offset_load254_, add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_)), cmp86_);
  array_load131_offset_load271_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load99__, cmp86_);
   /*tail*/ __scatter_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load99__, (__div(array_load131_offset_load271_, add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_)), cmp86_);
  array_load142_offset_load290_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load106__, cmp86_);
   /*tail*/ __scatter_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load106__, (__div(array_load142_offset_load290_, add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_)), cmp86_);
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant14[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant15[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void xyzSumAOS(float *array_, uint32_t count_, float *zeros_, float *result_) {
  uint32_t div_count_load__;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_1196_;
  uint32_t counter_2e_1196___PHI;
  __vec16_f v1_2e_i186195_;
  __vec16_f v1_2e_i186195___PHI;
  __vec16_f v1_2e_i185188194_;
  __vec16_f v1_2e_i185188194___PHI;
  __vec16_f v1_2e_i183190193_;
  __vec16_f v1_2e_i183190193___PHI;
  __vec16_i32 counter_2e_1196_smear_;
  __vec16_i32 mul_;
  __vec16_f array_load_offset_load126_;
  __vec16_f array_load30_offset_load129_;
  __vec16_f array_load36_offset_load134_;
  __vec16_f add_xsum_load_x_load_;
  __vec16_f add_ysum_load_y_load_;
  __vec16_f add_zsum_load_z_load_;
  uint32_t new_counter_;
  __vec16_f v1_2e_i183191_;
  __vec16_f v1_2e_i183191___PHI;
  __vec16_f v1_2e_i185189_;
  __vec16_f v1_2e_i185189___PHI;
  __vec16_f v1_2e_i187_;
  __vec16_f v1_2e_i187___PHI;
  float calltmp_2e_i_;
  float calltmp_2e_i154_;
  float calltmp_2e_i157_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_f v1_2e_i186_2e_lcssa_;
  __vec16_f v1_2e_i186_2e_lcssa___PHI;
  __vec16_f v1_2e_i185188_2e_lcssa_;
  __vec16_f v1_2e_i185188_2e_lcssa___PHI;
  __vec16_f v1_2e_i183190_2e_lcssa_;
  __vec16_f v1_2e_i183190_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val55_;
  __vec16_i32 div_count_load__smear_;
  __vec16_i1 cmp58_;
  __vec16_i32 mul139_;
  uint8_t *array_load65_ptr2int_2void_;
  __vec16_f array_load65_offset_load140_;
  __vec16_f array_load72_offset_load143_;
  __vec16_f array_load79_offset_load148_;
  __vec16_f v1_2e_i_;
  __vec16_f v1_2e_i185_;
  __vec16_f v1_2e_i183_;

  div_count_load__ = ((int32_t )(((int32_t )count_) / ((int32_t )3u)));
  aligned_end_ = ((uint32_t )(((uint32_t )div_count_load__) - ((uint32_t )(((int32_t )(((int32_t )div_count_load__) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    v1_2e_i186_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    v1_2e_i185188_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    v1_2e_i183190_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_1196___PHI = 0u;   /* for PHI node */
  v1_2e_i186195___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  v1_2e_i185188194___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  v1_2e_i183190193___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_1196_ = counter_2e_1196___PHI;
  v1_2e_i186195_ = v1_2e_i186195___PHI;
  v1_2e_i185188194_ = v1_2e_i185188194___PHI;
  v1_2e_i183190193_ = v1_2e_i183190193___PHI;
  counter_2e_1196_smear_ = __smear_i32<__vec16_i32>(counter_2e_1196_);
  mul_ = __mul((__add(counter_2e_1196_smear_, __load<64>((const __vec16_i32  *)(VectorConstant15)))), __smear_i32<__vec16_i32>(3u));
  array_load_offset_load126_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul_, __smear_i1<__vec16_i1>(1));
  array_load30_offset_load129_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add(mul_, __smear_i32<__vec16_i32>(1u))), __smear_i1<__vec16_i1>(1));
  array_load36_offset_load134_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add(mul_, __smear_i32<__vec16_i32>(2u))), __smear_i1<__vec16_i1>(1));
  add_xsum_load_x_load_ = __add(v1_2e_i186195_, array_load_offset_load126_);
  add_ysum_load_y_load_ = __add(v1_2e_i185188194_, array_load30_offset_load129_);
  add_zsum_load_z_load_ = __add(v1_2e_i183190193_, array_load36_offset_load134_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_1196_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_1196___PHI = new_counter_;   /* for PHI node */
    v1_2e_i186195___PHI = add_xsum_load_x_load_;   /* for PHI node */
    v1_2e_i185188194___PHI = add_ysum_load_y_load_;   /* for PHI node */
    v1_2e_i183190193___PHI = add_zsum_load_z_load_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    v1_2e_i186_2e_lcssa___PHI = add_xsum_load_x_load_;   /* for PHI node */
    v1_2e_i185188_2e_lcssa___PHI = add_ysum_load_y_load_;   /* for PHI node */
    v1_2e_i183190_2e_lcssa___PHI = add_zsum_load_z_load_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  v1_2e_i183191_ = v1_2e_i183191___PHI;
  v1_2e_i185189_ = v1_2e_i185189___PHI;
  v1_2e_i187_ = v1_2e_i187___PHI;
  calltmp_2e_i_ = __reduce_add_float(v1_2e_i187_);
  *result_ = calltmp_2e_i_;
  calltmp_2e_i154_ = __reduce_add_float(v1_2e_i185189_);
  *((&result_[((int64_t )1ull)])) = calltmp_2e_i154_;
  calltmp_2e_i157_ = __reduce_add_float(v1_2e_i183191_);
  *((&result_[((int64_t )2ull)])) = calltmp_2e_i157_;
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  v1_2e_i186_2e_lcssa_ = v1_2e_i186_2e_lcssa___PHI;
  v1_2e_i185188_2e_lcssa_ = v1_2e_i185188_2e_lcssa___PHI;
  v1_2e_i183190_2e_lcssa_ = v1_2e_i183190_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )div_count_load__))) {
    goto partial_inner_only_label;
  } else {
    v1_2e_i183191___PHI = v1_2e_i183190_2e_lcssa_;   /* for PHI node */
    v1_2e_i185189___PHI = v1_2e_i185188_2e_lcssa_;   /* for PHI node */
    v1_2e_i187___PHI = v1_2e_i186_2e_lcssa_;   /* for PHI node */
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val55_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant15)));
  div_count_load__smear_ = __smear_i32<__vec16_i32>(div_count_load__);
  cmp58_ = __signed_less_than_i32(iter_val55_, div_count_load__smear_);
  mul139_ = __mul(iter_val55_, __smear_i32<__vec16_i32>(3u));
  array_load65_ptr2int_2void_ = ((uint8_t *)array_);
  array_load65_offset_load140_ = __gather_base_offsets32_float(array_load65_ptr2int_2void_, 4u, mul139_, cmp58_);
  array_load72_offset_load143_ = __gather_base_offsets32_float(array_load65_ptr2int_2void_, 4u, (__add(mul139_, __smear_i32<__vec16_i32>(1u))), cmp58_);
  array_load79_offset_load148_ = __gather_base_offsets32_float(array_load65_ptr2int_2void_, 4u, (__add(mul139_, __smear_i32<__vec16_i32>(2u))), cmp58_);
  v1_2e_i_ = __select(cmp58_, (__add(v1_2e_i186_2e_lcssa_, array_load65_offset_load140_)), v1_2e_i186_2e_lcssa_);
  v1_2e_i185_ = __select(cmp58_, (__add(v1_2e_i185188_2e_lcssa_, array_load72_offset_load143_)), v1_2e_i185188_2e_lcssa_);
  v1_2e_i183_ = __select(cmp58_, (__add(v1_2e_i183190_2e_lcssa_, array_load79_offset_load148_)), v1_2e_i183190_2e_lcssa_);
  v1_2e_i183191___PHI = v1_2e_i183_;   /* for PHI node */
  v1_2e_i185189___PHI = v1_2e_i185_;   /* for PHI node */
  v1_2e_i187___PHI = v1_2e_i_;   /* for PHI node */
  goto foreach_reset_label;

}
}



void xyzSumAOSStdlib(float *array_, uint32_t count_, float *zeros_, float *result_) {
  uint32_t storemerge43_;
  uint32_t storemerge43___PHI;
  __vec16_f zsum_2e_042_;
  __vec16_f zsum_2e_042___PHI;
  __vec16_f ysum_2e_041_;
  __vec16_f ysum_2e_041___PHI;
  __vec16_f xsum_2e_040_;
  __vec16_f xsum_2e_040___PHI;
  __vec16_f add_xsum_load_x_load_;
  __vec16_f add_ysum_load_y_load_;
  __vec16_f add_zsum_load_z_load_;
  uint32_t add_i_load12__;
  float calltmp_2e_i_;
  float calltmp_2e_i34_;
  float calltmp_2e_i37_;

  storemerge43___PHI = 0u;   /* for PHI node */
  zsum_2e_042___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  ysum_2e_041___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  xsum_2e_040___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto for_loop_label;

  do {     /* Syntactic loop 'for_loop' to make GCC happy */
for_loop_label: {
  storemerge43_ = storemerge43___PHI;
  zsum_2e_042_ = zsum_2e_042___PHI;
  ysum_2e_041_ = ysum_2e_041___PHI;
  xsum_2e_040_ = xsum_2e_040___PHI;
  add_xsum_load_x_load_ = __add(xsum_2e_040_, __vec16_f ( /* UNDEF */));
  add_ysum_load_y_load_ = __add(ysum_2e_041_, __vec16_f ( /* UNDEF */));
  add_zsum_load_z_load_ = __add(zsum_2e_042_, __vec16_f ( /* UNDEF */));
  add_i_load12__ = ((uint32_t )(((uint32_t )storemerge43_) + ((uint32_t )16u)));
  if ((((int32_t )add_i_load12__) < ((int32_t )65536u))) {
    storemerge43___PHI = add_i_load12__;   /* for PHI node */
    zsum_2e_042___PHI = add_zsum_load_z_load_;   /* for PHI node */
    ysum_2e_041___PHI = add_ysum_load_y_load_;   /* for PHI node */
    xsum_2e_040___PHI = add_xsum_load_x_load_;   /* for PHI node */
    goto for_loop_label;
  } else {
    goto for_exit_label;
  }

}
  } while (1); /* end of syntactic loop 'for_loop' */
for_exit_label: {
  calltmp_2e_i_ = __reduce_add_float(add_xsum_load_x_load_);
  *result_ = calltmp_2e_i_;
  calltmp_2e_i34_ = __reduce_add_float(add_ysum_load_y_load_);
  *((&result_[((int64_t )1ull)])) = calltmp_2e_i34_;
  calltmp_2e_i37_ = __reduce_add_float(add_zsum_load_z_load_);
  *((&result_[((int64_t )2ull)])) = calltmp_2e_i37_;
  return;
}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant16[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant17[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void xyzSumAOSNoCoalesce(float *array_, uint32_t count_, float *zerosArray_, float *result_) {
  __vec16_f ptr_masked_load166_;
  __vec16_i32 zerosArray_load_offset_load_to_int32_;
  uint32_t div_count_load__;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_1205_;
  uint32_t counter_2e_1205___PHI;
  __vec16_f v1_2e_i195204_;
  __vec16_f v1_2e_i195204___PHI;
  __vec16_f v1_2e_i194197203_;
  __vec16_f v1_2e_i194197203___PHI;
  __vec16_f v1_2e_i192199202_;
  __vec16_f v1_2e_i192199202___PHI;
  __vec16_i32 counter_2e_1205_smear_;
  __vec16_i32 mul__i_load28_;
  __vec16_f array_load_offset_load136_;
  __vec16_f array_load35_offset_load139_;
  __vec16_f array_load42_offset_load144_;
  __vec16_f add_xsum_load_x_load_;
  __vec16_f add_ysum_load_y_load_;
  __vec16_f add_zsum_load_z_load_;
  uint32_t new_counter_;
  __vec16_f v1_2e_i192200_;
  __vec16_f v1_2e_i192200___PHI;
  __vec16_f v1_2e_i194198_;
  __vec16_f v1_2e_i194198___PHI;
  __vec16_f v1_2e_i196_;
  __vec16_f v1_2e_i196___PHI;
  float calltmp_2e_i_;
  float calltmp_2e_i162_;
  float calltmp_2e_i165_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_f v1_2e_i195_2e_lcssa_;
  __vec16_f v1_2e_i195_2e_lcssa___PHI;
  __vec16_f v1_2e_i194197_2e_lcssa_;
  __vec16_f v1_2e_i194197_2e_lcssa___PHI;
  __vec16_f v1_2e_i192199_2e_lcssa_;
  __vec16_f v1_2e_i192199_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val61_;
  __vec16_i32 div_count_load__smear_;
  __vec16_i1 cmp64_;
  __vec16_i32 mul__i_load70_;
  uint8_t *array_load72_ptr2int_2void_;
  __vec16_f array_load72_offset_load148_;
  __vec16_f array_load80_offset_load151_;
  __vec16_f array_load88_offset_load156_;
  __vec16_f v1_2e_i_;
  __vec16_f v1_2e_i194_;
  __vec16_f v1_2e_i192_;

  ptr_masked_load166_ = __load<4>((((__vec16_f (*))zerosArray_)));
  zerosArray_load_offset_load_to_int32_ = (__cast_fptosi(__vec16_i32 (), ptr_masked_load166_));
  div_count_load__ = ((int32_t )(((int32_t )count_) / ((int32_t )3u)));
  aligned_end_ = ((uint32_t )(((uint32_t )div_count_load__) - ((uint32_t )(((int32_t )(((int32_t )div_count_load__) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    v1_2e_i195_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    v1_2e_i194197_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    v1_2e_i192199_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_1205___PHI = 0u;   /* for PHI node */
  v1_2e_i195204___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  v1_2e_i194197203___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  v1_2e_i192199202___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_1205_ = counter_2e_1205___PHI;
  v1_2e_i195204_ = v1_2e_i195204___PHI;
  v1_2e_i194197203_ = v1_2e_i194197203___PHI;
  v1_2e_i192199202_ = v1_2e_i192199202___PHI;
  counter_2e_1205_smear_ = __smear_i32<__vec16_i32>(counter_2e_1205_);
  mul__i_load28_ = __mul((__add(counter_2e_1205_smear_, __load<64>((const __vec16_i32  *)(VectorConstant17)))), __smear_i32<__vec16_i32>(3u));
  array_load_offset_load136_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add(mul__i_load28_, zerosArray_load_offset_load_to_int32_)), __smear_i1<__vec16_i1>(1));
  array_load35_offset_load139_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add((__add(mul__i_load28_, __smear_i32<__vec16_i32>(1u))), zerosArray_load_offset_load_to_int32_)), __smear_i1<__vec16_i1>(1));
  array_load42_offset_load144_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add((__add(mul__i_load28_, __smear_i32<__vec16_i32>(2u))), zerosArray_load_offset_load_to_int32_)), __smear_i1<__vec16_i1>(1));
  add_xsum_load_x_load_ = __add(v1_2e_i195204_, array_load_offset_load136_);
  add_ysum_load_y_load_ = __add(v1_2e_i194197203_, array_load35_offset_load139_);
  add_zsum_load_z_load_ = __add(v1_2e_i192199202_, array_load42_offset_load144_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_1205_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_1205___PHI = new_counter_;   /* for PHI node */
    v1_2e_i195204___PHI = add_xsum_load_x_load_;   /* for PHI node */
    v1_2e_i194197203___PHI = add_ysum_load_y_load_;   /* for PHI node */
    v1_2e_i192199202___PHI = add_zsum_load_z_load_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    v1_2e_i195_2e_lcssa___PHI = add_xsum_load_x_load_;   /* for PHI node */
    v1_2e_i194197_2e_lcssa___PHI = add_ysum_load_y_load_;   /* for PHI node */
    v1_2e_i192199_2e_lcssa___PHI = add_zsum_load_z_load_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  v1_2e_i192200_ = v1_2e_i192200___PHI;
  v1_2e_i194198_ = v1_2e_i194198___PHI;
  v1_2e_i196_ = v1_2e_i196___PHI;
  calltmp_2e_i_ = __reduce_add_float(v1_2e_i196_);
  *result_ = calltmp_2e_i_;
  calltmp_2e_i162_ = __reduce_add_float(v1_2e_i194198_);
  *((&result_[((int64_t )1ull)])) = calltmp_2e_i162_;
  calltmp_2e_i165_ = __reduce_add_float(v1_2e_i192200_);
  *((&result_[((int64_t )2ull)])) = calltmp_2e_i165_;
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  v1_2e_i195_2e_lcssa_ = v1_2e_i195_2e_lcssa___PHI;
  v1_2e_i194197_2e_lcssa_ = v1_2e_i194197_2e_lcssa___PHI;
  v1_2e_i192199_2e_lcssa_ = v1_2e_i192199_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )div_count_load__))) {
    goto partial_inner_only_label;
  } else {
    v1_2e_i192200___PHI = v1_2e_i192199_2e_lcssa_;   /* for PHI node */
    v1_2e_i194198___PHI = v1_2e_i194197_2e_lcssa_;   /* for PHI node */
    v1_2e_i196___PHI = v1_2e_i195_2e_lcssa_;   /* for PHI node */
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val61_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant17)));
  div_count_load__smear_ = __smear_i32<__vec16_i32>(div_count_load__);
  cmp64_ = __signed_less_than_i32(iter_val61_, div_count_load__smear_);
  mul__i_load70_ = __mul(iter_val61_, __smear_i32<__vec16_i32>(3u));
  array_load72_ptr2int_2void_ = ((uint8_t *)array_);
  array_load72_offset_load148_ = __gather_base_offsets32_float(array_load72_ptr2int_2void_, 4u, (__add(mul__i_load70_, zerosArray_load_offset_load_to_int32_)), cmp64_);
  array_load80_offset_load151_ = __gather_base_offsets32_float(array_load72_ptr2int_2void_, 4u, (__add((__add(mul__i_load70_, __smear_i32<__vec16_i32>(1u))), zerosArray_load_offset_load_to_int32_)), cmp64_);
  array_load88_offset_load156_ = __gather_base_offsets32_float(array_load72_ptr2int_2void_, 4u, (__add((__add(mul__i_load70_, __smear_i32<__vec16_i32>(2u))), zerosArray_load_offset_load_to_int32_)), cmp64_);
  v1_2e_i_ = __select(cmp64_, (__add(v1_2e_i195_2e_lcssa_, array_load72_offset_load148_)), v1_2e_i195_2e_lcssa_);
  v1_2e_i194_ = __select(cmp64_, (__add(v1_2e_i194197_2e_lcssa_, array_load80_offset_load151_)), v1_2e_i194197_2e_lcssa_);
  v1_2e_i192_ = __select(cmp64_, (__add(v1_2e_i192199_2e_lcssa_, array_load88_offset_load156_)), v1_2e_i192199_2e_lcssa_);
  v1_2e_i192200___PHI = v1_2e_i192_;   /* for PHI node */
  v1_2e_i194198___PHI = v1_2e_i194_;   /* for PHI node */
  v1_2e_i196___PHI = v1_2e_i_;   /* for PHI node */
  goto foreach_reset_label;

}
}



void xyzSumSOA(float *array_, uint32_t count_, float *zeros_, float *result_) {
   /*tail*/ __do_assert_uniform(((&__str1.array[((int64_t )0ull)])));
  /*UNREACHABLE*/;
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant18[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant19[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void gathers(float *array_, uint32_t count_, float *zeros_, float *result_) {
  __vec16_f ptr_masked_load80_;
  __vec16_i32 zeros_load_offset_load_to_int32_;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_189_;
  uint32_t counter_2e_189___PHI;
  __vec16_f v1_2e_i8588_;
  __vec16_f v1_2e_i8588___PHI;
  __vec16_i32 counter_2e_189_smear_;
  __vec16_f array_load_offset_load78_;
  __vec16_f add_sum_load_array_load_offset_load_;
  uint32_t new_counter_;
  __vec16_f v1_2e_i86_;
  __vec16_f v1_2e_i86___PHI;
  float calltmp_2e_i_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_f v1_2e_i85_2e_lcssa_;
  __vec16_f v1_2e_i85_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val43_;
  __vec16_i32 count_smear_;
  __vec16_i1 cmp46_;
  __vec16_f array_load53_offset_load79_;
  __vec16_f v1_2e_i_;

  ptr_masked_load80_ = __load<4>((((__vec16_f (*))zeros_)));
  zeros_load_offset_load_to_int32_ = (__cast_fptosi(__vec16_i32 (), ptr_masked_load80_));
  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    v1_2e_i85_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_189___PHI = 0u;   /* for PHI node */
  v1_2e_i8588___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_189_ = counter_2e_189___PHI;
  v1_2e_i8588_ = v1_2e_i8588___PHI;
  counter_2e_189_smear_ = __smear_i32<__vec16_i32>(counter_2e_189_);
  array_load_offset_load78_ = __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add((__add(counter_2e_189_smear_, __load<64>((const __vec16_i32  *)(VectorConstant19)))), zeros_load_offset_load_to_int32_)), __smear_i1<__vec16_i1>(1));
  add_sum_load_array_load_offset_load_ = __add(v1_2e_i8588_, array_load_offset_load78_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_189_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_189___PHI = new_counter_;   /* for PHI node */
    v1_2e_i8588___PHI = add_sum_load_array_load_offset_load_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    v1_2e_i85_2e_lcssa___PHI = add_sum_load_array_load_offset_load_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  v1_2e_i86_ = v1_2e_i86___PHI;
  calltmp_2e_i_ = __reduce_add_float(v1_2e_i86_);
  *result_ = calltmp_2e_i_;
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  v1_2e_i85_2e_lcssa_ = v1_2e_i85_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    v1_2e_i86___PHI = v1_2e_i85_2e_lcssa_;   /* for PHI node */
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val43_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant19)));
  count_smear_ = __smear_i32<__vec16_i32>(count_);
  cmp46_ = __signed_less_than_i32(iter_val43_, count_smear_);
  array_load53_offset_load79_ = __gather_base_offsets32_float((((uint8_t *)array_)), 4u, (__add(iter_val43_, zeros_load_offset_load_to_int32_)), cmp46_);
  v1_2e_i_ = __select(cmp46_, (__add(v1_2e_i85_2e_lcssa_, array_load53_offset_load79_)), v1_2e_i85_2e_lcssa_);
  v1_2e_i86___PHI = v1_2e_i_;   /* for PHI node */
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant20[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void loads(float *array_, uint32_t count_, float *zeros_, float *result_) {
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_183_;
  uint32_t counter_2e_183___PHI;
  __vec16_f v1_2e_i7982_;
  __vec16_f v1_2e_i7982___PHI;
  __vec16_f ptr_masked_load74_;
  __vec16_f add_sum_load_array_load_offset_load_;
  uint32_t new_counter_;
  __vec16_f v1_2e_i80_;
  __vec16_f v1_2e_i80___PHI;
  float calltmp_2e_i_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_f v1_2e_i79_2e_lcssa_;
  __vec16_f v1_2e_i79_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 count_smear_;
  __vec16_i1 cmp42_;
  __vec16_f ptr77_masked_load_;
  __vec16_f v1_2e_i_;

  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    v1_2e_i79_2e_lcssa___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_183___PHI = 0u;   /* for PHI node */
  v1_2e_i7982___PHI = __setzero_float<__vec16_f>();   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_183_ = counter_2e_183___PHI;
  v1_2e_i7982_ = v1_2e_i7982___PHI;
  ptr_masked_load74_ = __load<4>((((__vec16_f (*))((&array_load_ptr2int_2void_[((int64_t )(((int64_t )(int32_t )(counter_2e_183_ << 2u))))])))));
  add_sum_load_array_load_offset_load_ = __add(v1_2e_i7982_, ptr_masked_load74_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_183_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_183___PHI = new_counter_;   /* for PHI node */
    v1_2e_i7982___PHI = add_sum_load_array_load_offset_load_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    v1_2e_i79_2e_lcssa___PHI = add_sum_load_array_load_offset_load_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  v1_2e_i80_ = v1_2e_i80___PHI;
  calltmp_2e_i_ = __reduce_add_float(v1_2e_i80_);
  *result_ = calltmp_2e_i_;
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  v1_2e_i79_2e_lcssa_ = v1_2e_i79_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    v1_2e_i80___PHI = v1_2e_i79_2e_lcssa_;   /* for PHI node */
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  count_smear_ = __smear_i32<__vec16_i32>(count_);
  cmp42_ = __signed_less_than_i32((__add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant20)))), count_smear_);
  ptr77_masked_load_ = __masked_load_float(((&(((uint8_t *)array_))[((int64_t )(((int64_t )(int32_t )(counter_2e_1_2e_lcssa_ << 2u))))])), cmp42_);
  v1_2e_i_ = __select(cmp42_, (__add(v1_2e_i79_2e_lcssa_, ptr77_masked_load_)), v1_2e_i79_2e_lcssa_);
  v1_2e_i80___PHI = v1_2e_i_;   /* for PHI node */
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant21[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant22[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void scatters(float *array_, uint32_t count_, float *zeros_, float *result_) {
  __vec16_f ptr_masked_load70_;
  __vec16_i32 zeros_load_offset_load_to_int32_;
  uint32_t aligned_end_;
  __vec16_f zero_load29_to_float_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_174_;
  uint32_t counter_2e_174___PHI;
  __vec16_i32 counter_2e_174_smear_;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val42_;
  __vec16_i32 count_smear_;

  ptr_masked_load70_ = __load<4>((((__vec16_f (*))zeros_)));
  zeros_load_offset_load_to_int32_ = (__cast_fptosi(__vec16_i32 (), ptr_masked_load70_));
  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  zero_load29_to_float_ = (__cast_sitofp(__vec16_f (), zeros_load_offset_load_to_int32_));
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_174___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_174_ = counter_2e_174___PHI;
  counter_2e_174_smear_ = __smear_i32<__vec16_i32>(counter_2e_174_);
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, (__add((__add(counter_2e_174_smear_, __load<64>((const __vec16_i32  *)(VectorConstant22)))), zeros_load_offset_load_to_int32_)), zero_load29_to_float_, __smear_i1<__vec16_i1>(1));
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_174_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_174___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val42_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant22)));
  count_smear_ = __smear_i32<__vec16_i32>(count_);
   /*tail*/ __scatter_base_offsets32_float((((uint8_t *)array_)), 4u, (__add(iter_val42_, zeros_load_offset_load_to_int32_)), ((__cast_sitofp(__vec16_f (), zeros_load_offset_load_to_int32_))), (__signed_less_than_i32(iter_val42_, count_smear_)));
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant23[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void stores(float *array_, uint32_t count_, float *zeros_, float *result_) {
  __vec16_f ptr_masked_load70_;
  __vec16_i32 zeros_load_offset_load_to_int32_;
  uint32_t aligned_end_;
  __vec16_f zero_load_to_float_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_174_;
  uint32_t counter_2e_174___PHI;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 count_smear_;

  ptr_masked_load70_ = __load<4>((((__vec16_f (*))zeros_)));
  zeros_load_offset_load_to_int32_ = (__cast_fptosi(__vec16_i32 (), ptr_masked_load70_));
  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  zero_load_to_float_ = (__cast_sitofp(__vec16_f (), zeros_load_offset_load_to_int32_));
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_174___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_174_ = counter_2e_174___PHI;
  __store<4>((((__vec16_f (*))((&array_load_ptr2int_2void_[((int64_t )(((int64_t )(int32_t )(counter_2e_174_ << 2u))))])))), zero_load_to_float_);
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_174_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_174___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  count_smear_ = __smear_i32<__vec16_i32>(count_);
  __masked_store_float((((__vec16_f (*))((&(((uint8_t *)array_))[((int64_t )(((int64_t )(int32_t )(counter_2e_1_2e_lcssa_ << 2u))))])))), ((__cast_sitofp(__vec16_f (), zeros_load_offset_load_to_int32_))), (__signed_less_than_i32((__add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant23)))), count_smear_)));
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant24[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant25[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void normalizeAOSNoCoalesce(float *array_, uint32_t count_, float *zeroArray_) {
  __vec16_f ptr_masked_load317_;
  uint32_t div_count_load__;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_1353_;
  uint32_t counter_2e_1353___PHI;
  __vec16_i32 counter_2e_1353_smear_;
  __vec16_i32 mul__i_load27_;
  __vec16_f array_load_offset_load173_;
  __vec16_i32 add_mul__i_load32__;
  __vec16_f array_load34_offset_load176_;
  __vec16_i32 add_mul__i_load39__;
  __vec16_f array_load41_offset_load181_;
  __vec16_f add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_;
  __vec16_f array_load50_offset_load187_;
  __vec16_f array_load60_offset_load204_;
  __vec16_f array_load71_offset_load223_;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val89_;
  __vec16_i32 div_count_load__smear_;
  __vec16_i1 cmp92_;
  __vec16_i32 mul__i_load98_;
  uint8_t *array_load100_ptr2int_2void_;
  __vec16_f array_load100_offset_load244_;
  __vec16_i32 add_mul__i_load106__;
  __vec16_f array_load108_offset_load247_;
  __vec16_i32 add_mul__i_load114__;
  __vec16_f array_load116_offset_load252_;
  __vec16_f add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_;
  __vec16_f array_load129_offset_load260_;
  __vec16_f array_load140_offset_load277_;
  __vec16_f array_load151_offset_load296_;

  ptr_masked_load317_ = __load<4>((((__vec16_f (*))zeroArray_)));
  div_count_load__ = ((int32_t )(((int32_t )count_) / ((int32_t )3u)));
  aligned_end_ = ((uint32_t )(((uint32_t )div_count_load__) - ((uint32_t )(((int32_t )(((int32_t )div_count_load__) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_1353___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_1353_ = counter_2e_1353___PHI;
  counter_2e_1353_smear_ = __smear_i32<__vec16_i32>(counter_2e_1353_);
  mul__i_load27_ = __mul((__add(counter_2e_1353_smear_, __load<64>((const __vec16_i32  *)(VectorConstant25)))), __smear_i32<__vec16_i32>(3u));
  array_load_offset_load173_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load317_, ((__cast_sitofp(__vec16_f (), mul__i_load27_)))))))), __smear_i1<__vec16_i1>(1));
  add_mul__i_load32__ = __add(mul__i_load27_, __smear_i32<__vec16_i32>(1u));
  array_load34_offset_load176_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load317_, ((__cast_sitofp(__vec16_f (), add_mul__i_load32__)))))))), __smear_i1<__vec16_i1>(1));
  add_mul__i_load39__ = __add(mul__i_load27_, __smear_i32<__vec16_i32>(2u));
  array_load41_offset_load181_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load317_, ((__cast_sitofp(__vec16_f (), add_mul__i_load39__)))))))), __smear_i1<__vec16_i1>(1));
  add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_ = __add((__add((__mul(array_load_offset_load173_, array_load_offset_load173_)), (__mul(array_load34_offset_load176_, array_load34_offset_load176_)))), (__mul(array_load41_offset_load181_, array_load41_offset_load181_)));
  array_load50_offset_load187_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul__i_load27_, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul__i_load27_, (__div(array_load50_offset_load187_, add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_)), __smear_i1<__vec16_i1>(1));
  array_load60_offset_load204_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load32__, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load32__, (__div(array_load60_offset_load204_, add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_)), __smear_i1<__vec16_i1>(1));
  array_load71_offset_load223_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load39__, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load39__, (__div(array_load71_offset_load223_, add_add_mul_x_load_x_load46_mul_y_load_y_load47_mul_z_load_z_load48_)), __smear_i1<__vec16_i1>(1));
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_1353_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_1353___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )div_count_load__))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val89_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant25)));
  div_count_load__smear_ = __smear_i32<__vec16_i32>(div_count_load__);
  cmp92_ = __signed_less_than_i32(iter_val89_, div_count_load__smear_);
  mul__i_load98_ = __mul(iter_val89_, __smear_i32<__vec16_i32>(3u));
  array_load100_ptr2int_2void_ = ((uint8_t *)array_);
  array_load100_offset_load244_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load317_, ((__cast_sitofp(__vec16_f (), mul__i_load98_)))))))), cmp92_);
  add_mul__i_load106__ = __add(mul__i_load98_, __smear_i32<__vec16_i32>(1u));
  array_load108_offset_load247_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load317_, ((__cast_sitofp(__vec16_f (), add_mul__i_load106__)))))))), cmp92_);
  add_mul__i_load114__ = __add(mul__i_load98_, __smear_i32<__vec16_i32>(2u));
  array_load116_offset_load252_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, ((__cast_fptosi(__vec16_i32 (), (__add(ptr_masked_load317_, ((__cast_sitofp(__vec16_f (), add_mul__i_load114__)))))))), cmp92_);
  add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_ = __add((__add((__mul(array_load100_offset_load244_, array_load100_offset_load244_)), (__mul(array_load108_offset_load247_, array_load108_offset_load247_)))), (__mul(array_load116_offset_load252_, array_load116_offset_load252_)));
  array_load129_offset_load260_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, mul__i_load98_, cmp92_);
   /*tail*/ __scatter_base_offsets32_float(array_load100_ptr2int_2void_, 4u, mul__i_load98_, (__div(array_load129_offset_load260_, add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_)), cmp92_);
  array_load140_offset_load277_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, add_mul__i_load106__, cmp92_);
   /*tail*/ __scatter_base_offsets32_float(array_load100_ptr2int_2void_, 4u, add_mul__i_load106__, (__div(array_load140_offset_load277_, add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_)), cmp92_);
  array_load151_offset_load296_ =  /*tail*/ __gather_base_offsets32_float(array_load100_ptr2int_2void_, 4u, add_mul__i_load114__, cmp92_);
   /*tail*/ __scatter_base_offsets32_float(array_load100_ptr2int_2void_, 4u, add_mul__i_load114__, (__div(array_load151_offset_load296_, add_add_mul_x_load122_x_load123_mul_y_load124_y_load125_mul_z_load126_z_load127_)), cmp92_);
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant26[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant27[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u,  };

void normalizeSOA(float *array_, uint32_t count_, float *zeros_) {
  uint32_t div_count_load__;
  uint32_t aligned_end_;
  uint8_t *array_load_ptr2int_2void_;
  uint32_t counter_2e_1346_;
  uint32_t counter_2e_1346___PHI;
  __vec16_i32 counter_2e_1346_smear_;
  __vec16_i32 mul_;
  __vec16_f array_load_offset_load163_;
  __vec16_i32 add_mul__i_load28__;
  __vec16_f array_load29_offset_load166_;
  __vec16_i32 add_mul__i_load34__;
  __vec16_f array_load35_offset_load171_;
  __vec16_f add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_;
  __vec16_f array_load44_offset_load179_;
  __vec16_f array_load54_offset_load196_;
  __vec16_f array_load65_offset_load215_;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec16_i32 counter_2e_1_2e_lcssa_smear_;
  __vec16_i32 iter_val83_;
  __vec16_i32 div_count_load__smear_;
  __vec16_i1 cmp86_;
  __vec16_i32 mul237_;
  uint8_t *array_load93_ptr2int_2void_;
  __vec16_f array_load93_offset_load238_;
  __vec16_i32 add_mul__i_load99__;
  __vec16_f array_load100_offset_load241_;
  __vec16_i32 add_mul__i_load106__;
  __vec16_f array_load107_offset_load246_;
  __vec16_f add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_;
  __vec16_f array_load120_offset_load254_;
  __vec16_f array_load131_offset_load271_;
  __vec16_f array_load142_offset_load290_;

  div_count_load__ = ((int32_t )(((int32_t )count_) / ((int32_t )3u)));
  aligned_end_ = ((uint32_t )(((uint32_t )div_count_load__) - ((uint32_t )(((int32_t )(((int32_t )div_count_load__) % ((int32_t )16u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  array_load_ptr2int_2void_ = ((uint8_t *)array_);
  counter_2e_1346___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_1346_ = counter_2e_1346___PHI;
  counter_2e_1346_smear_ = __smear_i32<__vec16_i32>(counter_2e_1346_);
  mul_ = __mul((__add(counter_2e_1346_smear_, __load<64>((const __vec16_i32  *)(VectorConstant27)))), __smear_i32<__vec16_i32>(3u));
  array_load_offset_load163_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul_, __smear_i1<__vec16_i1>(1));
  add_mul__i_load28__ = __add(mul_, __smear_i32<__vec16_i32>(1u));
  array_load29_offset_load166_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load28__, __smear_i1<__vec16_i1>(1));
  add_mul__i_load34__ = __add(mul_, __smear_i32<__vec16_i32>(2u));
  array_load35_offset_load171_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load34__, __smear_i1<__vec16_i1>(1));
  add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_ = __add((__add((__mul(array_load_offset_load163_, array_load_offset_load163_)), (__mul(array_load29_offset_load166_, array_load29_offset_load166_)))), (__mul(array_load35_offset_load171_, array_load35_offset_load171_)));
  array_load44_offset_load179_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul_, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, mul_, (__div(array_load44_offset_load179_, add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_)), __smear_i1<__vec16_i1>(1));
  array_load54_offset_load196_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load28__, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load28__, (__div(array_load54_offset_load196_, add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_)), __smear_i1<__vec16_i1>(1));
  array_load65_offset_load215_ =  /*tail*/ __gather_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load34__, __smear_i1<__vec16_i1>(1));
   /*tail*/ __scatter_base_offsets32_float(array_load_ptr2int_2void_, 4u, add_mul__i_load34__, (__div(array_load65_offset_load215_, add_add_mul_x_load_x_load40_mul_y_load_y_load41_mul_z_load_z_load42_)), __smear_i1<__vec16_i1>(1));
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_1346_) + ((uint32_t )16u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_1346___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )div_count_load__))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter_2e_1_2e_lcssa_);
  iter_val83_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant27)));
  div_count_load__smear_ = __smear_i32<__vec16_i32>(div_count_load__);
  cmp86_ = __signed_less_than_i32(iter_val83_, div_count_load__smear_);
  mul237_ = __mul(iter_val83_, __smear_i32<__vec16_i32>(3u));
  array_load93_ptr2int_2void_ = ((uint8_t *)array_);
  array_load93_offset_load238_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, mul237_, cmp86_);
  add_mul__i_load99__ = __add(mul237_, __smear_i32<__vec16_i32>(1u));
  array_load100_offset_load241_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load99__, cmp86_);
  add_mul__i_load106__ = __add(mul237_, __smear_i32<__vec16_i32>(2u));
  array_load107_offset_load246_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load106__, cmp86_);
  add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_ = __add((__add((__mul(array_load93_offset_load238_, array_load93_offset_load238_)), (__mul(array_load100_offset_load241_, array_load100_offset_load241_)))), (__mul(array_load107_offset_load246_, array_load107_offset_load246_)));
  array_load120_offset_load254_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, mul237_, cmp86_);
   /*tail*/ __scatter_base_offsets32_float(array_load93_ptr2int_2void_, 4u, mul237_, (__div(array_load120_offset_load254_, add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_)), cmp86_);
  array_load131_offset_load271_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load99__, cmp86_);
   /*tail*/ __scatter_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load99__, (__div(array_load131_offset_load271_, add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_)), cmp86_);
  array_load142_offset_load290_ =  /*tail*/ __gather_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load106__, cmp86_);
   /*tail*/ __scatter_base_offsets32_float(array_load93_ptr2int_2void_, 4u, add_mul__i_load106__, (__div(array_load142_offset_load290_, add_add_mul_x_load113_x_load114_mul_y_load115_y_load116_mul_z_load117_z_load118_)), cmp86_);
  goto foreach_reset_label;

}
}

