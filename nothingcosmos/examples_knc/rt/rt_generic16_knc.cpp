/*******************************************************************
  This file has been automatically generated by ispc
  DO NOT EDIT THIS FILE DIRECTLY
 *******************************************************************/

/* Provide Declarations */
#include <stdarg.h>
#include <setjmp.h>
#include <limits.h>
#include <stdlib.h>
#ifdef _MSC_VER
  #define NOMINMAX
  #include <windows.h>
#endif // _MSC_VER
#include <stdlib.h>
#include <stdint.h>
/* get a declaration for alloca */
#ifdef _MSC_VER
  #include <malloc.h>
  #define alloca _alloca
#else
  #include <alloca.h>
#endif

#undef ISPC_FAST_MATH
#include "knc.h"

/* Basic Library Function Declarations */
extern "C" {
int puts(unsigned char *);
unsigned int putchar(unsigned int);
int fflush(void *);
int printf(const unsigned char *, ...);
uint8_t *memcpy(uint8_t *, uint8_t *, uint64_t );
uint8_t *memset(uint8_t *, uint8_t, uint64_t );
void memset_pattern16(void *, const void *, uint64_t );
}

#ifndef __GNUC__  /* Can only support "linkonce" vars with GCC */
#define __attribute__(X)
#endif

#if defined(__GNUC__) && defined(__APPLE_CC__)
#define __EXTERNAL_WEAK__ __attribute__((weak_import))
#elif defined(__GNUC__)
#define __EXTERNAL_WEAK__ __attribute__((weak))
#else
#define __EXTERNAL_WEAK__
#endif

#if defined(__GNUC__) && defined(__APPLE_CC__)
#define __ATTRIBUTE_WEAK__
#elif defined(__GNUC__)
#define __ATTRIBUTE_WEAK__ __attribute__((weak))
#else
#define __ATTRIBUTE_WEAK__
#endif

#if defined(__GNUC__)
#define __HIDDEN__ __attribute__((visibility("hidden")))
#endif

#if (defined(__GNUC__) || defined(__clang__)) && !defined(__INTEL_COMPILER)
#define LLVM_NAN(NanStr)   __builtin_nan(NanStr)   /* Double */
#define LLVM_NANF(NanStr)  __builtin_nanf(NanStr)  /* Float */
#define LLVM_NANS(NanStr)  __builtin_nans(NanStr)  /* Double */
#define LLVM_NANSF(NanStr) __builtin_nansf(NanStr) /* Float */
#define LLVM_INF           __builtin_inf()         /* Double */
#define LLVM_INFF          __builtin_inff()        /* Float */
//#define LLVM_PREFETCH(addr,rw,locality) __builtin_prefetch(addr,rw,locality)
//#define __ATTRIBUTE_CTOR__ __attribute__((constructor))
//#define __ATTRIBUTE_DTOR__ __attribute__((destructor))
#elif defined(_MSC_VER) || defined(__INTEL_COMPILER)
#include <limits>
#define LLVM_NAN(NanStr)   std::numeric_limits<double>::quiet_NaN()
#define LLVM_NANF(NanStr)  std::numeric_limits<float>::quiet_NaN()
#define LLVM_NANS(NanStr)  std::numeric_limits<double>::signaling_NaN()
#define LLVM_NANSF(NanStr) std::numeric_limits<float>::signaling_NaN()
#define LLVM_INF           std::numeric_limits<double>::infinity()
#define LLVM_INFF          std::numeric_limits<float>::infinity()
//#define LLVM_PREFETCH(addr,rw,locality)            /* PREFETCH */
//#define __ATTRIBUTE_CTOR__
//#define __ATTRIBUTE_DTOR__
#else
#error "Not MSVC, clang, or g++?"
#endif

#if (defined(__GNUC__) || defined(__clang__))
#define LLVM_ASM(X) __asm(X)
#endif

#if defined(__clang__) || defined(__INTEL_COMPILER) || (__GNUC__ < 4) /* Old GCCs, or compilers not GCC */ 
#define __builtin_stack_save() 0   /* not implemented */
#define __builtin_stack_restore(X) /* noop */
#endif

#define CODE_FOR_MAIN() /* Any target-specific code for main()*/

#ifndef __cplusplus
typedef unsigned char bool;
#endif


/* Support for floating point constants */
typedef uint64_t ConstantDoubleTy;
typedef uint32_t ConstantFloatTy;
typedef struct { unsigned long long f1; unsigned short f2; unsigned short pad[3]; } ConstantFP80Ty;
typedef struct { uint64_t f1, f2; } ConstantFP128Ty;


/* Global Declarations */


/* Helper union for bitcasts */
typedef union {
  unsigned int Int32;
  unsigned long long Int64;
  float Float;
  double Double;
} llvmBitCastUnion;
/* Structure and array forward declarations */
struct l_v16_varying_Ray;
struct l_v16_uniform_LinearBVHNode;
struct l_v16_uniform_Triangle;
struct l_unnamed_0;
struct l_array_1;
struct l_array_2;
struct l_array_3;
struct l_array_4;
struct l_array_5;
struct l_array_6;
struct l_array_7;

/* Structure and array contents */
struct l_array_2 {
  static l_array_2 init(__vec16_f v0, __vec16_f v1, __vec16_f v2) {
    l_array_2 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    ret.array[2] = v2;
    return ret;
  }
  __vec16_f array[3];
} ;

struct l_array_3 {
  static l_array_3 init(uint32_t v0, uint32_t v1, uint32_t v2) {
    l_array_3 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    ret.array[2] = v2;
    return ret;
  }
  uint32_t array[3];
} ;

struct l_v16_varying_Ray {
  static l_v16_varying_Ray init(l_array_2 v0, l_array_2 v1, l_array_2 v2, l_array_3 v3, __vec16_f v4, __vec16_f v5, __vec16_i32 v6) {
    l_v16_varying_Ray ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    ret.field3 = v3;
    ret.field4 = v4;
    ret.field5 = v5;
    ret.field6 = v6;
    return ret;
  }
  l_array_2 field0;
  l_array_2 field1;
  l_array_2 field2;
  l_array_3 field3;
  __vec16_f field4;
  __vec16_f field5;
  __vec16_i32 field6;
};

struct l_array_5 {
  static l_array_5 init(float v0, float v1, float v2) {
    l_array_5 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    ret.array[2] = v2;
    return ret;
  }
  float array[3];
} ;

struct l_array_4 {
  static l_array_4 init(l_array_5 v0, l_array_5 v1) {
    l_array_4 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    return ret;
  }
  l_array_5 array[2];
} ;

struct l_v16_uniform_LinearBVHNode {
  static l_v16_uniform_LinearBVHNode init(l_array_4 v0, uint32_t v1, uint8_t v2, uint8_t v3, uint16_t v4) {
    l_v16_uniform_LinearBVHNode ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    ret.field3 = v3;
    ret.field4 = v4;
    return ret;
  }
  l_array_4 field0;
  uint32_t field1;
  uint8_t field2;
  uint8_t field3;
  uint16_t field4;
};

struct l_array_1 {
  static l_array_1 init(float v0, float v1, float v2, float v3) {
    l_array_1 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    ret.array[2] = v2;
    ret.array[3] = v3;
    return ret;
  }
  float array[4];
} ;

struct l_array_6 {
  static l_array_6 init(l_array_1 v0, l_array_1 v1, l_array_1 v2) {
    l_array_6 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    ret.array[2] = v2;
    return ret;
  }
  l_array_1 array[3];
} ;

struct l_v16_uniform_Triangle {
  static l_v16_uniform_Triangle init(l_array_6 v0, uint32_t v1, l_array_3 v2) {
    l_v16_uniform_Triangle ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    return ret;
  }
  l_array_6 field0;
  uint32_t field1;
  l_array_3 field2;
};

struct l_unnamed_0 {
  static l_unnamed_0 init(uint32_t v0, uint32_t v1, uint32_t v2, uint32_t v3, l_array_1 (*v4), l_array_1 (*v5), float *v6, uint32_t *v7, l_v16_uniform_LinearBVHNode *v8, l_v16_uniform_Triangle *v9, __vec16_i1 v10) {
    l_unnamed_0 ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    ret.field3 = v3;
    ret.field4 = v4;
    ret.field5 = v5;
    ret.field6 = v6;
    ret.field7 = v7;
    ret.field8 = v8;
    ret.field9 = v9;
    ret.field10 = v10;
    return ret;
  }
  uint32_t field0;
  uint32_t field1;
  uint32_t field2;
  uint32_t field3;
  l_array_1 (*field4);
  l_array_1 (*field5);
  float *field6;
  uint32_t *field7;
  l_v16_uniform_LinearBVHNode *field8;
  l_v16_uniform_Triangle *field9;
  __vec16_i1 field10;
};

struct l_array_7 {
  static l_array_7 init(uint32_t v0, uint32_t v1, uint32_t v2, uint32_t v3, uint32_t v4, uint32_t v5, uint32_t v6, uint32_t v7, uint32_t v8, uint32_t v9, uint32_t v10, uint32_t v11, uint32_t v12, uint32_t v13, uint32_t v14, uint32_t v15, uint32_t v16, uint32_t v17, uint32_t v18, uint32_t v19, uint32_t v20, uint32_t v21, uint32_t v22, uint32_t v23, uint32_t v24, uint32_t v25, uint32_t v26, uint32_t v27, uint32_t v28, uint32_t v29, uint32_t v30, uint32_t v31, uint32_t v32, uint32_t v33, uint32_t v34, uint32_t v35, uint32_t v36, uint32_t v37, uint32_t v38, uint32_t v39, uint32_t v40, uint32_t v41, uint32_t v42, uint32_t v43, uint32_t v44, uint32_t v45, uint32_t v46, uint32_t v47, uint32_t v48, uint32_t v49, uint32_t v50, uint32_t v51, uint32_t v52, uint32_t v53, uint32_t v54, uint32_t v55, uint32_t v56, uint32_t v57, uint32_t v58, uint32_t v59, uint32_t v60, uint32_t v61, uint32_t v62, uint32_t v63) {
    l_array_7 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    ret.array[2] = v2;
    ret.array[3] = v3;
    ret.array[4] = v4;
    ret.array[5] = v5;
    ret.array[6] = v6;
    ret.array[7] = v7;
    ret.array[8] = v8;
    ret.array[9] = v9;
    ret.array[10] = v10;
    ret.array[11] = v11;
    ret.array[12] = v12;
    ret.array[13] = v13;
    ret.array[14] = v14;
    ret.array[15] = v15;
    ret.array[16] = v16;
    ret.array[17] = v17;
    ret.array[18] = v18;
    ret.array[19] = v19;
    ret.array[20] = v20;
    ret.array[21] = v21;
    ret.array[22] = v22;
    ret.array[23] = v23;
    ret.array[24] = v24;
    ret.array[25] = v25;
    ret.array[26] = v26;
    ret.array[27] = v27;
    ret.array[28] = v28;
    ret.array[29] = v29;
    ret.array[30] = v30;
    ret.array[31] = v31;
    ret.array[32] = v32;
    ret.array[33] = v33;
    ret.array[34] = v34;
    ret.array[35] = v35;
    ret.array[36] = v36;
    ret.array[37] = v37;
    ret.array[38] = v38;
    ret.array[39] = v39;
    ret.array[40] = v40;
    ret.array[41] = v41;
    ret.array[42] = v42;
    ret.array[43] = v43;
    ret.array[44] = v44;
    ret.array[45] = v45;
    ret.array[46] = v46;
    ret.array[47] = v47;
    ret.array[48] = v48;
    ret.array[49] = v49;
    ret.array[50] = v50;
    ret.array[51] = v51;
    ret.array[52] = v52;
    ret.array[53] = v53;
    ret.array[54] = v54;
    ret.array[55] = v55;
    ret.array[56] = v56;
    ret.array[57] = v57;
    ret.array[58] = v58;
    ret.array[59] = v59;
    ret.array[60] = v60;
    ret.array[61] = v61;
    ret.array[62] = v62;
    ret.array[63] = v63;
    return ret;
  }
  uint32_t array[64];
} ;



/* Function Declarations */
extern "C" {
uint8_t *ISPCAlloc(uint8_t **, uint64_t , uint32_t );
void ISPCLaunch(uint8_t **, uint8_t *, uint8_t *, uint32_t );
void ISPCSync(uint8_t *);
static void generateRay___un_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_vyfvyfREFs_LF_vyRay_NF_(l_array_1 (*raster2camera_), l_array_1 (*camera2world_), __vec16_f x_, __vec16_f y_, l_v16_varying_Ray *ray_, __vec16_i1 __mask_);
__vec16_i32 BVHIntersect___un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_REFs_LF_vyRay_NF_(l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *tris_, l_v16_varying_Ray *r_, __vec16_i1 __mask_);
static void raytrace_tile___uniuniuniuniuniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(uint32_t x0_, uint32_t x1_, uint32_t y0_, uint32_t y1_, uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_);
void raytrace_ispc___uniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_, __vec16_i1 __mask_);
void raytrace_tile_task___uniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(l_unnamed_0 *, uint32_t , uint32_t , uint32_t , uint32_t );
void raytrace_ispc_tasks___uniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_, __vec16_i1 __mask_);
void raytrace_ispc(uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_);
void raytrace_ispc_tasks(uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_);
}



/* Function Bodies */
template <typename A, typename B> static inline int llvm_fcmp_ord(A X, B Y) { return X == X && Y == Y; }
template <typename A, typename B> static inline int llvm_fcmp_uno(A X, B Y) { return X != X || Y != Y; }
template <typename A, typename B> static inline int llvm_fcmp_ueq(A X, B Y) { return X == Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_une(A X, B Y) { return X != Y; }
template <typename A, typename B> static inline int llvm_fcmp_ult(A X, B Y) { return X <  Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_ugt(A X, B Y) { return X >  Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_ule(A X, B Y) { return X <= Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_uge(A X, B Y) { return X >= Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_oeq(A X, B Y) { return X == Y ; }
template <typename A, typename B> static inline int llvm_fcmp_one(A X, B Y) { return X != Y && llvm_fcmp_ord(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_olt(A X, B Y) { return X <  Y ; }
template <typename A, typename B> static inline int llvm_fcmp_ogt(A X, B Y) { return X >  Y ; }
template <typename A, typename B> static inline int llvm_fcmp_ole(A X, B Y) { return X <= Y ; }
template <typename A, typename B> static inline int llvm_fcmp_oge(A X, B Y) { return X >= Y ; }
template <typename A> A *Memset(A *ptr, int count, size_t len) { return (A *)memset(ptr, count, len); }


static void generateRay___un_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_vyfvyfREFs_LF_vyRay_NF_(l_array_1 (*raster2camera_), l_array_1 (*camera2world_), __vec16_f x_, __vec16_f y_, l_v16_varying_Ray *ray_, __vec16_i1 __mask_) {
  float raster2camera_load_offset_offset_load_;
  __vec16_f raster2camera_load_offset_offset_load_smear_;
  float raster2camera_load19_offset_offset_load_;
  __vec16_f raster2camera_load19_offset_offset_load_smear_;
  float raster2camera_load22_offset_offset_load_;
  __vec16_f raster2camera_load22_offset_offset_load_smear_;
  float raster2camera_load25_offset_offset_load_;
  __vec16_f raster2camera_load25_offset_offset_load_smear_;
  float raster2camera_load29_offset_offset_load_;
  __vec16_f raster2camera_load29_offset_offset_load_smear_;
  float raster2camera_load33_offset_offset_load_;
  __vec16_f raster2camera_load33_offset_offset_load_smear_;
  float raster2camera_load36_offset_offset_load_;
  __vec16_f raster2camera_load36_offset_offset_load_smear_;
  float raster2camera_load39_offset_offset_load_;
  __vec16_f raster2camera_load39_offset_offset_load_smear_;
  __vec16_f div_camx_load_camw_load_;
  __vec16_f div_camy_load_camw_load43_;
  __vec16_f div_camz_load_camw_load45_;
  float camera2world_load_offset_offset_load_;
  __vec16_f camera2world_load_offset_offset_load_smear_;
  float camera2world_load53_offset_offset_load_;
  __vec16_f camera2world_load53_offset_offset_load_smear_;
  float camera2world_load57_offset_offset_load_;
  __vec16_f camera2world_load57_offset_offset_load_smear_;
  float camera2world_load66_offset_offset_load_;
  __vec16_f camera2world_load66_offset_offset_load_smear_;
  float camera2world_load70_offset_offset_load_;
  __vec16_f camera2world_load70_offset_offset_load_smear_;
  float camera2world_load74_offset_offset_load_;
  __vec16_f camera2world_load74_offset_offset_load_smear_;
  float camera2world_load83_offset_offset_load_;
  __vec16_f camera2world_load83_offset_offset_load_smear_;
  float camera2world_load87_offset_offset_load_;
  __vec16_f camera2world_load87_offset_offset_load_smear_;
  float camera2world_load91_offset_offset_load_;
  __vec16_f camera2world_load91_offset_offset_load_smear_;
  float camera2world_load100_offset_offset_load_;
  float *camera2world_load103_offset_offset_;
  float camera2world_load103_offset_offset_load_;
  __vec16_f div_camera2world_load100_offset_offset_load_camera2world_load103_offset_offset_load_smear_;
  float camera2world_load111_offset_offset_load_;
  float camera2world_load114_offset_offset_load_;
  __vec16_f div_camera2world_load111_offset_offset_load_camera2world_load114_offset_offset_load_smear_;
  float camera2world_load122_offset_offset_load_;
  float camera2world_load125_offset_offset_load_;
  __vec16_f div_camera2world_load122_offset_offset_load_camera2world_load125_offset_offset_load_smear_;
  l_array_2 ray_load132133_dir_;
  __vec16_f ray_load132133_dir_extract_0_;
  __vec16_f ray_load132133_dir_extract_1_;
  __vec16_f ray_load132133_dir_extract_2_;
  __vec16_f (*struct_ptr_ptr_);
  __vec16_f (*struct_ptr_ptr140_);
  __vec16_f (*struct_ptr_ptr142_);
  __vec16_f ray_load145146147_x_;
  __vec16_i1 bitop_2e_i_and_mask_;
  bool calltmp_2e_i_;
  __vec16_f ray_load156157158_y_;
  __vec16_i1 bitop_2e_i186_and_mask_;
  bool calltmp_2e_i187_;
  __vec16_f ray_load172173174_z_;
  __vec16_i1 bitop_2e_i188_and_mask_;
  bool calltmp_2e_i189_;

  __masked_store_float(((&ray_->field4)), __setzero_float<__vec16_f>(), __mask_);
  __masked_store_float(((&ray_->field5)), __smear_float<__vec16_f>(0x1.93e594p+99), __mask_);
  __masked_store_i32(((&ray_->field6)), __setzero_i32<__vec16_i32>(), __mask_);
  raster2camera_load_offset_offset_load_ = *((&(*raster2camera_).array[((int64_t )0ull)]));
  raster2camera_load_offset_offset_load_smear_ = __smear_float<__vec16_f>(raster2camera_load_offset_offset_load_);
  raster2camera_load19_offset_offset_load_ = *((&(*raster2camera_).array[((int64_t )1ull)]));
  raster2camera_load19_offset_offset_load_smear_ = __smear_float<__vec16_f>(raster2camera_load19_offset_offset_load_);
  raster2camera_load22_offset_offset_load_ = *((&(*raster2camera_).array[((int64_t )3ull)]));
  raster2camera_load22_offset_offset_load_smear_ = __smear_float<__vec16_f>(raster2camera_load22_offset_offset_load_);
  raster2camera_load25_offset_offset_load_ = *((&raster2camera_[((int64_t )1ull)].array[((int64_t )0ull)]));
  raster2camera_load25_offset_offset_load_smear_ = __smear_float<__vec16_f>(raster2camera_load25_offset_offset_load_);
  raster2camera_load29_offset_offset_load_ = *((&raster2camera_[((int64_t )1ull)].array[((int64_t )1ull)]));
  raster2camera_load29_offset_offset_load_smear_ = __smear_float<__vec16_f>(raster2camera_load29_offset_offset_load_);
  raster2camera_load33_offset_offset_load_ = *((&raster2camera_[((int64_t )1ull)].array[((int64_t )3ull)]));
  raster2camera_load33_offset_offset_load_smear_ = __smear_float<__vec16_f>(raster2camera_load33_offset_offset_load_);
  raster2camera_load36_offset_offset_load_ = *((&raster2camera_[((int64_t )2ull)].array[((int64_t )3ull)]));
  raster2camera_load36_offset_offset_load_smear_ = __smear_float<__vec16_f>(raster2camera_load36_offset_offset_load_);
  raster2camera_load39_offset_offset_load_ = *((&raster2camera_[((int64_t )3ull)].array[((int64_t )3ull)]));
  raster2camera_load39_offset_offset_load_smear_ = __smear_float<__vec16_f>(raster2camera_load39_offset_offset_load_);
  div_camx_load_camw_load_ = __div((__add(raster2camera_load22_offset_offset_load_smear_, (__add((__mul(raster2camera_load_offset_offset_load_smear_, x_)), (__mul(raster2camera_load19_offset_offset_load_smear_, y_)))))), raster2camera_load39_offset_offset_load_smear_);
  div_camy_load_camw_load43_ = __div((__add(raster2camera_load33_offset_offset_load_smear_, (__add((__mul(raster2camera_load25_offset_offset_load_smear_, x_)), (__mul(raster2camera_load29_offset_offset_load_smear_, y_)))))), raster2camera_load39_offset_offset_load_smear_);
  div_camz_load_camw_load45_ = __div(raster2camera_load36_offset_offset_load_smear_, raster2camera_load39_offset_offset_load_smear_);
  camera2world_load_offset_offset_load_ = *((&(*camera2world_).array[((int64_t )0ull)]));
  camera2world_load_offset_offset_load_smear_ = __smear_float<__vec16_f>(camera2world_load_offset_offset_load_);
  camera2world_load53_offset_offset_load_ = *((&(*camera2world_).array[((int64_t )1ull)]));
  camera2world_load53_offset_offset_load_smear_ = __smear_float<__vec16_f>(camera2world_load53_offset_offset_load_);
  camera2world_load57_offset_offset_load_ = *((&(*camera2world_).array[((int64_t )2ull)]));
  camera2world_load57_offset_offset_load_smear_ = __smear_float<__vec16_f>(camera2world_load57_offset_offset_load_);
  __masked_store_float(((&ray_->field1.array[((int64_t )0ull)])), (__add((__add((__mul(div_camx_load_camw_load_, camera2world_load_offset_offset_load_smear_)), (__mul(div_camy_load_camw_load43_, camera2world_load53_offset_offset_load_smear_)))), (__mul(div_camz_load_camw_load45_, camera2world_load57_offset_offset_load_smear_)))), __mask_);
  camera2world_load66_offset_offset_load_ = *((&camera2world_[((int64_t )1ull)].array[((int64_t )0ull)]));
  camera2world_load66_offset_offset_load_smear_ = __smear_float<__vec16_f>(camera2world_load66_offset_offset_load_);
  camera2world_load70_offset_offset_load_ = *((&camera2world_[((int64_t )1ull)].array[((int64_t )1ull)]));
  camera2world_load70_offset_offset_load_smear_ = __smear_float<__vec16_f>(camera2world_load70_offset_offset_load_);
  camera2world_load74_offset_offset_load_ = *((&camera2world_[((int64_t )1ull)].array[((int64_t )2ull)]));
  camera2world_load74_offset_offset_load_smear_ = __smear_float<__vec16_f>(camera2world_load74_offset_offset_load_);
  __masked_store_float(((&ray_->field1.array[((int64_t )1ull)])), (__add((__add((__mul(div_camx_load_camw_load_, camera2world_load66_offset_offset_load_smear_)), (__mul(div_camy_load_camw_load43_, camera2world_load70_offset_offset_load_smear_)))), (__mul(div_camz_load_camw_load45_, camera2world_load74_offset_offset_load_smear_)))), __mask_);
  camera2world_load83_offset_offset_load_ = *((&camera2world_[((int64_t )2ull)].array[((int64_t )0ull)]));
  camera2world_load83_offset_offset_load_smear_ = __smear_float<__vec16_f>(camera2world_load83_offset_offset_load_);
  camera2world_load87_offset_offset_load_ = *((&camera2world_[((int64_t )2ull)].array[((int64_t )1ull)]));
  camera2world_load87_offset_offset_load_smear_ = __smear_float<__vec16_f>(camera2world_load87_offset_offset_load_);
  camera2world_load91_offset_offset_load_ = *((&camera2world_[((int64_t )2ull)].array[((int64_t )2ull)]));
  camera2world_load91_offset_offset_load_smear_ = __smear_float<__vec16_f>(camera2world_load91_offset_offset_load_);
  __masked_store_float(((&ray_->field1.array[((int64_t )2ull)])), (__add((__add((__mul(div_camx_load_camw_load_, camera2world_load83_offset_offset_load_smear_)), (__mul(div_camy_load_camw_load43_, camera2world_load87_offset_offset_load_smear_)))), (__mul(div_camz_load_camw_load45_, camera2world_load91_offset_offset_load_smear_)))), __mask_);
  camera2world_load100_offset_offset_load_ = *((&(*camera2world_).array[((int64_t )3ull)]));
  camera2world_load103_offset_offset_ = (&camera2world_[((int64_t )3ull)].array[((int64_t )3ull)]);
  camera2world_load103_offset_offset_load_ = *camera2world_load103_offset_offset_;
  div_camera2world_load100_offset_offset_load_camera2world_load103_offset_offset_load_smear_ = __smear_float<__vec16_f>((((float )(camera2world_load100_offset_offset_load_ / camera2world_load103_offset_offset_load_))));
  __masked_store_float(((&ray_->field0.array[((int64_t )0ull)])), div_camera2world_load100_offset_offset_load_camera2world_load103_offset_offset_load_smear_, __mask_);
  camera2world_load111_offset_offset_load_ = *((&camera2world_[((int64_t )1ull)].array[((int64_t )3ull)]));
  camera2world_load114_offset_offset_load_ = *camera2world_load103_offset_offset_;
  div_camera2world_load111_offset_offset_load_camera2world_load114_offset_offset_load_smear_ = __smear_float<__vec16_f>((((float )(camera2world_load111_offset_offset_load_ / camera2world_load114_offset_offset_load_))));
  __masked_store_float(((&ray_->field0.array[((int64_t )1ull)])), div_camera2world_load111_offset_offset_load_camera2world_load114_offset_offset_load_smear_, __mask_);
  camera2world_load122_offset_offset_load_ = *((&camera2world_[((int64_t )2ull)].array[((int64_t )3ull)]));
  camera2world_load125_offset_offset_load_ = *camera2world_load103_offset_offset_;
  div_camera2world_load122_offset_offset_load_camera2world_load125_offset_offset_load_smear_ = __smear_float<__vec16_f>((((float )(camera2world_load122_offset_offset_load_ / camera2world_load125_offset_offset_load_))));
  __masked_store_float(((&ray_->field0.array[((int64_t )2ull)])), div_camera2world_load122_offset_offset_load_camera2world_load125_offset_offset_load_smear_, __mask_);
  ray_load132133_dir_ = *((&ray_->field1));
  ray_load132133_dir_extract_0_ = (ray_load132133_dir_.array[0]);
  ray_load132133_dir_extract_1_ = (ray_load132133_dir_.array[1]);
  ray_load132133_dir_extract_2_ = (ray_load132133_dir_.array[2]);
  struct_ptr_ptr_ = (&ray_->field2.array[((int64_t )0ull)]);
  __masked_store_float(struct_ptr_ptr_, (__div(__smear_float<__vec16_f>(0x1p+0), ray_load132133_dir_extract_0_)), __mask_);
  struct_ptr_ptr140_ = (&ray_->field2.array[((int64_t )1ull)]);
  __masked_store_float(struct_ptr_ptr140_, (__div(__smear_float<__vec16_f>(0x1p+0), ray_load132133_dir_extract_1_)), __mask_);
  struct_ptr_ptr142_ = (&ray_->field2.array[((int64_t )2ull)]);
  __masked_store_float(struct_ptr_ptr142_, (__div(__smear_float<__vec16_f>(0x1p+0), ray_load132133_dir_extract_2_)), __mask_);
  ray_load145146147_x_ = __load<1>(struct_ptr_ptr_);
  bitop_2e_i_and_mask_ = __less_than_float_and_mask(ray_load145146147_x_, __setzero_float<__vec16_f>(), __mask_);
  calltmp_2e_i_ = (( /*tail*/ __any(bitop_2e_i_and_mask_))&1);
  *((&ray_->field3.array[((int64_t )0ull)])) = (((uint32_t )(bool )calltmp_2e_i_));
  ray_load156157158_y_ = __load<1>(struct_ptr_ptr140_);
  bitop_2e_i186_and_mask_ = __less_than_float_and_mask(ray_load156157158_y_, __setzero_float<__vec16_f>(), __mask_);
  calltmp_2e_i187_ = (( /*tail*/ __any(bitop_2e_i186_and_mask_))&1);
  *((&ray_->field3.array[((int64_t )1ull)])) = (((uint32_t )(bool )calltmp_2e_i187_));
  ray_load172173174_z_ = __load<1>(struct_ptr_ptr142_);
  bitop_2e_i188_and_mask_ = __less_than_float_and_mask(ray_load172173174_z_, __setzero_float<__vec16_f>(), __mask_);
  calltmp_2e_i189_ = (( /*tail*/ __any(bitop_2e_i188_and_mask_))&1);
  *((&ray_->field3.array[((int64_t )2ull)])) = (((uint32_t )(bool )calltmp_2e_i189_));
  return;
}



__vec16_i32 BVHIntersect___un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_REFs_LF_vyRay_NF_(l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *tris_, l_v16_varying_Ray *r_, __vec16_i1 __mask_) {
  l_v16_varying_Ray ray_;    /* Address-exposed local */
  l_array_7 todo_;    /* Address-exposed local */
  l_v16_varying_Ray r_load_load_;
  __vec16_f (*ray_load26_2e_i_);
  __vec16_f (*ray_load2930_2e_i_);
  l_array_2 (*ray_load3334_2e_i_);
  l_array_2 (*ray_load3839_2e_i_);
  l_array_2 (*ray_load47_2e_i_);
  __vec16_i32 (*ray_load150151_2e_i_);
  __vec16_i32 v1_2e_i124143_2e_ph_;
  __vec16_i32 v1_2e_i124143_2e_ph___PHI;
  uint32_t todoOffset_2e_0_2e_ph_;
  uint32_t todoOffset_2e_0_2e_ph___PHI;
  uint32_t nodeNum_2e_0_2e_ph_;
  uint32_t nodeNum_2e_0_2e_ph___PHI;
  uint32_t todoOffset_2e_0_;
  uint32_t todoOffset_2e_0___PHI;
  uint32_t nodeNum_2e_0_;
  uint32_t nodeNum_2e_0___PHI;
  l_v16_uniform_LinearBVHNode nodes_load_offset_load_;
  l_array_4 nodes_load_offset_load98_;
  l_array_5 nodes_load_offset_load98103_;
  float nodes_load_offset_load98103108_;
  float nodes_load_offset_load98103109_;
  float nodes_load_offset_load98103110_;
  l_array_5 nodes_load_offset_load98104_;
  float nodes_load_offset_load98104105_;
  float nodes_load_offset_load98104106_;
  float nodes_load_offset_load98104107_;
  uint32_t nodes_load_offset_load99_;
  uint8_t nodes_load_offset_load100_;
  uint8_t nodes_load_offset_load101_;
  __vec16_f tmp__1_;
  __vec16_f tmp__2_;
  __vec16_f tmp__3_;
  __vec16_f tmp__4_;
  __vec16_f tmp__5_;
  __vec16_f tmp__6_;
  __vec16_f ray_load26_mint_2e_i_;
  __vec16_f ray_load2930_maxt_2e_i_;
  l_array_2 ray_load3334_origin_2e_i_;
  __vec16_f ray_load3334_origin_extract_0_2e_i_;
  __vec16_f ray_load3334_origin_extract_1_2e_i_;
  __vec16_f ray_load3334_origin_extract_2_2e_i_;
  l_array_2 ray_load3839_invDir_2e_i_;
  __vec16_f ray_load3839_invDir_extract_0_2e_i_;
  __vec16_f tmp__7_;
  __vec16_f ray_load3839_invDir_extract_1_2e_i_;
  __vec16_f tmp__8_;
  __vec16_f ray_load3839_invDir_extract_2_2e_i_;
  __vec16_f tmp__9_;
  l_array_2 ray_load4445_origin_2e_i_;
  __vec16_f ray_load4445_origin_extract_0_2e_i_;
  __vec16_f ray_load4445_origin_extract_1_2e_i_;
  __vec16_f ray_load4445_origin_extract_2_2e_i_;
  l_array_2 ray_load4950_invDir_2e_i_;
  __vec16_f ray_load4950_invDir_extract_0_2e_i_;
  __vec16_f tmp__10_;
  __vec16_f ray_load4950_invDir_extract_1_2e_i_;
  __vec16_f tmp__11_;
  __vec16_f ray_load4950_invDir_extract_2_2e_i_;
  __vec16_f tmp__12_;
  __vec16_i1 greater_tNear54_x_tFar56_x_2e_i_;
  __vec16_i1 internal_mask_26_function_mask62_2e_i_and_mask_;
  bool internal_mask_26_function_mask62_any_2e_i_;
  __vec16_f _insert_053_insert_1_insert_2_2e_i146165_;
  __vec16_f _insert_053_insert_1_insert_2_2e_i146165___PHI;
  __vec16_f _insert_042_insert_1_insert_2_2e_i159162_;
  __vec16_f _insert_042_insert_1_insert_2_2e_i159162___PHI;
  __vec16_f calltmp_2e_i_2e_i_;
  __vec16_f calltmp_2e_i188_2e_i_;
  __vec16_i1 greater_tNear86_y_tFar88_y_2e_i_;
  __vec16_i1 internal_mask_26_function_mask98_2e_i_and_mask_;
  bool internal_mask_26_function_mask98_any_2e_i_;
  __vec16_f v1_2e_i_;
  __vec16_f v1_2e_i142_;
  __vec16_f _insert_053_insert_1_insert_2_2e_i147166_;
  __vec16_f _insert_053_insert_1_insert_2_2e_i147166___PHI;
  __vec16_f _insert_042_insert_1_insert_2_2e_i160163_;
  __vec16_f _insert_042_insert_1_insert_2_2e_i160163___PHI;
  __vec16_f calltmp_2e_i189_2e_i_;
  __vec16_f calltmp_2e_i190_2e_i_;
  __vec16_i1 greater_tNear133_z_tFar135_z_2e_i_;
  __vec16_i1 internal_mask_26_function_mask145_2e_i_and_mask_;
  bool internal_mask_26_function_mask145_any_2e_i_;
  __vec16_f v1_2e_i140_;
  __vec16_f v1_2e_i138_;
  __vec16_f v1_2e_i136_;
  __vec16_f v1_2e_i134_;
  __vec16_f _insert_053_insert_1_insert_2_2e_i148167_;
  __vec16_f _insert_053_insert_1_insert_2_2e_i148167___PHI;
  __vec16_f _insert_042_insert_1_insert_2_2e_i161164_;
  __vec16_f _insert_042_insert_1_insert_2_2e_i161164___PHI;
  __vec16_f calltmp_2e_i191_2e_i_;
  __vec16_f calltmp_2e_i192_2e_i_;
  __vec16_i1 bitop_2e_i_and_mask_;
  bool calltmp_2e_i_;
  __vec16_i32 v1_2e_i124145_;
  __vec16_i32 v1_2e_i124145___PHI;
  __vec16_f ray81_maxt_;
  __vec16_i32 ray87_hitId_;
  uint32_t node18_nPrimitives_to_uint32_;
  uint32_t r_load5354_offset_load_;
  uint32_t todoOffset_load61_plus1_;
  uint32_t *todo_offset62_;
  uint64_t indvars_2e_iv_;
  uint64_t indvars_2e_iv___PHI;
  __vec16_i32 v1_2e_i124144169_;
  __vec16_i32 v1_2e_i124144169___PHI;
  uint64_t add_primitivesOffset_load_i_load34_to_int64_;
  float tri_load3_offset_offset_load_2e_i_;
  __vec16_f tmp__13_;
  float tri_load78_offset_offset_load_2e_i_;
  __vec16_f tmp__14_;
  float tri_load1213_offset_offset_load_2e_i_;
  __vec16_f tmp__15_;
  float tri_load1718_offset_offset_load_2e_i_;
  __vec16_f tmp__16_;
  float tri_load2223_offset_offset_load_2e_i_;
  __vec16_f tmp__17_;
  float tri_load2728_offset_offset_load_2e_i_;
  __vec16_f tmp__18_;
  float tri_load3233_offset_offset_load_2e_i_;
  __vec16_f tmp__19_;
  float tri_load3738_offset_offset_load_2e_i_;
  __vec16_f tmp__20_;
  float tri_load4243_offset_offset_load_2e_i_;
  __vec16_f tmp__21_;
  __vec16_f sub_p1_load_p0_load_2e_i_;
  __vec16_f sub_p2_load_p0_load46_2e_i_;
  l_array_2 ray_load47_dir_2e_i_;
  __vec16_f e2_load_extract_0_broadcast_2e_i_;
  __vec16_f e2_load_extract_1_broadcast_2e_i_;
  __vec16_f e2_load_extract_2_broadcast_2e_i_;
  __vec16_f v136_2e_i_2e_i_;
  __vec16_f v137_2e_i_2e_i_;
  __vec16_f v138_2e_i_2e_i_;
  __vec16_f sub_mul_v1y_load_v2z_load_mul_v1z_load_v2y_load_2e_i_2e_i_;
  __vec16_f sub_mul_v1z_load17_v2x_load_mul_v1x_load_v2z_load18_2e_i_2e_i_;
  __vec16_f sub_mul_v1x_load20_v2y_load21_mul_v1y_load22_v2x_load23_2e_i_2e_i_;
  __vec16_f e1_load_extract_0_broadcast_2e_i_;
  __vec16_f e1_load_extract_1_broadcast_2e_i_;
  __vec16_f e1_load_extract_2_broadcast_2e_i_;
  __vec16_f add_add_mul_a13_x_b25_x_mul_a17_y_b29_y_mul_a111_z_b213_z_2e_i_2e_i_;
  __vec16_f div__divisor_load62_2e_i_;
  l_array_2 ray_load6364_origin_2e_i_;
  __vec16_f ray_load6364_origin_extract_0_2e_i_;
  __vec16_f tmp__22_;
  __vec16_f ray_load6364_origin_extract_1_2e_i_;
  __vec16_f tmp__23_;
  __vec16_f ray_load6364_origin_extract_2_2e_i_;
  __vec16_f tmp__24_;
  __vec16_f mul_calltmp73_invDivisor_load_2e_i_;
  __vec16_f sub_mul_v1y_load_v2z_load_mul_v1z_load_v2y_load_2e_i201_2e_i_;
  __vec16_f sub_mul_v1z_load17_v2x_load_mul_v1x_load_v2z_load18_2e_i204_2e_i_;
  __vec16_f sub_mul_v1x_load20_v2y_load21_mul_v1y_load22_v2x_load23_2e_i207_2e_i_;
  l_array_2 ray_load9192_dir_2e_i_;
  __vec16_f a19_2e_i213_2e_i_;
  __vec16_f a20_2e_i214_2e_i_;
  __vec16_f a21_2e_i215_2e_i_;
  __vec16_f mul_calltmp97_invDivisor_load98_2e_i_;
  __vec16_f mul_calltmp117_invDivisor_load118_2e_i_;
  __vec16_f ray_load119120_mint_2e_i_;
  __vec16_f ray_load124125_maxt_2e_i_;
  __vec16_i1 hit_load_to_bool_2e_i179180181_;
  __vec16_i1 hit_load_to_bool_2e_i179180_;
  __vec16_i1 hit_load_to_bool_2e_i179_;
  __vec16_i1 hit_load_to_bool_2e_i_;
  __vec16_i1 internal_mask_26_function_mask144_2e_i_;
  bool internal_mask_26_function_mask144_any_2e_i_;
  uint32_t tri_load152153_id_2e_i_;
  __vec16_i32 tri_load152153_id_2e_i_smear_;
  __vec16_i32 v1_2e_i124_;
  uint64_t indvars_2e_iv_2e_next_;
  uint32_t todoOffset_load49_minus1_;
  uint32_t todo_offset_load_;
  uint32_t add_nodeNum_load70__;
  uint32_t todoOffset_load76_minus1_;
  uint32_t todo_offset77_load_;

  r_load_load_ = *r_;
  *(&ray_) = r_load_load_;
  ray_load26_2e_i_ = (&ray_.field4);
  ray_load2930_2e_i_ = (&ray_.field5);
  ray_load3334_2e_i_ = (&ray_.field0);
  ray_load3839_2e_i_ = (&ray_.field2);
  ray_load47_2e_i_ = (&ray_.field1);
  ray_load150151_2e_i_ = (&ray_.field6);
  v1_2e_i124143_2e_ph___PHI = __setzero_i32<__vec16_i32>();   /* for PHI node */
  todoOffset_2e_0_2e_ph___PHI = 0u;   /* for PHI node */
  nodeNum_2e_0_2e_ph___PHI = 0u;   /* for PHI node */
  goto for_loop_2e_outer_label;

  do {     /* Syntactic loop 'for_loop.outer' to make GCC happy */
for_loop_2e_outer_label: {
  v1_2e_i124143_2e_ph_ = v1_2e_i124143_2e_ph___PHI;
  todoOffset_2e_0_2e_ph_ = todoOffset_2e_0_2e_ph___PHI;
  nodeNum_2e_0_2e_ph_ = nodeNum_2e_0_2e_ph___PHI;
  todoOffset_2e_0___PHI = todoOffset_2e_0_2e_ph_;   /* for PHI node */
  nodeNum_2e_0___PHI = nodeNum_2e_0_2e_ph_;   /* for PHI node */
  goto for_loop_label;

}
  do {     /* Syntactic loop 'for_loop' to make GCC happy */
for_loop_label: {
  todoOffset_2e_0_ = todoOffset_2e_0___PHI;
  nodeNum_2e_0_ = nodeNum_2e_0___PHI;
  nodes_load_offset_load_ = *((&nodes_[((int64_t )(((int64_t )(int32_t )nodeNum_2e_0_)))]));
  nodes_load_offset_load98_ = (nodes_load_offset_load_.field0);
  nodes_load_offset_load98103_ = (nodes_load_offset_load98_.array[0]);
  nodes_load_offset_load98103108_ = (nodes_load_offset_load98103_.array[0]);
  nodes_load_offset_load98103109_ = (nodes_load_offset_load98103_.array[1]);
  nodes_load_offset_load98103110_ = (nodes_load_offset_load98103_.array[2]);
  nodes_load_offset_load98104_ = (nodes_load_offset_load98_.array[1]);
  nodes_load_offset_load98104105_ = (nodes_load_offset_load98104_.array[0]);
  nodes_load_offset_load98104106_ = (nodes_load_offset_load98104_.array[1]);
  nodes_load_offset_load98104107_ = (nodes_load_offset_load98104_.array[2]);
  nodes_load_offset_load99_ = (nodes_load_offset_load_.field1);
  nodes_load_offset_load100_ = (nodes_load_offset_load_.field2);
  nodes_load_offset_load101_ = (nodes_load_offset_load_.field3);
  tmp__1_ = __vec16_f ( /* UNDEF */);
  __insert_element(&tmp__1_, 0u, nodes_load_offset_load98103108_);
  tmp__2_ = tmp__1_;
  __insert_element(&tmp__2_, 1u, nodes_load_offset_load98103109_);
  tmp__3_ = tmp__2_;
  __insert_element(&tmp__3_, 2u, nodes_load_offset_load98103110_);
  tmp__4_ = __vec16_f ( /* UNDEF */);
  __insert_element(&tmp__4_, 0u, nodes_load_offset_load98104105_);
  tmp__5_ = tmp__4_;
  __insert_element(&tmp__5_, 1u, nodes_load_offset_load98104106_);
  tmp__6_ = tmp__5_;
  __insert_element(&tmp__6_, 2u, nodes_load_offset_load98104107_);
  ray_load26_mint_2e_i_ = __load<64>(ray_load26_2e_i_);
  ray_load2930_maxt_2e_i_ = __load<64>(ray_load2930_2e_i_);
  ray_load3334_origin_2e_i_ = *ray_load3334_2e_i_;
  ray_load3334_origin_extract_0_2e_i_ = (ray_load3334_origin_2e_i_.array[0]);
  ray_load3334_origin_extract_1_2e_i_ = (ray_load3334_origin_2e_i_.array[1]);
  ray_load3334_origin_extract_2_2e_i_ = (ray_load3334_origin_2e_i_.array[2]);
  ray_load3839_invDir_2e_i_ = *ray_load3839_2e_i_;
  ray_load3839_invDir_extract_0_2e_i_ = (ray_load3839_invDir_2e_i_.array[0]);
  tmp__7_ = __mul(ray_load3839_invDir_extract_0_2e_i_, (__sub((__vec16_f (((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0], ((float *)(&tmp__3_))[0])), ray_load3334_origin_extract_0_2e_i_)));
  ray_load3839_invDir_extract_1_2e_i_ = (ray_load3839_invDir_2e_i_.array[1]);
  tmp__8_ = __mul(ray_load3839_invDir_extract_1_2e_i_, (__sub((__vec16_f (((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1], ((float *)(&tmp__3_))[1])), ray_load3334_origin_extract_1_2e_i_)));
  ray_load3839_invDir_extract_2_2e_i_ = (ray_load3839_invDir_2e_i_.array[2]);
  tmp__9_ = __mul(ray_load3839_invDir_extract_2_2e_i_, (__sub((__vec16_f (((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2], ((float *)(&tmp__3_))[2])), ray_load3334_origin_extract_2_2e_i_)));
  ray_load4445_origin_2e_i_ = *ray_load3334_2e_i_;
  ray_load4445_origin_extract_0_2e_i_ = (ray_load4445_origin_2e_i_.array[0]);
  ray_load4445_origin_extract_1_2e_i_ = (ray_load4445_origin_2e_i_.array[1]);
  ray_load4445_origin_extract_2_2e_i_ = (ray_load4445_origin_2e_i_.array[2]);
  ray_load4950_invDir_2e_i_ = *ray_load3839_2e_i_;
  ray_load4950_invDir_extract_0_2e_i_ = (ray_load4950_invDir_2e_i_.array[0]);
  tmp__10_ = __mul(ray_load4950_invDir_extract_0_2e_i_, (__sub((__vec16_f (((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0], ((float *)(&tmp__6_))[0])), ray_load4445_origin_extract_0_2e_i_)));
  ray_load4950_invDir_extract_1_2e_i_ = (ray_load4950_invDir_2e_i_.array[1]);
  tmp__11_ = __mul(ray_load4950_invDir_extract_1_2e_i_, (__sub((__vec16_f (((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1], ((float *)(&tmp__6_))[1])), ray_load4445_origin_extract_1_2e_i_)));
  ray_load4950_invDir_extract_2_2e_i_ = (ray_load4950_invDir_2e_i_.array[2]);
  tmp__12_ = __mul(ray_load4950_invDir_extract_2_2e_i_, (__sub((__vec16_f (((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2], ((float *)(&tmp__6_))[2])), ray_load4445_origin_extract_2_2e_i_)));
  greater_tNear54_x_tFar56_x_2e_i_ = __greater_than_float(tmp__7_, tmp__10_);
  internal_mask_26_function_mask62_2e_i_and_mask_ = __greater_than_float_and_mask(tmp__7_, tmp__10_, __mask_);
  internal_mask_26_function_mask62_any_2e_i_ = ((__any(internal_mask_26_function_mask62_2e_i_and_mask_))&1);
  if (internal_mask_26_function_mask62_any_2e_i_) {
    goto safe_if_run_true_2e_i_label;
  } else {
    _insert_053_insert_1_insert_2_2e_i146165___PHI = tmp__10_;   /* for PHI node */
    _insert_042_insert_1_insert_2_2e_i159162___PHI = tmp__7_;   /* for PHI node */
    goto safe_if_after_true_2e_i_label;
  }

}
safe_if_run_true_2e_i_label: {
  v1_2e_i_ = __select(greater_tNear54_x_tFar56_x_2e_i_, tmp__10_, tmp__7_);
  v1_2e_i142_ = __select(greater_tNear54_x_tFar56_x_2e_i_, tmp__7_, tmp__10_);
  _insert_053_insert_1_insert_2_2e_i146165___PHI = v1_2e_i142_;   /* for PHI node */
  _insert_042_insert_1_insert_2_2e_i159162___PHI = v1_2e_i_;   /* for PHI node */
  goto safe_if_after_true_2e_i_label;

}
safe_if_after_true_2e_i_label: {
  _insert_053_insert_1_insert_2_2e_i146165_ = _insert_053_insert_1_insert_2_2e_i146165___PHI;
  _insert_042_insert_1_insert_2_2e_i159162_ = _insert_042_insert_1_insert_2_2e_i159162___PHI;
  calltmp_2e_i_2e_i_ = __max_varying_float(_insert_042_insert_1_insert_2_2e_i159162_, ray_load26_mint_2e_i_);
  calltmp_2e_i188_2e_i_ = __min_varying_float(_insert_053_insert_1_insert_2_2e_i146165_, ray_load2930_maxt_2e_i_);
  greater_tNear86_y_tFar88_y_2e_i_ = __greater_than_float(tmp__8_, tmp__11_);
  internal_mask_26_function_mask98_2e_i_and_mask_ = __greater_than_float_and_mask(tmp__8_, tmp__11_, __mask_);
  internal_mask_26_function_mask98_any_2e_i_ = ((__any(internal_mask_26_function_mask98_2e_i_and_mask_))&1);
  if (internal_mask_26_function_mask98_any_2e_i_) {
    goto safe_if_run_true93_2e_i_label;
  } else {
    _insert_053_insert_1_insert_2_2e_i147166___PHI = tmp__11_;   /* for PHI node */
    _insert_042_insert_1_insert_2_2e_i160163___PHI = tmp__8_;   /* for PHI node */
    goto safe_if_after_true92_2e_i_label;
  }

}
safe_if_run_true93_2e_i_label: {
  v1_2e_i140_ = __select(greater_tNear86_y_tFar88_y_2e_i_, tmp__11_, tmp__8_);
  v1_2e_i138_ = __select(greater_tNear86_y_tFar88_y_2e_i_, tmp__8_, tmp__11_);
  _insert_053_insert_1_insert_2_2e_i147166___PHI = v1_2e_i138_;   /* for PHI node */
  _insert_042_insert_1_insert_2_2e_i160163___PHI = v1_2e_i140_;   /* for PHI node */
  goto safe_if_after_true92_2e_i_label;

}
safe_if_after_true92_2e_i_label: {
  _insert_053_insert_1_insert_2_2e_i147166_ = _insert_053_insert_1_insert_2_2e_i147166___PHI;
  _insert_042_insert_1_insert_2_2e_i160163_ = _insert_042_insert_1_insert_2_2e_i160163___PHI;
  calltmp_2e_i189_2e_i_ = __max_varying_float(_insert_042_insert_1_insert_2_2e_i160163_, calltmp_2e_i_2e_i_);
  calltmp_2e_i190_2e_i_ = __min_varying_float(_insert_053_insert_1_insert_2_2e_i147166_, calltmp_2e_i188_2e_i_);
  greater_tNear133_z_tFar135_z_2e_i_ = __greater_than_float(tmp__9_, tmp__12_);
  internal_mask_26_function_mask145_2e_i_and_mask_ = __greater_than_float_and_mask(tmp__9_, tmp__12_, __mask_);
  internal_mask_26_function_mask145_any_2e_i_ = ((__any(internal_mask_26_function_mask145_2e_i_and_mask_))&1);
  if (internal_mask_26_function_mask145_any_2e_i_) {
    goto safe_if_run_true140_2e_i_label;
  } else {
    _insert_053_insert_1_insert_2_2e_i148167___PHI = tmp__12_;   /* for PHI node */
    _insert_042_insert_1_insert_2_2e_i161164___PHI = tmp__9_;   /* for PHI node */
    goto BBoxIntersect___un_3C_Cunf_5b_3_5d__3E_REFs_5b__c_vyRay_5d__2e_exit_label;
  }

}
safe_if_run_true140_2e_i_label: {
  v1_2e_i136_ = __select(greater_tNear133_z_tFar135_z_2e_i_, tmp__12_, tmp__9_);
  v1_2e_i134_ = __select(greater_tNear133_z_tFar135_z_2e_i_, tmp__9_, tmp__12_);
  _insert_053_insert_1_insert_2_2e_i148167___PHI = v1_2e_i134_;   /* for PHI node */
  _insert_042_insert_1_insert_2_2e_i161164___PHI = v1_2e_i136_;   /* for PHI node */
  goto BBoxIntersect___un_3C_Cunf_5b_3_5d__3E_REFs_5b__c_vyRay_5d__2e_exit_label;

}
BBoxIntersect___un_3C_Cunf_5b_3_5d__3E_REFs_5b__c_vyRay_5d__2e_exit_label: {
  _insert_053_insert_1_insert_2_2e_i148167_ = _insert_053_insert_1_insert_2_2e_i148167___PHI;
  _insert_042_insert_1_insert_2_2e_i161164_ = _insert_042_insert_1_insert_2_2e_i161164___PHI;
  calltmp_2e_i191_2e_i_ = __max_varying_float(_insert_042_insert_1_insert_2_2e_i161164_, calltmp_2e_i189_2e_i_);
  calltmp_2e_i192_2e_i_ = __min_varying_float(_insert_053_insert_1_insert_2_2e_i148167_, calltmp_2e_i190_2e_i_);
  bitop_2e_i_and_mask_ = __not_equal_i32_and_mask(((__cast_zext(__vec16_i32 (), (__less_equal_float(calltmp_2e_i191_2e_i_, calltmp_2e_i192_2e_i_))))), __setzero_i32<__vec16_i32>(), __mask_);
  calltmp_2e_i_ = ((__any(bitop_2e_i_and_mask_))&1);
  if (calltmp_2e_i_) {
    goto if_then_label;
  } else {
    goto if_else_label;
  }

}
if_else_label: {
  if ((todoOffset_2e_0_ == 0u)) {
    v1_2e_i124145___PHI = v1_2e_i124143_2e_ph_;   /* for PHI node */
    goto for_exit_label;
  } else {
    goto if_exit75_label;
  }

}
if_exit75_label: {
  todoOffset_load76_minus1_ = ((uint32_t )(((uint32_t )todoOffset_2e_0_) + ((uint32_t )4294967295u)));
  todo_offset77_load_ = *((&todo_.array[((int64_t )(((int64_t )(int32_t )todoOffset_load76_minus1_)))]));
  todoOffset_2e_0___PHI = todoOffset_load76_minus1_;   /* for PHI node */
  nodeNum_2e_0___PHI = todo_offset77_load_;   /* for PHI node */
  goto for_loop_label;

}
if_then_label: {
  node18_nPrimitives_to_uint32_ = ((uint32_t )(uint8_t )nodes_load_offset_load100_);
  if ((nodes_load_offset_load100_ == ((uint8_t )0))) {
    goto if_else22_label;
  } else {
    indvars_2e_iv___PHI = 0ull;   /* for PHI node */
    v1_2e_i124144169___PHI = v1_2e_i124143_2e_ph_;   /* for PHI node */
    goto for_loop28_label;
  }

}
if_else22_label: {
  r_load5354_offset_load_ = *((&r_->field3.array[((int64_t )(((uint64_t )(uint8_t )nodes_load_offset_load101_)))]));
  todoOffset_load61_plus1_ = ((uint32_t )(((uint32_t )todoOffset_2e_0_) + ((uint32_t )1u)));
  todo_offset62_ = (&todo_.array[((int64_t )(((int64_t )(int32_t )todoOffset_2e_0_)))]);
  if ((r_load5354_offset_load_ == 0u)) {
    goto if_else59_label;
  } else {
    goto if_then58_label;
  }

}
if_then58_label: {
  *todo_offset62_ = (((uint32_t )(((uint32_t )nodeNum_2e_0_) + ((uint32_t )1u))));
  todoOffset_2e_0___PHI = todoOffset_load61_plus1_;   /* for PHI node */
  nodeNum_2e_0___PHI = nodes_load_offset_load99_;   /* for PHI node */
  goto for_loop_label;

}
if_else59_label: {
  *todo_offset62_ = nodes_load_offset_load99_;
  add_nodeNum_load70__ = ((uint32_t )(((uint32_t )nodeNum_2e_0_) + ((uint32_t )1u)));
  todoOffset_2e_0___PHI = todoOffset_load61_plus1_;   /* for PHI node */
  nodeNum_2e_0___PHI = add_nodeNum_load70__;   /* for PHI node */
  goto for_loop_label;

}
  } while (1); /* end of syntactic loop 'for_loop' */
  do {     /* Syntactic loop 'for_loop28' to make GCC happy */
for_loop28_label: {
  indvars_2e_iv_ = indvars_2e_iv___PHI;
  v1_2e_i124144169_ = v1_2e_i124144169___PHI;
  add_primitivesOffset_load_i_load34_to_int64_ = ((uint64_t )(uint32_t )(((uint32_t )(((uint32_t )(((uint32_t )indvars_2e_iv_))) + ((uint32_t )nodes_load_offset_load99_)))));
  tri_load3_offset_offset_load_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field0.array[((int64_t )0ull)].array[((int64_t )0ull)]));
  tmp__13_ = __vec16_f ( /* UNDEF */);
  __insert_element(&tmp__13_, 0u, tri_load3_offset_offset_load_2e_i_);
  tri_load78_offset_offset_load_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field0.array[((int64_t )0ull)].array[((int64_t )1ull)]));
  tmp__14_ = tmp__13_;
  __insert_element(&tmp__14_, 1u, tri_load78_offset_offset_load_2e_i_);
  tri_load1213_offset_offset_load_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field0.array[((int64_t )0ull)].array[((int64_t )2ull)]));
  tmp__15_ = tmp__14_;
  __insert_element(&tmp__15_, 2u, tri_load1213_offset_offset_load_2e_i_);
  tri_load1718_offset_offset_load_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field0.array[((int64_t )1ull)].array[((int64_t )0ull)]));
  tmp__16_ = __vec16_f ( /* UNDEF */);
  __insert_element(&tmp__16_, 0u, tri_load1718_offset_offset_load_2e_i_);
  tri_load2223_offset_offset_load_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field0.array[((int64_t )1ull)].array[((int64_t )1ull)]));
  tmp__17_ = tmp__16_;
  __insert_element(&tmp__17_, 1u, tri_load2223_offset_offset_load_2e_i_);
  tri_load2728_offset_offset_load_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field0.array[((int64_t )1ull)].array[((int64_t )2ull)]));
  tmp__18_ = tmp__17_;
  __insert_element(&tmp__18_, 2u, tri_load2728_offset_offset_load_2e_i_);
  tri_load3233_offset_offset_load_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field0.array[((int64_t )2ull)].array[((int64_t )0ull)]));
  tmp__19_ = __vec16_f ( /* UNDEF */);
  __insert_element(&tmp__19_, 0u, tri_load3233_offset_offset_load_2e_i_);
  tri_load3738_offset_offset_load_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field0.array[((int64_t )2ull)].array[((int64_t )1ull)]));
  tmp__20_ = tmp__19_;
  __insert_element(&tmp__20_, 1u, tri_load3738_offset_offset_load_2e_i_);
  tri_load4243_offset_offset_load_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field0.array[((int64_t )2ull)].array[((int64_t )2ull)]));
  tmp__21_ = tmp__20_;
  __insert_element(&tmp__21_, 2u, tri_load4243_offset_offset_load_2e_i_);
  sub_p1_load_p0_load_2e_i_ = __sub(tmp__18_, tmp__15_);
  sub_p2_load_p0_load46_2e_i_ = __sub(tmp__21_, tmp__15_);
  ray_load47_dir_2e_i_ = *ray_load47_2e_i_;
  e2_load_extract_0_broadcast_2e_i_ = __vec16_f (((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0], ((float *)(&sub_p2_load_p0_load46_2e_i_))[0]);
  e2_load_extract_1_broadcast_2e_i_ = __vec16_f (((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1], ((float *)(&sub_p2_load_p0_load46_2e_i_))[1]);
  e2_load_extract_2_broadcast_2e_i_ = __vec16_f (((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2], ((float *)(&sub_p2_load_p0_load46_2e_i_))[2]);
  v136_2e_i_2e_i_ = (ray_load47_dir_2e_i_.array[0]);
  v137_2e_i_2e_i_ = (ray_load47_dir_2e_i_.array[1]);
  v138_2e_i_2e_i_ = (ray_load47_dir_2e_i_.array[2]);
  sub_mul_v1y_load_v2z_load_mul_v1z_load_v2y_load_2e_i_2e_i_ = __sub((__mul(v137_2e_i_2e_i_, e2_load_extract_2_broadcast_2e_i_)), (__mul(v138_2e_i_2e_i_, e2_load_extract_1_broadcast_2e_i_)));
  sub_mul_v1z_load17_v2x_load_mul_v1x_load_v2z_load18_2e_i_2e_i_ = __sub((__mul(v138_2e_i_2e_i_, e2_load_extract_0_broadcast_2e_i_)), (__mul(v136_2e_i_2e_i_, e2_load_extract_2_broadcast_2e_i_)));
  sub_mul_v1x_load20_v2y_load21_mul_v1y_load22_v2x_load23_2e_i_2e_i_ = __sub((__mul(v136_2e_i_2e_i_, e2_load_extract_1_broadcast_2e_i_)), (__mul(v137_2e_i_2e_i_, e2_load_extract_0_broadcast_2e_i_)));
  e1_load_extract_0_broadcast_2e_i_ = __vec16_f (((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0], ((float *)(&sub_p1_load_p0_load_2e_i_))[0]);
  e1_load_extract_1_broadcast_2e_i_ = __vec16_f (((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1], ((float *)(&sub_p1_load_p0_load_2e_i_))[1]);
  e1_load_extract_2_broadcast_2e_i_ = __vec16_f (((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2], ((float *)(&sub_p1_load_p0_load_2e_i_))[2]);
  add_add_mul_a13_x_b25_x_mul_a17_y_b29_y_mul_a111_z_b213_z_2e_i_2e_i_ = __add((__mul(e1_load_extract_2_broadcast_2e_i_, sub_mul_v1x_load20_v2y_load21_mul_v1y_load22_v2x_load23_2e_i_2e_i_)), (__add((__mul(e1_load_extract_0_broadcast_2e_i_, sub_mul_v1y_load_v2z_load_mul_v1z_load_v2y_load_2e_i_2e_i_)), (__mul(e1_load_extract_1_broadcast_2e_i_, sub_mul_v1z_load17_v2x_load_mul_v1x_load_v2z_load18_2e_i_2e_i_)))));
  div__divisor_load62_2e_i_ = __div(__smear_float<__vec16_f>(0x1p+0), add_add_mul_a13_x_b25_x_mul_a17_y_b29_y_mul_a111_z_b213_z_2e_i_2e_i_);
  ray_load6364_origin_2e_i_ = *ray_load3334_2e_i_;
  ray_load6364_origin_extract_0_2e_i_ = (ray_load6364_origin_2e_i_.array[0]);
  tmp__22_ = __sub(ray_load6364_origin_extract_0_2e_i_, (__vec16_f (((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0], ((float *)(&tmp__15_))[0])));
  ray_load6364_origin_extract_1_2e_i_ = (ray_load6364_origin_2e_i_.array[1]);
  tmp__23_ = __sub(ray_load6364_origin_extract_1_2e_i_, (__vec16_f (((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1], ((float *)(&tmp__15_))[1])));
  ray_load6364_origin_extract_2_2e_i_ = (ray_load6364_origin_2e_i_.array[2]);
  tmp__24_ = __sub(ray_load6364_origin_extract_2_2e_i_, (__vec16_f (((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2], ((float *)(&tmp__15_))[2])));
  mul_calltmp73_invDivisor_load_2e_i_ = __mul(div__divisor_load62_2e_i_, (__add((__mul(tmp__24_, sub_mul_v1x_load20_v2y_load21_mul_v1y_load22_v2x_load23_2e_i_2e_i_)), (__add((__mul(tmp__22_, sub_mul_v1y_load_v2z_load_mul_v1z_load_v2y_load_2e_i_2e_i_)), (__mul(tmp__23_, sub_mul_v1z_load17_v2x_load_mul_v1x_load_v2z_load18_2e_i_2e_i_)))))));
  sub_mul_v1y_load_v2z_load_mul_v1z_load_v2y_load_2e_i201_2e_i_ = __sub((__mul(e1_load_extract_2_broadcast_2e_i_, tmp__23_)), (__mul(e1_load_extract_1_broadcast_2e_i_, tmp__24_)));
  sub_mul_v1z_load17_v2x_load_mul_v1x_load_v2z_load18_2e_i204_2e_i_ = __sub((__mul(e1_load_extract_0_broadcast_2e_i_, tmp__24_)), (__mul(e1_load_extract_2_broadcast_2e_i_, tmp__22_)));
  sub_mul_v1x_load20_v2y_load21_mul_v1y_load22_v2x_load23_2e_i207_2e_i_ = __sub((__mul(e1_load_extract_1_broadcast_2e_i_, tmp__22_)), (__mul(e1_load_extract_0_broadcast_2e_i_, tmp__23_)));
  ray_load9192_dir_2e_i_ = *ray_load47_2e_i_;
  a19_2e_i213_2e_i_ = (ray_load9192_dir_2e_i_.array[0]);
  a20_2e_i214_2e_i_ = (ray_load9192_dir_2e_i_.array[1]);
  a21_2e_i215_2e_i_ = (ray_load9192_dir_2e_i_.array[2]);
  mul_calltmp97_invDivisor_load98_2e_i_ = __mul(div__divisor_load62_2e_i_, (__add((__mul(a21_2e_i215_2e_i_, sub_mul_v1x_load20_v2y_load21_mul_v1y_load22_v2x_load23_2e_i207_2e_i_)), (__add((__mul(a19_2e_i213_2e_i_, sub_mul_v1y_load_v2z_load_mul_v1z_load_v2y_load_2e_i201_2e_i_)), (__mul(a20_2e_i214_2e_i_, sub_mul_v1z_load17_v2x_load_mul_v1x_load_v2z_load18_2e_i204_2e_i_)))))));
  mul_calltmp117_invDivisor_load118_2e_i_ = __mul(div__divisor_load62_2e_i_, (__add((__mul(e2_load_extract_2_broadcast_2e_i_, sub_mul_v1x_load20_v2y_load21_mul_v1y_load22_v2x_load23_2e_i207_2e_i_)), (__add((__mul(e2_load_extract_0_broadcast_2e_i_, sub_mul_v1y_load_v2z_load_mul_v1z_load_v2y_load_2e_i201_2e_i_)), (__mul(e2_load_extract_1_broadcast_2e_i_, sub_mul_v1z_load17_v2x_load_mul_v1x_load_v2z_load18_2e_i204_2e_i_)))))));
  ray_load119120_mint_2e_i_ = __load<64>(ray_load26_2e_i_);
  ray_load124125_maxt_2e_i_ = __load<64>(ray_load2930_2e_i_);
  hit_load_to_bool_2e_i179180181_ = __select((__equal_float(add_add_mul_a13_x_b25_x_mul_a17_y_b29_y_mul_a111_z_b213_z_2e_i_2e_i_, __setzero_float<__vec16_f>())), __setzero_i1<__vec16_i1>(), __smear_i1<__vec16_i1>(1));
  hit_load_to_bool_2e_i179180_ = __select((__or((__less_than_float(mul_calltmp73_invDivisor_load_2e_i_, __setzero_float<__vec16_f>())), (__greater_than_float(mul_calltmp73_invDivisor_load_2e_i_, __smear_float<__vec16_f>(0x1p+0))))), __setzero_i1<__vec16_i1>(), hit_load_to_bool_2e_i179180181_);
  hit_load_to_bool_2e_i179_ = __select((__or((__less_than_float(mul_calltmp97_invDivisor_load98_2e_i_, __setzero_float<__vec16_f>())), (__greater_than_float((__add(mul_calltmp73_invDivisor_load_2e_i_, mul_calltmp97_invDivisor_load98_2e_i_)), __smear_float<__vec16_f>(0x1p+0))))), __setzero_i1<__vec16_i1>(), hit_load_to_bool_2e_i179180_);
  hit_load_to_bool_2e_i_ = __select((__or((__less_than_float(mul_calltmp117_invDivisor_load118_2e_i_, ray_load119120_mint_2e_i_)), (__greater_than_float(mul_calltmp117_invDivisor_load118_2e_i_, ray_load124125_maxt_2e_i_)))), __setzero_i1<__vec16_i1>(), hit_load_to_bool_2e_i179_);
  internal_mask_26_function_mask144_2e_i_ = __and(hit_load_to_bool_2e_i_, __mask_);
  internal_mask_26_function_mask144_any_2e_i_ = ((__any(internal_mask_26_function_mask144_2e_i_))&1);
  if (internal_mask_26_function_mask144_any_2e_i_) {
    goto safe_if_run_true_2e_i95_label;
  } else {
    goto TriIntersect___REFs_5b__c_unTriangle_5d_REFs_5b_vyRay_5d__2e_exit_label;
  }

}
safe_if_run_true_2e_i95_label: {
  __masked_store_float(ray_load2930_2e_i_, mul_calltmp117_invDivisor_load118_2e_i_, internal_mask_26_function_mask144_2e_i_);
  tri_load152153_id_2e_i_ = *((&tris_[((int64_t )add_primitivesOffset_load_i_load34_to_int64_)].field1));
  tri_load152153_id_2e_i_smear_ = __smear_i32<__vec16_i32>(tri_load152153_id_2e_i_);
  __masked_store_i32(ray_load150151_2e_i_, tri_load152153_id_2e_i_smear_, internal_mask_26_function_mask144_2e_i_);
  goto TriIntersect___REFs_5b__c_unTriangle_5d_REFs_5b_vyRay_5d__2e_exit_label;

}
TriIntersect___REFs_5b__c_unTriangle_5d_REFs_5b_vyRay_5d__2e_exit_label: {
  v1_2e_i124_ = __select(hit_load_to_bool_2e_i_, __smear_i32<__vec16_i32>(1u), v1_2e_i124144169_);
  indvars_2e_iv_2e_next_ = ((uint64_t )(((uint64_t )indvars_2e_iv_) + ((uint64_t )1ull)));
  if ((((uint32_t )(((uint32_t )indvars_2e_iv_2e_next_))) < ((uint32_t )node18_nPrimitives_to_uint32_))) {
    indvars_2e_iv___PHI = indvars_2e_iv_2e_next_;   /* for PHI node */
    v1_2e_i124144169___PHI = v1_2e_i124_;   /* for PHI node */
    goto for_loop28_label;
  } else {
    goto for_exit29_label;
  }

}
  } while (1); /* end of syntactic loop 'for_loop28' */
for_exit29_label: {
  if ((todoOffset_2e_0_ == 0u)) {
    v1_2e_i124145___PHI = v1_2e_i124_;   /* for PHI node */
    goto for_exit_label;
  } else {
    goto if_exit48_label;
  }

}
if_exit48_label: {
  todoOffset_load49_minus1_ = ((uint32_t )(((uint32_t )todoOffset_2e_0_) + ((uint32_t )4294967295u)));
  todo_offset_load_ = *((&todo_.array[((int64_t )(((int64_t )(int32_t )todoOffset_load49_minus1_)))]));
  v1_2e_i124143_2e_ph___PHI = v1_2e_i124_;   /* for PHI node */
  todoOffset_2e_0_2e_ph___PHI = todoOffset_load49_minus1_;   /* for PHI node */
  nodeNum_2e_0_2e_ph___PHI = todo_offset_load_;   /* for PHI node */
  goto for_loop_2e_outer_label;

}
  } while (1); /* end of syntactic loop 'for_loop.outer' */
for_exit_label: {
  v1_2e_i124145_ = v1_2e_i124145___PHI;
  ray81_maxt_ = __load<64>(ray_load2930_2e_i_);
  __masked_store_float(((&r_->field5)), ray81_maxt_, __mask_);
  ray87_hitId_ = __load<64>(ray_load150151_2e_i_);
  __masked_store_i32(((&r_->field6)), ray87_hitId_, __mask_);
  return v1_2e_i124145_;
}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant0[] = { 0u, 0u, 0u, 0u, 1u, 1u, 1u, 1u, 2u, 2u, 2u, 2u, 3u, 3u, 3u, 3u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant1[] = { 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant2[] = { 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant3[] = { 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant4[] = { 0u, 0u, 0u, 0u, 1u, 1u, 1u, 1u, 2u, 2u, 2u, 2u, 3u, 3u, 3u, 3u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant5[] = { 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant6[] = { 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u, 0u, 1u, 2u, 3u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant7[] = { 0u, 0u, 0u, 0u, 1u, 1u, 1u, 1u, 2u, 2u, 2u, 2u, 3u, 3u, 3u, 3u,  };

static void raytrace_tile___uniuniuniuniuniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(uint32_t x0_, uint32_t x1_, uint32_t y0_, uint32_t y1_, uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_) {
  l_v16_varying_Ray ray_;    /* Address-exposed local */
  l_v16_varying_Ray ray89_;    /* Address-exposed local */
  uint32_t aligned_end_;
  uint32_t aligned_end24_;
  __vec16_i32 y0_smear_;
  __vec16_i32 iter_val11_;
  __vec16_i32 y1_smear_;
  __vec16_i32 x1_smear_;
  __vec16_f div_baseWidth_load_to_float_width_load_to_float_smear_;
  __vec16_f div_baseHeight_load_to_float_height_load_to_float_smear_;
  __vec16_i32 width_smear_;
  __vec16_f (*ray89109_);
  uint8_t *image_load108_ptr2int_2void_;
  __vec16_i32 (*ray89117_);
  uint8_t *id_load116_ptr2int_2void_;
  __vec16_f (*ray59_);
  __vec16_i32 (*ray66_);
  __vec16_i32 iter_val_2e_us_2e_pn_;
  __vec16_i32 iter_val_2e_us_2e_pn___PHI;
  uint32_t counter_2e_014_2e_us_;
  uint32_t counter_2e_014_2e_us___PHI;
  __vec16_i1 cmp16_2e_us_;
  uint32_t counter25_2e_3_2e_lcssa_2e_us_;
  uint32_t counter25_2e_3_2e_lcssa_2e_us___PHI;
  __vec16_i32 counter25_2e_3_2e_lcssa_2e_us_smear_;
  __vec16_i32 iter_val81_2e_us_;
  __vec16_i1 cmp84_2e_us_;
  uint32_t counter25_2e_38_2e_us_;
  uint32_t counter25_2e_38_2e_us___PHI;
  __vec16_i32 counter25_2e_38_2e_us_smear_;
  __vec16_i32 iter_val50_2e_us_;
  __vec16_i32 calltmp_2e_us_;
  __vec16_i32 add_mul_y_load56_width_load57_broadcast_x_load58_2e_us_;
  __vec16_f ray59_maxt_2e_us_;
  __vec16_i32 ray66_hitId_2e_us_;
  uint32_t new_counter76_2e_us_;
  uint32_t counter25_2e_2_2e_us_;
  uint32_t counter25_2e_2_2e_us___PHI;
  __vec16_i32 counter25_2e_2_2e_us_smear_;
  __vec16_i32 iter_val33_2e_us_;
  __vec16_i1 extras_mask_2e_us_and_mask_;
  uint32_t counter25_2e_0_2e_us_;
  uint32_t counter25_2e_0_2e_us___PHI;
  __vec16_i32 x_2e_0_2e_us_;
  __vec16_i32 x_2e_0_2e_us___PHI;
  bool step_index_2e_0_2e_us_;
  bool step_index_2e_0_2e_us___PHI;
  __vec16_i1 internal_mask_memory_2e_0_2e_us_;
  __vec16_i1 internal_mask_memory_2e_0_2e_us___PHI;
  __vec16_i32 calltmp102_2e_us_;
  __vec16_i32 add_mul_y_load104_width_load105_broadcast_x_load106_2e_us_;
  __vec16_f ray89109_maxt_2e_us_;
  __vec16_i32 ray89117_hitId_2e_us_;
  uint32_t new_counter_2e_us_;
  __vec16_i32 new_counter_2e_us_smear_;
  __vec16_i32 iter_val_2e_us_;
  uint32_t new_counter129_2e_us_;
  __vec16_f mul_y_load_to_float_heightScale_load_broadcast_2e_us_;
  __vec16_i32 mul_y_load56_width_load57_broadcast_2e_us_;
  uint32_t counter25_2e_38_;
  uint32_t counter25_2e_38___PHI;
  __vec16_i32 counter25_2e_38_smear_;
  __vec16_i32 iter_val50_;
  __vec16_i32 calltmp_;
  __vec16_i32 add_mul_y_load56_width_load57_broadcast_x_load58_;
  __vec16_f ray59_maxt_;
  __vec16_i32 ray66_hitId_;
  uint32_t new_counter76_;
  __vec16_i32 counter25_2e_3_2e_lcssa_smear_;
  __vec16_i32 iter_val81_;
  __vec16_i1 cmp84_;
  __vec16_i32 calltmp102_;
  __vec16_i32 add_mul_y_load104_width_load105_broadcast_x_load106_;
  __vec16_f ray89109_maxt_;
  __vec16_i32 ray89117_hitId_;
  uint32_t new_counter_;
  __vec16_i32 new_counter_smear_;
  __vec16_i32 iter_val_;
  __vec16_i32 iter_val15_;
  __vec16_i32 iter_val15___PHI;
  uint32_t counter_2e_014_;
  uint32_t counter_2e_014___PHI;
  __vec16_f mul_y_load_to_float_heightScale_load_broadcast_;
  __vec16_i32 mul_y_load56_width_load57_broadcast_;
  uint32_t counter25_2e_3_2e_lcssa_;
  uint32_t counter25_2e_3_2e_lcssa___PHI;

  aligned_end_ = ((uint32_t )(((uint32_t )y1_) - ((uint32_t )(((int32_t )(((int32_t )(((uint32_t )(((uint32_t )y1_) - ((uint32_t )y0_))))) % ((int32_t )4u)))))));
  aligned_end24_ = ((uint32_t )(((uint32_t )x1_) - ((uint32_t )(((int32_t )(((int32_t )(((uint32_t )(((uint32_t )x1_) - ((uint32_t )x0_))))) % ((int32_t )4u)))))));
  y0_smear_ = __smear_i32<__vec16_i32>(y0_);
  iter_val11_ = __add(y0_smear_, __load<64>((const __vec16_i32  *)(VectorConstant7)));
  y1_smear_ = __smear_i32<__vec16_i32>(y1_);
  if ((((int32_t )y0_) < ((int32_t )y1_))) {
    goto foreach_test21_2e_lr_2e_ph_label;
  } else {
    goto foreach_reset_label;
  }

foreach_test21_2e_lr_2e_ph_label: {
  x1_smear_ = __smear_i32<__vec16_i32>(x1_);
  div_baseWidth_load_to_float_width_load_to_float_smear_ = __smear_float<__vec16_f>((((float )((((float )(int32_t )baseWidth_)) / (((float )(int32_t )width_))))));
  div_baseHeight_load_to_float_height_load_to_float_smear_ = __smear_float<__vec16_f>((((float )((((float )(int32_t )baseHeight_)) / (((float )(int32_t )height_))))));
  width_smear_ = __smear_i32<__vec16_i32>(width_);
  ray89109_ = (&ray89_.field5);
  image_load108_ptr2int_2void_ = ((uint8_t *)image_);
  ray89117_ = (&ray89_.field6);
  id_load116_ptr2int_2void_ = ((uint8_t *)id_);
  ray59_ = (&ray_.field5);
  ray66_ = (&ray_.field6);
  if ((((int32_t )aligned_end_) < ((int32_t )y1_))) {
    iter_val_2e_us_2e_pn___PHI = iter_val11_;   /* for PHI node */
    counter_2e_014_2e_us___PHI = y0_;   /* for PHI node */
    goto foreach_test21_2e_us_label;
  } else {
    iter_val15___PHI = iter_val11_;   /* for PHI node */
    counter_2e_014___PHI = y0_;   /* for PHI node */
    goto outer_not_in_extras_2e_preheader_label;
  }

}
  do {     /* Syntactic loop 'foreach_test21.us' to make GCC happy */
foreach_test21_2e_us_label: {
  iter_val_2e_us_2e_pn_ = iter_val_2e_us_2e_pn___PHI;
  counter_2e_014_2e_us_ = counter_2e_014_2e_us___PHI;
  cmp16_2e_us_ = __signed_less_than_i32(iter_val_2e_us_2e_pn_, y1_smear_);
  if ((counter_2e_014_2e_us_ == aligned_end_)) {
    counter25_2e_2_2e_us___PHI = x0_;   /* for PHI node */
    goto outer_in_extras_2e_us_label;
  } else {
    goto outer_not_in_extras_2e_preheader_2e_us_label;
  }

}
outer_not_in_extras_2e_preheader_2e_us_label: {
  if ((((int32_t )aligned_end24_) > ((int32_t )x0_))) {
    goto foreach_full_body_2e_lr_2e_ph_2e_us_label;
  } else {
    counter25_2e_3_2e_lcssa_2e_us___PHI = x0_;   /* for PHI node */
    goto partial_inner_all_outer_2e_us_label;
  }

}
foreach_full_body_2e_lr_2e_ph_2e_us_label: {
  mul_y_load_to_float_heightScale_load_broadcast_2e_us_ = __mul(div_baseHeight_load_to_float_height_load_to_float_smear_, ((__cast_sitofp(__vec16_f (), iter_val_2e_us_2e_pn_))));
  mul_y_load56_width_load57_broadcast_2e_us_ = __mul(iter_val_2e_us_2e_pn_, width_smear_);
  counter25_2e_38_2e_us___PHI = x0_;   /* for PHI node */
  goto foreach_full_body_2e_us_label;

}
  do {     /* Syntactic loop 'foreach_full_body.us' to make GCC happy */
foreach_full_body_2e_us_label: {
  counter25_2e_38_2e_us_ = counter25_2e_38_2e_us___PHI;
  counter25_2e_38_2e_us_smear_ = __smear_i32<__vec16_i32>(counter25_2e_38_2e_us_);
  iter_val50_2e_us_ = __add(counter25_2e_38_2e_us_smear_, __load<64>((const __vec16_i32  *)(VectorConstant6)));
  generateRay___un_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_vyfvyfREFs_LF_vyRay_NF_(raster2camera_, camera2world_, (__mul(div_baseWidth_load_to_float_width_load_to_float_smear_, ((__cast_sitofp(__vec16_f (), iter_val50_2e_us_))))), mul_y_load_to_float_heightScale_load_broadcast_2e_us_, (&ray_), __smear_i1<__vec16_i1>(1));
  calltmp_2e_us_ = BVHIntersect___un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_REFs_LF_vyRay_NF_(nodes_, triangles_, (&ray_), __smear_i1<__vec16_i1>(1));
  add_mul_y_load56_width_load57_broadcast_x_load58_2e_us_ = __add(mul_y_load56_width_load57_broadcast_2e_us_, iter_val50_2e_us_);
  ray59_maxt_2e_us_ = __load<64>(ray59_);
  __scatter_base_offsets32_float(image_load108_ptr2int_2void_, 4u, add_mul_y_load56_width_load57_broadcast_x_load58_2e_us_, ray59_maxt_2e_us_, __smear_i1<__vec16_i1>(1));
  ray66_hitId_2e_us_ = __load<64>(ray66_);
  __scatter_base_offsets32_i32(id_load116_ptr2int_2void_, 4u, add_mul_y_load56_width_load57_broadcast_x_load58_2e_us_, ray66_hitId_2e_us_, __smear_i1<__vec16_i1>(1));
  new_counter76_2e_us_ = ((uint32_t )(((uint32_t )counter25_2e_38_2e_us_) + ((uint32_t )4u)));
  if ((((int32_t )new_counter76_2e_us_) < ((int32_t )aligned_end24_))) {
    counter25_2e_38_2e_us___PHI = new_counter76_2e_us_;   /* for PHI node */
    goto foreach_full_body_2e_us_label;
  } else {
    counter25_2e_3_2e_lcssa_2e_us___PHI = new_counter76_2e_us_;   /* for PHI node */
    goto partial_inner_all_outer_2e_us_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body.us' */
partial_inner_all_outer_2e_us_label: {
  counter25_2e_3_2e_lcssa_2e_us_ = counter25_2e_3_2e_lcssa_2e_us___PHI;
  if ((((int32_t )counter25_2e_3_2e_lcssa_2e_us_) < ((int32_t )x1_))) {
    goto partial_inner_only_2e_us_label;
  } else {
    goto foreach_reset20_2e_us_label;
  }

}
partial_inner_only_2e_us_label: {
  counter25_2e_3_2e_lcssa_2e_us_smear_ = __smear_i32<__vec16_i32>(counter25_2e_3_2e_lcssa_2e_us_);
  iter_val81_2e_us_ = __add(counter25_2e_3_2e_lcssa_2e_us_smear_, __load<64>((const __vec16_i32  *)(VectorConstant6)));
  cmp84_2e_us_ = __signed_less_than_i32(iter_val81_2e_us_, x1_smear_);
  counter25_2e_0_2e_us___PHI = counter25_2e_3_2e_lcssa_2e_us_;   /* for PHI node */
  x_2e_0_2e_us___PHI = iter_val81_2e_us_;   /* for PHI node */
  step_index_2e_0_2e_us___PHI = 0;   /* for PHI node */
  internal_mask_memory_2e_0_2e_us___PHI = cmp84_2e_us_;   /* for PHI node */
  goto foreach_masked_body_2e_us_label;

}
outer_in_extras_2e_us_label: {
  counter25_2e_2_2e_us_ = counter25_2e_2_2e_us___PHI;
  counter25_2e_2_2e_us_smear_ = __smear_i32<__vec16_i32>(counter25_2e_2_2e_us_);
  iter_val33_2e_us_ = __add(counter25_2e_2_2e_us_smear_, __load<64>((const __vec16_i32  *)(VectorConstant6)));
  if ((((int32_t )counter25_2e_2_2e_us_) < ((int32_t )aligned_end24_))) {
    counter25_2e_0_2e_us___PHI = counter25_2e_2_2e_us_;   /* for PHI node */
    x_2e_0_2e_us___PHI = iter_val33_2e_us_;   /* for PHI node */
    step_index_2e_0_2e_us___PHI = 1;   /* for PHI node */
    internal_mask_memory_2e_0_2e_us___PHI = cmp16_2e_us_;   /* for PHI node */
    goto foreach_masked_body_2e_us_label;
  } else {
    goto both_partial_2e_us_label;
  }

}
both_partial_2e_us_label: {
  extras_mask_2e_us_and_mask_ = __signed_less_than_i32_and_mask(iter_val_2e_us_2e_pn_, y1_smear_, (__signed_less_than_i32(iter_val33_2e_us_, x1_smear_)));
  counter25_2e_0_2e_us___PHI = counter25_2e_2_2e_us_;   /* for PHI node */
  x_2e_0_2e_us___PHI = iter_val33_2e_us_;   /* for PHI node */
  step_index_2e_0_2e_us___PHI = 0;   /* for PHI node */
  internal_mask_memory_2e_0_2e_us___PHI = extras_mask_2e_us_and_mask_;   /* for PHI node */
  goto foreach_masked_body_2e_us_label;

}
foreach_masked_body_2e_us_label: {
  counter25_2e_0_2e_us_ = counter25_2e_0_2e_us___PHI;
  x_2e_0_2e_us_ = x_2e_0_2e_us___PHI;
  step_index_2e_0_2e_us_ = ((step_index_2e_0_2e_us___PHI)&1);
  internal_mask_memory_2e_0_2e_us_ = internal_mask_memory_2e_0_2e_us___PHI;
  generateRay___un_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_vyfvyfREFs_LF_vyRay_NF_(raster2camera_, camera2world_, (__mul(div_baseWidth_load_to_float_width_load_to_float_smear_, ((__cast_sitofp(__vec16_f (), x_2e_0_2e_us_))))), (__mul(div_baseHeight_load_to_float_height_load_to_float_smear_, ((__cast_sitofp(__vec16_f (), iter_val_2e_us_2e_pn_))))), (&ray89_), internal_mask_memory_2e_0_2e_us_);
  calltmp102_2e_us_ = BVHIntersect___un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_REFs_LF_vyRay_NF_(nodes_, triangles_, (&ray89_), internal_mask_memory_2e_0_2e_us_);
  add_mul_y_load104_width_load105_broadcast_x_load106_2e_us_ = __add((__mul(iter_val_2e_us_2e_pn_, width_smear_)), x_2e_0_2e_us_);
  ray89109_maxt_2e_us_ = __load<64>(ray89109_);
  __scatter_base_offsets32_float(image_load108_ptr2int_2void_, 4u, add_mul_y_load104_width_load105_broadcast_x_load106_2e_us_, ray89109_maxt_2e_us_, internal_mask_memory_2e_0_2e_us_);
  ray89117_hitId_2e_us_ = __load<64>(ray89117_);
  __scatter_base_offsets32_i32(id_load116_ptr2int_2void_, 4u, add_mul_y_load104_width_load105_broadcast_x_load106_2e_us_, ray89117_hitId_2e_us_, internal_mask_memory_2e_0_2e_us_);
  if (step_index_2e_0_2e_us_) {
    goto step_inner_index_2e_us_label;
  } else {
    goto foreach_reset20_2e_us_label;
  }

}
foreach_reset20_2e_us_label: {
  new_counter_2e_us_ = ((uint32_t )(((uint32_t )counter_2e_014_2e_us_) + ((uint32_t )4u)));
  new_counter_2e_us_smear_ = __smear_i32<__vec16_i32>(new_counter_2e_us_);
  iter_val_2e_us_ = __add(new_counter_2e_us_smear_, __load<64>((const __vec16_i32  *)(VectorConstant7)));
  if ((((int32_t )new_counter_2e_us_) < ((int32_t )y1_))) {
    iter_val_2e_us_2e_pn___PHI = iter_val_2e_us_;   /* for PHI node */
    counter_2e_014_2e_us___PHI = new_counter_2e_us_;   /* for PHI node */
    goto foreach_test21_2e_us_label;
  } else {
    goto foreach_reset_label;
  }

}
step_inner_index_2e_us_label: {
  new_counter129_2e_us_ = ((uint32_t )(((uint32_t )counter25_2e_0_2e_us_) + ((uint32_t )4u)));
  counter25_2e_2_2e_us___PHI = new_counter129_2e_us_;   /* for PHI node */
  goto outer_in_extras_2e_us_label;

}
  } while (1); /* end of syntactic loop 'foreach_test21.us' */
foreach_reset_label: {
  return;
}
  do {     /* Syntactic loop 'outer_not_in_extras.preheader' to make GCC happy */
outer_not_in_extras_2e_preheader_label: {
  iter_val15_ = iter_val15___PHI;
  counter_2e_014_ = counter_2e_014___PHI;
  if ((((int32_t )aligned_end24_) > ((int32_t )x0_))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter25_2e_3_2e_lcssa___PHI = x0_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
foreach_full_body_2e_lr_2e_ph_label: {
  mul_y_load_to_float_heightScale_load_broadcast_ = __mul(div_baseHeight_load_to_float_height_load_to_float_smear_, ((__cast_sitofp(__vec16_f (), iter_val15_))));
  mul_y_load56_width_load57_broadcast_ = __mul(iter_val15_, width_smear_);
  counter25_2e_38___PHI = x0_;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter25_2e_38_ = counter25_2e_38___PHI;
  counter25_2e_38_smear_ = __smear_i32<__vec16_i32>(counter25_2e_38_);
  iter_val50_ = __add(counter25_2e_38_smear_, __load<64>((const __vec16_i32  *)(VectorConstant6)));
  generateRay___un_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_vyfvyfREFs_LF_vyRay_NF_(raster2camera_, camera2world_, (__mul(div_baseWidth_load_to_float_width_load_to_float_smear_, ((__cast_sitofp(__vec16_f (), iter_val50_))))), mul_y_load_to_float_heightScale_load_broadcast_, (&ray_), __smear_i1<__vec16_i1>(1));
  calltmp_ = BVHIntersect___un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_REFs_LF_vyRay_NF_(nodes_, triangles_, (&ray_), __smear_i1<__vec16_i1>(1));
  add_mul_y_load56_width_load57_broadcast_x_load58_ = __add(mul_y_load56_width_load57_broadcast_, iter_val50_);
  ray59_maxt_ = __load<64>(ray59_);
  __scatter_base_offsets32_float(image_load108_ptr2int_2void_, 4u, add_mul_y_load56_width_load57_broadcast_x_load58_, ray59_maxt_, __smear_i1<__vec16_i1>(1));
  ray66_hitId_ = __load<64>(ray66_);
  __scatter_base_offsets32_i32(id_load116_ptr2int_2void_, 4u, add_mul_y_load56_width_load57_broadcast_x_load58_, ray66_hitId_, __smear_i1<__vec16_i1>(1));
  new_counter76_ = ((uint32_t )(((uint32_t )counter25_2e_38_) + ((uint32_t )4u)));
  if ((((int32_t )new_counter76_) < ((int32_t )aligned_end24_))) {
    counter25_2e_38___PHI = new_counter76_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter25_2e_3_2e_lcssa___PHI = new_counter76_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
partial_inner_all_outer_label: {
  counter25_2e_3_2e_lcssa_ = counter25_2e_3_2e_lcssa___PHI;
  if ((((int32_t )counter25_2e_3_2e_lcssa_) < ((int32_t )x1_))) {
    goto foreach_masked_body_label;
  } else {
    goto foreach_reset20_label;
  }

}
foreach_masked_body_label: {
  counter25_2e_3_2e_lcssa_smear_ = __smear_i32<__vec16_i32>(counter25_2e_3_2e_lcssa_);
  iter_val81_ = __add(counter25_2e_3_2e_lcssa_smear_, __load<64>((const __vec16_i32  *)(VectorConstant6)));
  cmp84_ = __signed_less_than_i32(iter_val81_, x1_smear_);
  generateRay___un_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_vyfvyfREFs_LF_vyRay_NF_(raster2camera_, camera2world_, (__mul(div_baseWidth_load_to_float_width_load_to_float_smear_, ((__cast_sitofp(__vec16_f (), iter_val81_))))), (__mul(div_baseHeight_load_to_float_height_load_to_float_smear_, ((__cast_sitofp(__vec16_f (), iter_val15_))))), (&ray89_), cmp84_);
  calltmp102_ = BVHIntersect___un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_REFs_LF_vyRay_NF_(nodes_, triangles_, (&ray89_), cmp84_);
  add_mul_y_load104_width_load105_broadcast_x_load106_ = __add((__mul(iter_val15_, width_smear_)), iter_val81_);
  ray89109_maxt_ = __load<64>(ray89109_);
  __scatter_base_offsets32_float(image_load108_ptr2int_2void_, 4u, add_mul_y_load104_width_load105_broadcast_x_load106_, ray89109_maxt_, cmp84_);
  ray89117_hitId_ = __load<64>(ray89117_);
  __scatter_base_offsets32_i32(id_load116_ptr2int_2void_, 4u, add_mul_y_load104_width_load105_broadcast_x_load106_, ray89117_hitId_, cmp84_);
  goto foreach_reset20_label;

}
foreach_reset20_label: {
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_014_) + ((uint32_t )4u)));
  new_counter_smear_ = __smear_i32<__vec16_i32>(new_counter_);
  iter_val_ = __add(new_counter_smear_, __load<64>((const __vec16_i32  *)(VectorConstant7)));
  if ((((int32_t )new_counter_) < ((int32_t )y1_))) {
    iter_val15___PHI = iter_val_;   /* for PHI node */
    counter_2e_014___PHI = new_counter_;   /* for PHI node */
    goto outer_not_in_extras_2e_preheader_label;
  } else {
    goto foreach_reset_label;
  }

}
  } while (1); /* end of syntactic loop 'outer_not_in_extras.preheader' */
}



void raytrace_ispc___uniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_, __vec16_i1 __mask_) {
   /*tail*/ raytrace_tile___uniuniuniuniuniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(0u, width_, 0u, height_, width_, height_, baseWidth_, baseHeight_, raster2camera_, camera2world_, image_, id_, nodes_, triangles_);
  return;
}



void raytrace_tile_task___uniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(l_unnamed_0 *tmp__25_, uint32_t tmp__26_, uint32_t tmp__27_, uint32_t tmp__28_, uint32_t tmp__29_) {
  uint32_t width2_;
  uint32_t height4_;
  uint32_t baseWidth6_;
  uint32_t baseHeight8_;
  l_array_1 (*raster2camera10_);
  l_array_1 (*camera2world12_);
  float *image14_;
  uint32_t *id16_;
  l_v16_uniform_LinearBVHNode *nodes18_;
  l_v16_uniform_Triangle *triangles20_;
  uint32_t div_add_width_load_sub_dx_load__dx_load21_;
  uint32_t mul_mod_taskIndex_load_xBuckets_load_dx_load22_;
  uint32_t calltmp_2e_i_;
  uint32_t mul_div_taskIndex_load27_xBuckets_load28_dy_load_;
  uint32_t calltmp_2e_i39_;

  width2_ = *((&tmp__25_->field0));
  height4_ = *((&tmp__25_->field1));
  baseWidth6_ = *((&tmp__25_->field2));
  baseHeight8_ = *((&tmp__25_->field3));
  raster2camera10_ = *((&tmp__25_->field4));
  camera2world12_ = *((&tmp__25_->field5));
  image14_ = *((&tmp__25_->field6));
  id16_ = *((&tmp__25_->field7));
  nodes18_ = *((&tmp__25_->field8));
  triangles20_ = *((&tmp__25_->field9));
  div_add_width_load_sub_dx_load__dx_load21_ = ((int32_t )(((int32_t )(((uint32_t )(((uint32_t )width2_) + ((uint32_t )15u))))) / ((int32_t )16u)));
  mul_mod_taskIndex_load_xBuckets_load_dx_load22_ = (((uint32_t )(((uint32_t )tmp__28_) % ((uint32_t )div_add_width_load_sub_dx_load__dx_load21_)))) << 4u;
  calltmp_2e_i_ =  /*tail*/ __min_uniform_int32((((uint32_t )(((uint32_t )mul_mod_taskIndex_load_xBuckets_load_dx_load22_) + ((uint32_t )16u)))), width2_);
  mul_div_taskIndex_load27_xBuckets_load28_dy_load_ = (((uint32_t )(((uint32_t )tmp__28_) / ((uint32_t )div_add_width_load_sub_dx_load__dx_load21_)))) << 4u;
  calltmp_2e_i39_ =  /*tail*/ __min_uniform_int32((((uint32_t )(((uint32_t )mul_div_taskIndex_load27_xBuckets_load28_dy_load_) + ((uint32_t )16u)))), height4_);
   /*tail*/ raytrace_tile___uniuniuniuniuniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(mul_mod_taskIndex_load_xBuckets_load_dx_load22_, calltmp_2e_i_, mul_div_taskIndex_load27_xBuckets_load28_dy_load_, calltmp_2e_i39_, width2_, height4_, baseWidth6_, baseHeight8_, raster2camera10_, camera2world12_, image14_, id16_, nodes18_, triangles20_);
  return;
}



void raytrace_ispc_tasks___uniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_, __vec16_i1 __mask_) {
  uint8_t *launch_group_handle_;    /* Address-exposed local */
  uint8_t *args_ptr_;
  uint8_t *launch_group_handle_load_;

  *(&launch_group_handle_) = ((uint8_t *)/*NULL*/0);
  args_ptr_ = ISPCAlloc((&launch_group_handle_), 72ull, 64u);
  *(((uint32_t *)args_ptr_)) = width_;
  *(((uint32_t *)((&args_ptr_[((int64_t )4ull)])))) = height_;
  *(((uint32_t *)((&args_ptr_[((int64_t )8ull)])))) = baseWidth_;
  *(((uint32_t *)((&args_ptr_[((int64_t )12ull)])))) = baseHeight_;
  *(((l_array_1 (**))((&args_ptr_[((int64_t )16ull)])))) = raster2camera_;
  *(((l_array_1 (**))((&args_ptr_[((int64_t )24ull)])))) = camera2world_;
  *(((float **)((&args_ptr_[((int64_t )32ull)])))) = image_;
  *(((uint32_t **)((&args_ptr_[((int64_t )40ull)])))) = id_;
  *(((l_v16_uniform_LinearBVHNode **)((&args_ptr_[((int64_t )48ull)])))) = nodes_;
  *(((l_v16_uniform_Triangle **)((&args_ptr_[((int64_t )56ull)])))) = triangles_;
  __store<2>((((__vec16_i1 (*))((&args_ptr_[((int64_t )64ull)])))), __mask_);
  ISPCLaunch((&launch_group_handle_), ((uint8_t *)raytrace_tile_task___uniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_), args_ptr_, (((uint32_t )(((uint32_t )(((int32_t )(((int32_t )(((uint32_t )(((uint32_t )height_) + ((uint32_t )15u))))) / ((int32_t )16u))))) * ((uint32_t )(((int32_t )(((int32_t )(((uint32_t )(((uint32_t )width_) + ((uint32_t )15u))))) / ((int32_t )16u)))))))));
  launch_group_handle_load_ = *(&launch_group_handle_);
  if ((launch_group_handle_load_ == ((uint8_t *)/*NULL*/0))) {
    goto post_sync_label;
  } else {
    goto call_sync_label;
  }

call_sync_label: {
  ISPCSync(launch_group_handle_load_);
  *(&launch_group_handle_) = ((uint8_t *)/*NULL*/0);
  goto post_sync_label;

}
post_sync_label: {
  return;
}
}



void raytrace_ispc(uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_) {
   /*tail*/ raytrace_tile___uniuniuniuniuniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_(0u, width_, 0u, height_, width_, height_, baseWidth_, baseHeight_, raster2camera_, camera2world_, image_, id_, nodes_, triangles_);
  return;
}



void raytrace_ispc_tasks(uint32_t width_, uint32_t height_, uint32_t baseWidth_, uint32_t baseHeight_, l_array_1 (*raster2camera_), l_array_1 (*camera2world_), float *image_, uint32_t *id_, l_v16_uniform_LinearBVHNode *nodes_, l_v16_uniform_Triangle *triangles_) {
  uint8_t *launch_group_handle_;    /* Address-exposed local */
  uint8_t *args_ptr_;
  uint8_t *launch_group_handle_load_;

  *(&launch_group_handle_) = ((uint8_t *)/*NULL*/0);
  args_ptr_ = ISPCAlloc((&launch_group_handle_), 72ull, 64u);
  *(((uint32_t *)args_ptr_)) = width_;
  *(((uint32_t *)((&args_ptr_[((int64_t )4ull)])))) = height_;
  *(((uint32_t *)((&args_ptr_[((int64_t )8ull)])))) = baseWidth_;
  *(((uint32_t *)((&args_ptr_[((int64_t )12ull)])))) = baseHeight_;
  *(((l_array_1 (**))((&args_ptr_[((int64_t )16ull)])))) = raster2camera_;
  *(((l_array_1 (**))((&args_ptr_[((int64_t )24ull)])))) = camera2world_;
  *(((float **)((&args_ptr_[((int64_t )32ull)])))) = image_;
  *(((uint32_t **)((&args_ptr_[((int64_t )40ull)])))) = id_;
  *(((l_v16_uniform_LinearBVHNode **)((&args_ptr_[((int64_t )48ull)])))) = nodes_;
  *(((l_v16_uniform_Triangle **)((&args_ptr_[((int64_t )56ull)])))) = triangles_;
  __store<2>((((__vec16_i1 (*))((&args_ptr_[((int64_t )64ull)])))), __smear_i1<__vec16_i1>(1));
  ISPCLaunch((&launch_group_handle_), ((uint8_t *)raytrace_tile_task___uniuniuniuniun_3C_Cunf_LF_4_NF__3E_un_3C_Cunf_LF_4_NF__3E_un_3C_unf_3E_un_3C_uni_3E_un_3C_s_LF__c_unLinearBVHNode_NF__3E_un_3C_s_LF__c_unTriangle_NF__3E_), args_ptr_, (((uint32_t )(((uint32_t )(((int32_t )(((int32_t )(((uint32_t )(((uint32_t )height_) + ((uint32_t )15u))))) / ((int32_t )16u))))) * ((uint32_t )(((int32_t )(((int32_t )(((uint32_t )(((uint32_t )width_) + ((uint32_t )15u))))) / ((int32_t )16u)))))))));
  launch_group_handle_load_ = *(&launch_group_handle_);
  if ((launch_group_handle_load_ == ((uint8_t *)/*NULL*/0))) {
    goto post_sync_label;
  } else {
    goto call_sync_label;
  }

call_sync_label: {
  ISPCSync(launch_group_handle_load_);
  *(&launch_group_handle_) = ((uint8_t *)/*NULL*/0);
  goto post_sync_label;

}
post_sync_label: {
  return;
}
}

